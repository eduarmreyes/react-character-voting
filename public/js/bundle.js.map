{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/AddCharacterActions.js","app/actions/CharacterActions.js","app/actions/CharacterListActions.js","app/actions/FooterActions.js","app/actions/HomeActions.js","app/actions/NavbarActions.js","app/actions/StatsActions.js","app/alt.js","app/components/AddCharacter.js","app/components/App.js","app/components/Character.js","app/components/CharacterList.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/components/Stats.js","app/main.js","app/routes.js","app/stores/AddCharacterStore.js","app/stores/CharacterListStore.js","app/stores/CharacterStore.js","app/stores/FooterStore.js","app/stores/HomeStore.js","app/stores/NavbarStore.js","app/stores/StatsStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"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;;kBAGa,cAAI,WAAJ,CAAgB,WAAhB,C;;;;;;;;;;;AC5Cf;;AACA;;;;AACA;;;;;;;;IAEM,U;AACJ,wBAAc;AAAA;;AACZ,SAAK,WAAL;AACA,SAAK,WAAL,GAAmB,EAAE,MAAM,SAAR,EAAmB,OAAO,CAA1B,EAAnB;AACA,SAAK,gBAAL,GAAwB,EAAE,WAAW,SAAb,EAAwB,OAAO,CAA/B,EAAxB;AACA,SAAK,UAAL,GAAkB,CAAlB;AACA,SAAK,YAAL,GAAoB,CAApB;AACA,SAAK,aAAL,GAAqB,CAArB;AACA,SAAK,aAAL,GAAqB,CAArB;AACA,SAAK,UAAL,GAAkB,CAAlB;AACA,SAAK,WAAL,GAAmB,CAAnB;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,UAAL,GAAkB,CAAlB;AACD;;;;sCAEiB,I,EAAM;AACtB,8BAAO,IAAP,EAAa,IAAb;AACD;;;mCAEc,K,EAAO;AACpB,aAAO,KAAP,CAAa,MAAM,YAAN,CAAmB,OAAhC;AACD;;;;;;kBAGY,cAAI,WAAJ,CAAgB,UAAhB,C;;;AC5BfpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass AddCharacterActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'addCharacterSuccess',\n\t\t\t'addCharacterFail',\n\t\t\t'updateName',\n\t\t\t'updateGender',\n\t\t\t'invalidName',\n\t\t\t'invalidGender',\n\t\t);\n\t}\n\n\taddCharacter(name, gender) {\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: '/api/characters',\n\t\t\tdata: { name: name, gender: gender }\n\t\t})\n\t\t.done((data) => {\n\t\t\tthis.actions.addCharacterSuccess(data.message);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.addCharacterFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(AddCharacterActions);","import alt from '../alt';\n\nclass CharacterActions {\n  constructor() {\n    this.generateActions(\n      'reportSuccess',\n      'reportFail',\n      'getCharacterSuccess',\n      'getCharacterFail'\n    );\n  }\n\n  getCharacter(characterId) {\n    $.ajax({ url: '/api/characters/' + characterId })\n      .done((data) => {\n        this.actions.getCharacterSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterFail(jqXhr);\n      });\n  }\n\n  report(characterId) {\n    $.ajax({\n      type: 'POST',\n      url: '/api/report',\n      data: { characterId: characterId }\n    })\n      .done(() => {\n        this.actions.reportSuccess();\n      })\n      .fail((jqXhr) => {\n        this.actions.reportFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(CharacterActions);","import alt from '../alt';\n\nclass CharacterListActions {\n  constructor() {\n    this.generateActions(\n      'getCharactersSuccess',\n      'getCharactersFail'\n    );\n  }\n\n  getCharacters(payload) {\n    let url = '/api/top';\n    let params = {\n      race: payload.race,\n      bloodline: payload.bloodline\n    };\n\n    if (payload.category === 'female') {\n      params.gender = 'female';\n    } else if (payload.category === 'male') {\n      params.gender = 'male';\n    }\n\n    if (payload.category === 'shame') {\n      url = '/api/shame';\n    }\n\n    $.ajax({ url: url, data: params })\n      .done((data) => {\n        this.actions.getCharactersSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharactersFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(CharacterListActions);","import alt from '../alt';\n\nclass FooterActions {\n\tconstructor() {\n\n\t\tthis.generateActions(\n\t\t\t'getTopCharactersSuccess',\n\t\t\t'getTopCharactersFail'\n\t\t);\n\t}\n\n\tgetTopCharacters() {\n\t\t$.ajax({ url: '/api/top' })\n\t\t\t.done((data) => {\n\t\t\t\tthis.actions.getTopCharactersSuccess(data);\n\t\t\t})\n\t\t\t.fail((jqXhr) => {\n\t\t\t\tthis.actions.getTopCharactersFail(jqXhr);\n\t\t\t});\n\t}\n}\n\nexport default alt.createActions(FooterActions);","import alt from '../alt';\n\nclass HomeActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'getTwoCharactersSuccess',\n\t\t\t'getTwoCharactersFail',\n\t\t\t'voteFail',\n\t\t);\n\t}\n\n\tgetTwoCharacters() {\n\t\t$.ajax({ url: '/api/characters' })\n\t\t.done(data => {\n\t\t\tthis.actions.getTwoCharactersSuccess(data);\n\t\t})\n\t\t.fail(jqXhr => {\n\t\t\tthis.actions.getTwoCharactersFail(jqXhr);\n\t\t});\n\t}\n\n\tvote(winner, loser) {\n\t\t$.ajax({\n\t\t\ttype: 'PUT',\n\t\t\turl: '/api/characters',\n\t\t\tdata: { winner: winner, loser: loser },\n\t\t})\n\t\t.done(() => {\n\t\t\tthis.actions.getTwoCharacters();\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.voteFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(HomeActions);","import alt from '../alt';\nimport { assign } from 'underscore';\n\nclass NavbarActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'updateOnlineUsers',\n\t\t\t'updateAjaxAnimation',\n\t\t\t'updateSearchQuery',\n\t\t\t'getCharacterCountSuccess',\n\t\t\t'getCharacterCountFail',\n\t\t\t'findCharacterSuccess',\n\t\t\t'findCharacterFail',\n\t\t);\n\t}\n\n\tfindCharacter(payload) {\n\t\t$.ajax({\n\t\t\turl: '/api/characters/search',\n\t\t\tdata: { name: payload.searchQuery }\n\t\t})\n\t\t.done((data) => {\n\t\t\tassign(payload, data);\n\t\t\tthis.actions.findCharacterSuccess(payload);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.getCharacterCountFail(jqXhr);\n\t\t});\n\t}\n\n\tgetCharacterCount() {\n\t\t$.ajax({ url: '/api/count' })\n\t\t.done((data) => {\n\t\t\tthis.actions.getCharacterCountSuccess(data);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.getCharacterCountFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(NavbarActions);","import alt from '../alt';\n\nclass StatsActions {\n  constructor() {\n    this.generateActions(\n      'getStatsSuccess',\n      'getStatsFail'\n    );\n  }\n\n  getStats() {\n    $.ajax({ url: '/api/stats' })\n      .done((data) => {\n        this.actions.getStatsSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getStatsFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(StatsActions);","import Alt from 'alt';\n\nexport default new Alt();","import React, { Component } from 'react';\nimport AddCharacterStore from '../stores/AddCharacterStore';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = AddCharacterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AddCharacterStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AddCharacterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var name = this.state.name.trim();\n    var gender = this.state.gender;\n\n    if (!name) {\n      AddCharacterActions.invalidName();\n      this.refs.nameTextField.getDOMNode().focus();\n    }\n\n    if (!gender) {\n      AddCharacterActions.invalidGender();\n    }\n\n    if (name && gender) {\n      AddCharacterActions.addCharacter(name, gender);\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row flipInX animated'>\n          <div className='col-sm-8'>\n            <div className='panel panel-default'>\n              <div className='panel-heading'>Add Character</div>\n              <div className='panel-body'>\n                <form onSubmit={ this.handleSubmit.bind(this) }>\n                  <div className={ 'form-group ' + this.state.nameValidationState }>\n                    <label className='control-label'>Character Name</label>\n                    <input type='text' className='form-control' ref='nameTextField' value={ this.state.name } onChange={ AddCharacterActions.updateName } autoFocus/>\n                    <span className='help-block'>{ this.state.helpBlock }</span>\n                  </div>\n                  <div className={ 'form-group ' + this.state.genderValidationState }>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='female' value='Female' checked={ this.state.gender === 'Female' } onChange={ AddCharacterActions.updateGender }/>\n                      <label htmlFor='female'>Female</label>\n                    </div>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='male' value='Male' checked={ this.state.gender === 'Male' } onChange={ AddCharacterActions.updateGender } />\n                      <label htmlFor='male'>Male</label>\n                    </div>\n                  </div>\n                  <button type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddCharacter;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nclass App extends Component{\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar history={ this.props.history } />\n\t\t\t\t{ this.props.children }\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React, { Component } from 'react';\nimport CharacterStore from '../stores/CharacterStore';\nimport CharacterActions from '../actions/CharacterActions';\n\nclass Character extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = CharacterStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tCharacterStore.listen(this.onChange);\n\t\tCharacterActions.getCharacter(this.props.params.id);\n\n\t\t$('.magnific-popup').magnificPopup({\n\t\t  type: 'image',\n\t\t  mainClass: 'mfp-zoom-in',\n\t\t  closeOnContentClick: true,\n\t\t  midClick: true,\n\t\t  zoom: {\n\t\t    enabled: true,\n\t\t    duration: 300\n\t\t  }\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tCharacterStore.unlisten(this.onChange);\n\t\t$(document.body).removeClass();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevProps.params.id !== this.props.params.id) {\n\t\t\tCharacterActions.getCharacter(this.props.params.id);\n\t\t}\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\trender() {\n\t\treturn (\n    \t<div className='container'>\n    \t\t<div className='profile-img'>\n    \t\t\t<a className='magnific-popup' href={ `https://image.eveonline.com/Character/${this.state.characterId}_1024.jpg` }>\n    \t\t\t\t<img src={`https://image.eveonline.com/Character/${this.state.characterId}_256.jpg`} />\n    \t\t\t</a>\n    \t\t</div>\n    \t\t<div className='profile-info clearfix'>\n    \t\t\t<h2><strong>{ this.state.name }</strong></h2>\n    \t\t\t<h4 className='lead'>Race: <strong>{ this.state.race }</strong></h4>\n    \t\t\t<h4 className='lead'>Bloodline: <strong>{ this.state.bloodline }</strong></h4>\n    \t\t\t<h4 className='lead'>Gender: <strong>{ this.state.gender }</strong></h4>\n    \t\t\t<button className='btn btn-transparent'\n    \t\t\t\tonClick={ CharacterActions.report.bind(this, this.state.characterId) }\n    \t\t\t\tdisabled={ this.state.isReported }>\n    \t\t\t\t{ this.state.isReported ? 'Reported': 'Report Character '}\n  \t\t\t\t</button>\n    \t\t</div>\n    \t\t<div className='profile-stats clearfix'>\n    \t\t\t<ul>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.winLossRatio }</span>Winning Percentage</li>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.wins }</span> Wins</li>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.losses }</span> Losses</li>\n    \t\t\t</ul>\n    \t\t</div>\n    \t</div>\n    );\n\t}\n}\n\nexport default Character;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { isEqual } from 'underscore';\nimport CharacterListStore from '../stores/CharacterListStore';\nimport CharacterListActions from '../actions/CharacterListActions';\n\nclass CharacterList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = CharacterListStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    CharacterListStore.listen(this.onChange);\n    CharacterListActions.getCharacters(this.props.params);\n  }\n\n  componentWillUnmount() {\n    CharacterListStore.unlisten(this.onChange);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.params, this.props.params)) {\n      CharacterListActions.getCharacters(this.props.params);\n    }\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let charactersList = this.state.characters.map((character, index) => {\n      return (\n        <div key={ character.characterId } className='list-group-item animated fadeIn'>\n          <div className='media'>\n            <span className='position pull-left'>{ index + 1 }</span>\n            <div className='pull-left thumb-lg'>\n              <Link to={ `/characters/${character.characterId}` }>\n                <img className='media-object' src={ `http://image.eveonline.com/Character/${character.characterId}_128.jpg` } />\n              </Link>\n            </div>\n            <div className='media-body'>\n              <h4 className='media-heading'>\n                <Link to={ `/characters/${character.characterId}` }>{ character.name }</Link>\n              </h4>\n              <small>Race: <strong>{ character.race }</strong></small>\n              <br />\n              <small>Bloodline: <strong>{ character.bloodline }</strong></small>\n              <br />\n              <small>Wins: <strong>{ character.wins }</strong> Losses: <strong>{ character.losses }</strong></small>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className='container'>\n        <div className='list-group'>\n          { charactersList }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CharacterList;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport FooterStore from '../stores/FooterStore';\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = FooterStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tFooterStore.listen(this.onChange);\n\t\tFooterActions.getTopCharacters();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tFooterStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\trender() {\n   \tlet leaderboardCharacters = this.state.characters.map((character) => {\n   \t  return (\n   \t    <li key={character.characterId}>\n   \t      <Link to={'/characters/' + character.characterId}>\n   \t        <img className='thumb-md' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\n   \t      </Link>\n   \t    </li>\n   \t  )\n   \t});\n\n   \treturn (\n\t\t\t<footer>\n\t\t\t <div className='container'>\n\t\t\t   <div className='row'>\n\t\t\t     <div className='col-sm-5'>\n\t\t\t       <h3 className='lead'><strong>Information</strong> and <strong>Copyright</strong></h3>\n\t\t\t       <p>Powered by <strong>Node.js</strong>, <strong>MongoDB</strong> and <strong>React</strong> with Flux architecture and server-side rendering.</p>\n\t\t\t       <p>You may view the <a href='https://github.com/eduarmreyes/react-character-voting'>Source Code</a> behind this project on GitHub.</p>\n\t\t\t       <p>© 2017 eduarmreyes.</p>\n\t\t\t     </div>\n\t\t\t     <div className='col-sm-7 hidden-xs'>\n\t\t\t       <h3 className='lead'><strong>Leaderboard</strong> Top 5 Characters</h3>\n\t\t\t       <ul className='list-inline'>\n\t\t\t         {leaderboardCharacters}\n\t\t\t       </ul>\n\t\t\t     </div>\n\t\t\t   </div>\n\t\t\t </div>\n\t\t\t</footer>\n    );\n\t}\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport HomeStore from '../stores/HomeStore';\nimport HomeActions from '../actions/HomeActions';\nimport { first, without, findWhere } from 'underscore';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = HomeStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tHomeStore.listen(this.onChange);\n\t\tHomeActions.getTwoCharacters();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tHomeStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\thandleClick(character) {\n\t\tlet winner = character.characterId;\n\t\tlet looser = first(without(this.state.characters, findWhere(this.state.characters, { characterId: winner }))).characterId;\n\t\tHomeActions.vote(winner, looser);\n\t}\n\n\trender() {\n\t\tlet characterNodes = this.state.characters.map((character, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={ character.characterId } className={ index === 0 ? 'col-xs-6 col-sm-6 col-md-5 col-md-offset-1' : 'col-xs-6 col-sm-6 col-md-5' }>\n\t\t\t\t\t<div className='thumbnail fadeInUp animated'>\n\t\t\t\t\t\t<img onClick={ this.handleClick.bind(this, character) } src={ `http://image.eveonline.com/Character/${character.characterId}_512.jpg` } />\n\t\t\t\t\t\t<div className='caption text-center'>\n\t\t\t\t\t\t\t<ul className='list-inline'>\n\t\t\t\t\t\t\t\t<li><strong>Race:</strong> { character.race } </li>\n\t\t\t\t\t\t\t\t<li><strong>Bloodline:</strong> { character.bloodline } </li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<Link to={ `/characters/${character.characterId}`}><strong>{ character.name }</strong></Link>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h3 className='text-center'>Click on the portrait. Select your favorite.</h3>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t{ characterNodes }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = NavbarStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tNavbarStore.listen(this.onChange);\n\t\tNavbarActions.getCharacterCount();\n\n\t\tlet socket = io.connect();\n\n\t\tsocket.on('onlineUsers', (data) => {\n\t\t\tNavbarActions.updateOnlineUsers(data);\n\t\t});\n\n\t\t$(document).ajaxStart(() => {\n\t\t\tNavbarActions.updateAjaxAnimation('fadeIn');\n\t\t});\n\n\t\t$(document).ajaxComplete(() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tNavbarActions.updateAjaxAnimation('fadeOut');\n\t\t\t}, 750);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tNavbarStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tlet searchQuery = this.state.searchQuery.trim();\n\n\t\tif (searchQuery) {\n\t\t\tNavbarActions.findCharacter({\n\t\t\t\tsearchQuery: searchQuery,\n\t\t\t\tsearchForm: this.refs.searchForm,\n\t\t\t\thistory: this.props.history\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n    \t<nav className='navbar navbar-default navbar-static-top'>\n    \t\t<div className='navbar-header'>\n    \t\t\t<button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n\t    \t\t\t<span className='sr-only'>Toggle navigation</span>\n\t    \t\t\t<span className='icon-bar'></span>\n\t    \t\t\t<span className='icon-bar'></span>\n\t    \t\t\t<span className='icon-bar'></span>\n    \t\t\t</button>\n    \t\t\t<Link to='/' alt='React Character Voting' className='navbar-brand'>\n    \t\t\t\t<span ref='triangles' className={ 'triangles animated ' + this.state.ajaxAnimationClass }>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t</span>\n    \t\t\t\tRCV\n    \t\t\t\t<span className='badge badge-up badge-danger'>{ this.state.onlineUsers }</span>\n    \t\t\t</Link>\n    \t\t</div>\n    \t\t<div id='navbar' className='navbar-collapse collapse'>\n    \t\t\t<form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={ this.handleSubmit.bind(this) }>\n    \t\t\t\t<div className='input-group'>\n    \t\t\t\t\t<input type='text' className='form-control' placeholder={ this.state.totalCharacters + ' characters' } value={ this.state.searchQuery } onChange={ NavbarActions.updateSearchQuery } />\n    \t\t\t\t\t<span className='input-group-btn'>\n    \t\t\t\t\t\t<button className='btn btn-default' onClick={ this.handleSubmit.bind(this) }><span className='glyphicon glyphicon-search'></span></button>\n  \t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n    \t\t\t</form>\n    \t\t\t<ul className='nav navbar-nav'>\n    \t\t\t\t<li><Link to='/'>Home</Link></li>\n    \t\t\t\t<li><Link to='/stats'>Stats</Link></li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t\t<a href='#' className='dropdown-toggle' data-toggle='dropdown'>Top 100 <span className='caret'></span></a>\n    \t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t<li><Link to='/top'>Top Overall</Link></li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t\t<Link to='/top/caldari'>Caldari</Link>\n    \t\t\t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/achura'>Achura</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/civire'>Civire</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t\t\t\t</ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t\t<Link to='/top/gallente'>Gallente</Link>\n    \t\t\t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/brutor'>Brutor</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/vherokior'>Vherokior</Link></li>\n    \t\t\t\t\t\t\t</ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t  <Link to='/top/minmatar'>Minmatar</Link>\n    \t\t\t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t\t\t  </ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t  <Link to='/top/amarr'>Amarr</Link>\n    \t\t\t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t\t\t  </ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='divider'></li>\n    \t\t\t\t\t\t<li><Link to='/shame'>Hall of Shame</Link></li>\n    \t\t\t\t\t</ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t  <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Female <span className='caret'></span></a>\n    \t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t    <li><Link to='/female'>All</Link></li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/caldari'>Caldari</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/caldari/achura'>Achura</Link></li>\n    \t\t\t\t        <li><Link to='/female/caldari/civire/'>Civire</Link></li>\n    \t\t\t\t        <li><Link to='/female/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/gallente'>Gallente</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/gallente/gallente'>Gallente</Link></li>\n    \t\t\t\t        <li><Link to='/female/gallente/intaki'>Intaki</Link></li>\n    \t\t\t\t        <li><Link to='/female/gallente/jin-mei'>Jin-Mei</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/minmatar'>Minmatar</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t        <li><Link to='/female/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t        <li><Link to='/female/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/amarr'>Amarr</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t        <li><Link to='/female/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t        <li><Link to='/female/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t  </ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t  <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Male <span className='caret'></span></a>\n    \t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t    <li><Link to='/male'>All</Link></li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/caldari'>Caldari</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/caldari/achura'>Achura</Link></li>\n    \t\t\t\t        <li><Link to='/male/caldari/civire'>Civire</Link></li>\n    \t\t\t\t        <li><Link to='/male/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/gallente'>Gallente</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/gallente/gallente'>Gallente</Link></li>\n    \t\t\t\t        <li><Link to='/male/gallente/intaki'>Intaki</Link></li>\n    \t\t\t\t        <li><Link to='/male/gallente/jin-mei'>Jin-Mei</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/minmatar'>Minmatar</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t        <li><Link to='/male/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t        <li><Link to='/male/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/amarr'>Amarr</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t        <li><Link to='/male/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t        <li><Link to='/male/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t  </ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li><Link to='/add'>Add</Link></li>\n    \t\t\t</ul>\n    \t\t</div>\n    \t</nav>\n    );\n\t}\n}\n\nexport default Navbar;","import React from 'react';\nimport StatsStore from '../stores/StatsStore'\nimport StatsActions from '../actions/StatsActions';\n\nclass Stats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = StatsStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    StatsStore.listen(this.onChange);\n    StatsActions.getStats();\n  }\n\n  componentWillUnmount() {\n    StatsStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='panel panel-default'>\n          <table className='table table-striped'>\n            <thead>\n            <tr>\n              <th colSpan='2'>Stats</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>Leading race in Top 100</td>\n              <td>{this.state.leadingRace.race} with {this.state.leadingRace.count} characters</td>\n            </tr>\n            <tr>\n              <td>Leading bloodline in Top 100</td>\n              <td>{this.state.leadingBloodline.bloodline} with {this.state.leadingBloodline.count} characters\n              </td>\n            </tr>\n            <tr>\n              <td>Amarr Characters</td>\n              <td>{this.state.amarrCount}</td>\n            </tr>\n            <tr>\n              <td>Caldari Characters</td>\n              <td>{this.state.caldariCount}</td>\n            </tr>\n            <tr>\n              <td>Gallente Characters</td>\n              <td>{this.state.gallenteCount}</td>\n            </tr>\n            <tr>\n              <td>Minmatar Characters</td>\n              <td>{this.state.minmatarCount}</td>\n            </tr>\n            <tr>\n              <td>Total votes cast</td>\n              <td>{this.state.totalVotes}</td>\n            </tr>\n            <tr>\n              <td>Female characters</td>\n              <td>{this.state.femaleCount}</td>\n            </tr>\n            <tr>\n              <td>Male characters</td>\n              <td>{this.state.maleCount}</td>\n            </tr>\n            <tr>\n              <td>Total number of characters</td>\n              <td>{this.state.totalCount}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats;","import React from 'react';\nimport Router from 'react-router';\nimport ReactDom from 'react-dom';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\n\nlet history = createBrowserHistory();\n\nReactDom.render(\n\t<Router history={ history }>{ routes }</Router>,\n\tdocument.getElementById('app')\n);","import React from 'react';\nimport { Route } from 'react-router';\nimport App from './components/App';\nimport Home from './components/Home';\nimport AddCharacter from './components/AddCharacter';\nimport Character from './components/Character';\nimport CharacterList from './components/CharacterList';\nimport Stats from './components/Stats';\n\nexport default (\n  <Route component={ App }>\n  \t<Route path='/' component={ Home } />\n  \t<Route path='/add' component= { AddCharacter } />\n  \t<Route path='/characters/:id' component={ Character } />\n  \t<Route path='/shame' component={ CharacterList } />\n  \t<Route path='/stats' component={ Stats } />\n  \t<Route path=':category' component={ CharacterList }>\n  \t  <Route path=':race' component={ CharacterList }>\n  \t    <Route path=':bloodline' component={ CharacterList } />\n  \t  </Route>\n  \t</Route>\n  </Route>\n);","import alt from '../alt';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacterStore {\n  constructor() {\n    this.bindActions(AddCharacterActions);\n    this.name = '';\n    this.gender = '';\n    this.helpBlock = '';\n    this.nameValidationState = '';\n    this.genderValidationState = '';\n  }\n\n  onAddCharacterSuccess(successMessage) {\n    this.nameValidationState = 'has-success';\n    this.helpBlock = successMessage;\n  }\n\n  onAddCharacterFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n    this.nameValidationState = 'has-error';\n    this.helpBlock = errorMsg;\n\t\ttoastr.error(errorMsg);\n  }\n\n  onUpdateName(event) {\n    this.name = event.target.value;\n    this.nameValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdateGender(event) {\n    this.gender = event.target.value;\n    this.genderValidationState = '';\n  }\n\n  onInvalidName() {\n    this.nameValidationState = 'has-error';\n    this.helpBlock = 'Please enter a character name.';\n  }\n\n  onInvalidGender() {\n    this.genderValidationState = 'has-error';\n  }\n}\n\nexport default alt.createStore(AddCharacterStore);","import alt from '../alt';\nimport CharacterListActions from '../actions/CharacterListActions';\n\nclass CharacterListStore {\n  constructor() {\n    this.bindActions(CharacterListActions);\n    this.characters = [];\n  }\n\n  onGetCharactersSuccess(data) {\n    this.characters = data;\n  }\n\n  onGetCharactersFail(jqXhr) {\n  \tlet errorMsg = jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText;\n    toastr.error(errorMsg);\n  }\n}\n\nexport default alt.createStore(CharacterListStore);","import { assign, contains } from 'underscore';\nimport alt from '../alt';\nimport CharacterActions from '../actions/CharacterActions';\n\nclass CharacterStore {\n  constructor() {\n    this.bindActions(CharacterActions);\n    this.characterId = 0;\n    this.name = 'TBD';\n    this.race = 'TBD';\n    this.bloodline = 'TBD';\n    this.gender = 'TBD';\n    this.wins = 0;\n    this.losses = 0;\n    this.winLossRatio = 0;\n    this.isReported = false;\n  }\n\n  onGetCharacterSuccess(data) {\n    assign(this, data);\n    $(document.body).attr('class', 'profile ' + this.race.toLowerCase());\n    let localData = localStorage.getItem('RCV') ? JSON.parse(localStorage.getItem('RCV')) : {};\n    let reports = localData.reports || [];\n    this.isReported = contains(reports, this.characterId);\n    // If is NaN (from division by zero) then set it to \"0\"\n    this.winLossRatio = ((this.wins / (this.wins + this.losses) * 100) || 0).toFixed(1);\n  }\n\n  onGetCharacterFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onReportSuccess() {\n    this.isReported = true;\n    let localData = localStorage.getItem('RCV') ? JSON.parse(localStorage.getItem('RCV')) : {};\n    localData.reports = localData.reports || [];\n    localData.reports.push(this.characterId);\n    localStorage.setItem('RCV', JSON.stringify(localData));\n    toastr.warning('Character has been reported.');\n  }\n\n  onReportFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(CharacterStore);","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n\tconstructor() {\n\t\tthis.bindActions(FooterActions);\n\t\tthis.characters = [];\n\t}\n\n\tonGetTopCharactersSuccess(data) {\n\t\tthis.characters = data.slice(0, 5);\n\t}\n\n\tonGetTopCharactersFail(jqXhr) {\n\t\ttoastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n\t}\n}\n\nexport default alt.createStore(FooterStore);","import alt from '../alt';\nimport HomeActions from '../actions/HomeActions';\n\nclass HomeStore {\n\tconstructor() {\n\t\tthis.bindActions(HomeActions);\n\t\tthis.characters = [];\n\t}\n\n\tonGetTwoCharactersSuccess(data) {\n\t\tthis.characters = data;\n\t}\n\n\tonGetTwoCharactersFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n\t\ttoastr.error(errorMsg);\n\t}\n\n\tonVoteFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n\t\ttoastr.error(errorMsg);\n\t}\n}\n\nexport default alt.createStore(HomeStore);","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n\tconstructor() {\n\t\tthis.bindActions(NavbarActions);\n\t\tthis.totalCharacters = 0;\n\t\tthis.onlineUsers = 0;\n\t\tthis.searchQuery = '';\n\t\tthis.ajaxAnimationClass = '';\n\t}\n\n\tonFindCharacterSuccess(payload) {\n\t\tpayload.history.pushState(null, '/characters/' + payload.characterId);\n\t}\n\n\tonFindCharacterFail(payload) {\n\t\tpayload.searchForm.classList.add('shake');\n\t\tsetTimeout(() => {\n\t\t\tpayload.searchForm.classList.remove('shake');\n\t\t}, 1000);\n\t}\n\n\tonUpdateOnlineUsers(data) {\n\t\tthis.onlineUsers = data.onlineUsers;\n\t}\n\n\tonUpdateAjaxAnimation(className) {\n\t\tthis.ajaxAnimationClass = className; //fadeIn or fadeOut\n\t}\n\n\tonUpdateSearchQuery(event) {\n\t\tthis.searchQuery = event.target.value;\n\t}\n\n\tonGetCharacterCountSuccess(data) {\n\t\tthis.totalCharacters = data.count;\n\t}\n\n\tonGetCharacterCountFail(jqXhr) {\n\t\ttoastr.error(jqXhr.responseJSON.message);\n\t}\n}\n\nexport default alt.createStore(NavbarStore);","import {assign} from 'underscore';\nimport alt from '../alt';\nimport StatsActions from '../actions/StatsActions';\n\nclass StatsStore {\n  constructor() {\n    this.bindActions(StatsActions);\n    this.leadingRace = { race: 'Unknown', count: 0 };\n    this.leadingBloodline = { bloodline: 'Unknown', count: 0 };\n    this.amarrCount = 0;\n    this.caldariCount = 0;\n    this.gallenteCount = 0;\n    this.minmatarCount = 0;\n    this.totalVotes = 0;\n    this.femaleCount = 0;\n    this.maleCount = 0;\n    this.totalCount = 0;\n  }\n\n  onGetStatsSuccess(data) {\n    assign(this, data);\n  }\n\n  onGetStatsFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(StatsStore);","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYWN0aW9ucy9BZGRDaGFyYWN0ZXJBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvQ2hhcmFjdGVyQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL0NoYXJhY3Rlckxpc3RBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvRm9vdGVyQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL0hvbWVBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvTmF2YmFyQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL1N0YXRzQWN0aW9ucy5qcyIsImFwcC9hbHQuanMiLCJhcHAvY29tcG9uZW50cy9BZGRDaGFyYWN0ZXIuanMiLCJhcHAvY29tcG9uZW50cy9BcHAuanMiLCJhcHAvY29tcG9uZW50cy9DaGFyYWN0ZXIuanMiLCJhcHAvY29tcG9uZW50cy9DaGFyYWN0ZXJMaXN0LmpzIiwiYXBwL2NvbXBvbmVudHMvRm9vdGVyLmpzIiwiYXBwL2NvbXBvbmVudHMvSG9tZS5qcyIsImFwcC9jb21wb25lbnRzL05hdmJhci5qcyIsImFwcC9jb21wb25lbnRzL1N0YXRzLmpzIiwiYXBwL21haW4uanMiLCJhcHAvcm91dGVzLmpzIiwiYXBwL3N0b3Jlcy9BZGRDaGFyYWN0ZXJTdG9yZS5qcyIsImFwcC9zdG9yZXMvQ2hhcmFjdGVyTGlzdFN0b3JlLmpzIiwiYXBwL3N0b3Jlcy9DaGFyYWN0ZXJTdG9yZS5qcyIsImFwcC9zdG9yZXMvRm9vdGVyU3RvcmUuanMiLCJhcHAvc3RvcmVzL0hvbWVTdG9yZS5qcyIsImFwcC9zdG9yZXMvTmF2YmFyU3RvcmUuanMiLCJhcHAvc3RvcmVzL1N0YXRzU3RvcmUuanMiLCJub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2xpYi9pc19hcmd1bWVudHMuanMiLCJub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9saWIva2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9BY3Rpb25zLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0FzeW5jVXRpbHMuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvRE9NU3RhdGVTdG9yYWdlLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0RPTVV0aWxzLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2NyZWF0ZURPTUhpc3RvcnkuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvY3JlYXRlSGlzdG9yeS5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9jcmVhdGVMb2NhdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9kZXByZWNhdGUuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvZXh0cmFjdFBhdGguanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvcGFyc2VQYXRoLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL3J1blRyYW5zaXRpb25Ib29rLmpzIiwibm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQ0FBOzs7Ozs7OztJQUVNLG1CO0FBQ0wsZ0NBQWM7QUFBQTs7QUFDYixPQUFLLGVBQUwsQ0FDQyxxQkFERCxFQUVDLGtCQUZELEVBR0MsWUFIRCxFQUlDLGNBSkQsRUFLQyxhQUxELEVBTUMsZUFORDtBQVFBOzs7OytCQUVZLEksRUFBTSxNLEVBQVE7QUFBQTs7QUFDMUIsS0FBRSxJQUFGLENBQU87QUFDTixVQUFNLE1BREE7QUFFTixTQUFLLGlC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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDbkVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0VBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ2pMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ3ZDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbFNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQzNDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FDdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDbkRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3hMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIEFkZENoYXJhY3RlckFjdGlvbnMge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmdlbmVyYXRlQWN0aW9ucyhcblx0XHRcdCdhZGRDaGFyYWN0ZXJTdWNjZXNzJyxcblx0XHRcdCdhZGRDaGFyYWN0ZXJGYWlsJyxcblx0XHRcdCd1cGRhdGVOYW1lJyxcblx0XHRcdCd1cGRhdGVHZW5kZXInLFxuXHRcdFx0J2ludmFsaWROYW1lJyxcblx0XHRcdCdpbnZhbGlkR2VuZGVyJyxcblx0XHQpO1xuXHR9XG5cblx0YWRkQ2hhcmFjdGVyKG5hbWUsIGdlbmRlcikge1xuXHRcdCQuYWpheCh7XG5cdFx0XHR0eXBlOiAnUE9TVCcsXG5cdFx0XHR1cmw6ICcvYXBpL2NoYXJhY3RlcnMnLFxuXHRcdFx0ZGF0YTogeyBuYW1lOiBuYW1lLCBnZW5kZXI6IGdlbmRlciB9XG5cdFx0fSlcblx0XHQuZG9uZSgoZGF0YSkgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmFkZENoYXJhY3RlclN1Y2Nlc3MoZGF0YS5tZXNzYWdlKTtcblx0XHR9KVxuXHRcdC5mYWlsKChqcVhocikgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmFkZENoYXJhY3RlckZhaWwoanFYaHIpO1xuXHRcdH0pO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVBY3Rpb25zKEFkZENoYXJhY3RlckFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcblxuY2xhc3MgQ2hhcmFjdGVyQWN0aW9ucyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZ2VuZXJhdGVBY3Rpb25zKFxuICAgICAgJ3JlcG9ydFN1Y2Nlc3MnLFxuICAgICAgJ3JlcG9ydEZhaWwnLFxuICAgICAgJ2dldENoYXJhY3RlclN1Y2Nlc3MnLFxuICAgICAgJ2dldENoYXJhY3RlckZhaWwnXG4gICAgKTtcbiAgfVxuXG4gIGdldENoYXJhY3RlcihjaGFyYWN0ZXJJZCkge1xuICAgICQuYWpheCh7IHVybDogJy9hcGkvY2hhcmFjdGVycy8nICsgY2hhcmFjdGVySWQgfSlcbiAgICAgIC5kb25lKChkYXRhKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5nZXRDaGFyYWN0ZXJTdWNjZXNzKGRhdGEpO1xuICAgICAgfSlcbiAgICAgIC5mYWlsKChqcVhocikgPT4ge1xuICAgICAgICB0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyRmFpbChqcVhocik7XG4gICAgICB9KTtcbiAgfVxuXG4gIHJlcG9ydChjaGFyYWN0ZXJJZCkge1xuICAgICQuYWpheCh7XG4gICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICB1cmw6ICcvYXBpL3JlcG9ydCcsXG4gICAgICBkYXRhOiB7IGNoYXJhY3RlcklkOiBjaGFyYWN0ZXJJZCB9XG4gICAgfSlcbiAgICAgIC5kb25lKCgpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLnJlcG9ydFN1Y2Nlc3MoKTtcbiAgICAgIH0pXG4gICAgICAuZmFpbCgoanFYaHIpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLnJlcG9ydEZhaWwoanFYaHIpO1xuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoQ2hhcmFjdGVyQWN0aW9ucyk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuXG5jbGFzcyBDaGFyYWN0ZXJMaXN0QWN0aW9ucyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZ2VuZXJhdGVBY3Rpb25zKFxuICAgICAgJ2dldENoYXJhY3RlcnNTdWNjZXNzJyxcbiAgICAgICdnZXRDaGFyYWN0ZXJzRmFpbCdcbiAgICApO1xuICB9XG5cbiAgZ2V0Q2hhcmFjdGVycyhwYXlsb2FkKSB7XG4gICAgbGV0IHVybCA9ICcvYXBpL3RvcCc7XG4gICAgbGV0IHBhcmFtcyA9IHtcbiAgICAgIHJhY2U6IHBheWxvYWQucmFjZSxcbiAgICAgIGJsb29kbGluZTogcGF5bG9hZC5ibG9vZGxpbmVcbiAgICB9O1xuXG4gICAgaWYgKHBheWxvYWQuY2F0ZWdvcnkgPT09ICdmZW1hbGUnKSB7XG4gICAgICBwYXJhbXMuZ2VuZGVyID0gJ2ZlbWFsZSc7XG4gICAgfSBlbHNlIGlmIChwYXlsb2FkLmNhdGVnb3J5ID09PSAnbWFsZScpIHtcbiAgICAgIHBhcmFtcy5nZW5kZXIgPSAnbWFsZSc7XG4gICAgfVxuXG4gICAgaWYgKHBheWxvYWQuY2F0ZWdvcnkgPT09ICdzaGFtZScpIHtcbiAgICAgIHVybCA9ICcvYXBpL3NoYW1lJztcbiAgICB9XG5cbiAgICAkLmFqYXgoeyB1cmw6IHVybCwgZGF0YTogcGFyYW1zIH0pXG4gICAgICAuZG9uZSgoZGF0YSkgPT4ge1xuICAgICAgICB0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyc1N1Y2Nlc3MoZGF0YSk7XG4gICAgICB9KVxuICAgICAgLmZhaWwoKGpxWGhyKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5nZXRDaGFyYWN0ZXJzRmFpbChqcVhocik7XG4gICAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhDaGFyYWN0ZXJMaXN0QWN0aW9ucyk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuXG5jbGFzcyBGb290ZXJBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cblx0XHR0aGlzLmdlbmVyYXRlQWN0aW9ucyhcblx0XHRcdCdnZXRUb3BDaGFyYWN0ZXJzU3VjY2VzcycsXG5cdFx0XHQnZ2V0VG9wQ2hhcmFjdGVyc0ZhaWwnXG5cdFx0KTtcblx0fVxuXG5cdGdldFRvcENoYXJhY3RlcnMoKSB7XG5cdFx0JC5hamF4KHsgdXJsOiAnL2FwaS90b3AnIH0pXG5cdFx0XHQuZG9uZSgoZGF0YSkgPT4ge1xuXHRcdFx0XHR0aGlzLmFjdGlvbnMuZ2V0VG9wQ2hhcmFjdGVyc1N1Y2Nlc3MoZGF0YSk7XG5cdFx0XHR9KVxuXHRcdFx0LmZhaWwoKGpxWGhyKSA9PiB7XG5cdFx0XHRcdHRoaXMuYWN0aW9ucy5nZXRUb3BDaGFyYWN0ZXJzRmFpbChqcVhocik7XG5cdFx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhGb290ZXJBY3Rpb25zKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIEhvbWVBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQnZ2V0VHdvQ2hhcmFjdGVyc1N1Y2Nlc3MnLFxuXHRcdFx0J2dldFR3b0NoYXJhY3RlcnNGYWlsJyxcblx0XHRcdCd2b3RlRmFpbCcsXG5cdFx0KTtcblx0fVxuXG5cdGdldFR3b0NoYXJhY3RlcnMoKSB7XG5cdFx0JC5hamF4KHsgdXJsOiAnL2FwaS9jaGFyYWN0ZXJzJyB9KVxuXHRcdC5kb25lKGRhdGEgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldFR3b0NoYXJhY3RlcnNTdWNjZXNzKGRhdGEpO1xuXHRcdH0pXG5cdFx0LmZhaWwoanFYaHIgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldFR3b0NoYXJhY3RlcnNGYWlsKGpxWGhyKTtcblx0XHR9KTtcblx0fVxuXG5cdHZvdGUod2lubmVyLCBsb3Nlcikge1xuXHRcdCQuYWpheCh7XG5cdFx0XHR0eXBlOiAnUFVUJyxcblx0XHRcdHVybDogJy9hcGkvY2hhcmFjdGVycycsXG5cdFx0XHRkYXRhOiB7IHdpbm5lcjogd2lubmVyLCBsb3NlcjogbG9zZXIgfSxcblx0XHR9KVxuXHRcdC5kb25lKCgpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRUd29DaGFyYWN0ZXJzKCk7XG5cdFx0fSlcblx0XHQuZmFpbCgoanFYaHIpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy52b3RlRmFpbChqcVhocik7XG5cdFx0fSk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoSG9tZUFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCB7IGFzc2lnbiB9IGZyb20gJ3VuZGVyc2NvcmUnO1xuXG5jbGFzcyBOYXZiYXJBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQndXBkYXRlT25saW5lVXNlcnMnLFxuXHRcdFx0J3VwZGF0ZUFqYXhBbmltYXRpb24nLFxuXHRcdFx0J3VwZGF0ZVNlYXJjaFF1ZXJ5Jyxcblx0XHRcdCdnZXRDaGFyYWN0ZXJDb3VudFN1Y2Nlc3MnLFxuXHRcdFx0J2dldENoYXJhY3RlckNvdW50RmFpbCcsXG5cdFx0XHQnZmluZENoYXJhY3RlclN1Y2Nlc3MnLFxuXHRcdFx0J2ZpbmRDaGFyYWN0ZXJGYWlsJyxcblx0XHQpO1xuXHR9XG5cblx0ZmluZENoYXJhY3RlcihwYXlsb2FkKSB7XG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogJy9hcGkvY2hhcmFjdGVycy9zZWFyY2gnLFxuXHRcdFx0ZGF0YTogeyBuYW1lOiBwYXlsb2FkLnNlYXJjaFF1ZXJ5IH1cblx0XHR9KVxuXHRcdC5kb25lKChkYXRhKSA9PiB7XG5cdFx0XHRhc3NpZ24ocGF5bG9hZCwgZGF0YSk7XG5cdFx0XHR0aGlzLmFjdGlvbnMuZmluZENoYXJhY3RlclN1Y2Nlc3MocGF5bG9hZCk7XG5cdFx0fSlcblx0XHQuZmFpbCgoanFYaHIpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRDaGFyYWN0ZXJDb3VudEZhaWwoanFYaHIpO1xuXHRcdH0pO1xuXHR9XG5cblx0Z2V0Q2hhcmFjdGVyQ291bnQoKSB7XG5cdFx0JC5hamF4KHsgdXJsOiAnL2FwaS9jb3VudCcgfSlcblx0XHQuZG9uZSgoZGF0YSkgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldENoYXJhY3RlckNvdW50U3VjY2VzcyhkYXRhKTtcblx0XHR9KVxuXHRcdC5mYWlsKChqcVhocikgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldENoYXJhY3RlckNvdW50RmFpbChqcVhocik7XG5cdFx0fSk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoTmF2YmFyQWN0aW9ucyk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuXG5jbGFzcyBTdGF0c0FjdGlvbnMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmdlbmVyYXRlQWN0aW9ucyhcbiAgICAgICdnZXRTdGF0c1N1Y2Nlc3MnLFxuICAgICAgJ2dldFN0YXRzRmFpbCdcbiAgICApO1xuICB9XG5cbiAgZ2V0U3RhdHMoKSB7XG4gICAgJC5hamF4KHsgdXJsOiAnL2FwaS9zdGF0cycgfSlcbiAgICAgIC5kb25lKChkYXRhKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5nZXRTdGF0c1N1Y2Nlc3MoZGF0YSk7XG4gICAgICB9KVxuICAgICAgLmZhaWwoKGpxWGhyKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5nZXRTdGF0c0ZhaWwoanFYaHIpO1xuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoU3RhdHNBY3Rpb25zKTsiLCJpbXBvcnQgQWx0IGZyb20gJ2FsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBBbHQoKTsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFkZENoYXJhY3RlclN0b3JlIGZyb20gJy4uL3N0b3Jlcy9BZGRDaGFyYWN0ZXJTdG9yZSc7XG5pbXBvcnQgQWRkQ2hhcmFjdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0FkZENoYXJhY3RlckFjdGlvbnMnO1xuXG5jbGFzcyBBZGRDaGFyYWN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0gQWRkQ2hhcmFjdGVyU3RvcmUuZ2V0U3RhdGUoKTtcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgQWRkQ2hhcmFjdGVyU3RvcmUubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgQWRkQ2hhcmFjdGVyU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gIH1cblxuICBvbkNoYW5nZShzdGF0ZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIHZhciBuYW1lID0gdGhpcy5zdGF0ZS5uYW1lLnRyaW0oKTtcbiAgICB2YXIgZ2VuZGVyID0gdGhpcy5zdGF0ZS5nZW5kZXI7XG5cbiAgICBpZiAoIW5hbWUpIHtcbiAgICAgIEFkZENoYXJhY3RlckFjdGlvbnMuaW52YWxpZE5hbWUoKTtcbiAgICAgIHRoaXMucmVmcy5uYW1lVGV4dEZpZWxkLmdldERPTU5vZGUoKS5mb2N1cygpO1xuICAgIH1cblxuICAgIGlmICghZ2VuZGVyKSB7XG4gICAgICBBZGRDaGFyYWN0ZXJBY3Rpb25zLmludmFsaWRHZW5kZXIoKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZSAmJiBnZW5kZXIpIHtcbiAgICAgIEFkZENoYXJhY3RlckFjdGlvbnMuYWRkQ2hhcmFjdGVyKG5hbWUsIGdlbmRlcik7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JvdyBmbGlwSW5YIGFuaW1hdGVkJz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNtLTgnPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3BhbmVsIHBhbmVsLWRlZmF1bHQnPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwtaGVhZGluZyc+QWRkIENoYXJhY3RlcjwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwtYm9keSc+XG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9eyB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ICdmb3JtLWdyb3VwICcgKyB0aGlzLnN0YXRlLm5hbWVWYWxpZGF0aW9uU3RhdGUgfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT0nY29udHJvbC1sYWJlbCc+Q2hhcmFjdGVyIE5hbWU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgY2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnIHJlZj0nbmFtZVRleHRGaWVsZCcgdmFsdWU9eyB0aGlzLnN0YXRlLm5hbWUgfSBvbkNoYW5nZT17IEFkZENoYXJhY3RlckFjdGlvbnMudXBkYXRlTmFtZSB9IGF1dG9Gb2N1cy8+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naGVscC1ibG9jayc+eyB0aGlzLnN0YXRlLmhlbHBCbG9jayB9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ICdmb3JtLWdyb3VwICcgKyB0aGlzLnN0YXRlLmdlbmRlclZhbGlkYXRpb25TdGF0ZSB9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmFkaW8gcmFkaW8taW5saW5lJz5cbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ncmFkaW8nIG5hbWU9J2dlbmRlcicgaWQ9J2ZlbWFsZScgdmFsdWU9J0ZlbWFsZScgY2hlY2tlZD17IHRoaXMuc3RhdGUuZ2VuZGVyID09PSAnRmVtYWxlJyB9IG9uQ2hhbmdlPXsgQWRkQ2hhcmFjdGVyQWN0aW9ucy51cGRhdGVHZW5kZXIgfS8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2ZlbWFsZSc+RmVtYWxlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyYWRpbyByYWRpby1pbmxpbmUnPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdyYWRpbycgbmFtZT0nZ2VuZGVyJyBpZD0nbWFsZScgdmFsdWU9J01hbGUnIGNoZWNrZWQ9eyB0aGlzLnN0YXRlLmdlbmRlciA9PT0gJ01hbGUnIH0gb25DaGFuZ2U9eyBBZGRDaGFyYWN0ZXJBY3Rpb25zLnVwZGF0ZUdlbmRlciB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J21hbGUnPk1hbGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSdzdWJtaXQnIGNsYXNzTmFtZT0nYnRuIGJ0bi1wcmltYXJ5Jz5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBZGRDaGFyYWN0ZXI7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBOYXZiYXIgZnJvbSAnLi9OYXZiYXInO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuL0Zvb3Rlcic7XG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHQ8TmF2YmFyIGhpc3Rvcnk9eyB0aGlzLnByb3BzLmhpc3RvcnkgfSAvPlxuXHRcdFx0XHR7IHRoaXMucHJvcHMuY2hpbGRyZW4gfVxuXHRcdFx0XHQ8Rm9vdGVyIC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENoYXJhY3RlclN0b3JlIGZyb20gJy4uL3N0b3Jlcy9DaGFyYWN0ZXJTdG9yZSc7XG5pbXBvcnQgQ2hhcmFjdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0NoYXJhY3RlckFjdGlvbnMnO1xuXG5jbGFzcyBDaGFyYWN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuc3RhdGUgPSBDaGFyYWN0ZXJTdG9yZS5nZXRTdGF0ZSgpO1xuXHRcdHRoaXMub25DaGFuZ2UgPSB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcyk7XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHRDaGFyYWN0ZXJTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdFx0Q2hhcmFjdGVyQWN0aW9ucy5nZXRDaGFyYWN0ZXIodGhpcy5wcm9wcy5wYXJhbXMuaWQpO1xuXG5cdFx0JCgnLm1hZ25pZmljLXBvcHVwJykubWFnbmlmaWNQb3B1cCh7XG5cdFx0ICB0eXBlOiAnaW1hZ2UnLFxuXHRcdCAgbWFpbkNsYXNzOiAnbWZwLXpvb20taW4nLFxuXHRcdCAgY2xvc2VPbkNvbnRlbnRDbGljazogdHJ1ZSxcblx0XHQgIG1pZENsaWNrOiB0cnVlLFxuXHRcdCAgem9vbToge1xuXHRcdCAgICBlbmFibGVkOiB0cnVlLFxuXHRcdCAgICBkdXJhdGlvbjogMzAwXG5cdFx0ICB9XG5cdFx0fSk7XG5cdH1cblxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRDaGFyYWN0ZXJTdG9yZS51bmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHQkKGRvY3VtZW50LmJvZHkpLnJlbW92ZUNsYXNzKCk7XG5cdH1cblxuXHRjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcblx0XHRpZiAocHJldlByb3BzLnBhcmFtcy5pZCAhPT0gdGhpcy5wcm9wcy5wYXJhbXMuaWQpIHtcblx0XHRcdENoYXJhY3RlckFjdGlvbnMuZ2V0Q2hhcmFjdGVyKHRoaXMucHJvcHMucGFyYW1zLmlkKTtcblx0XHR9XG5cdH1cblxuXHRvbkNoYW5nZShzdGF0ZSkge1xuXHRcdHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG4gICAgXHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cbiAgICBcdFx0PGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUtaW1nJz5cbiAgICBcdFx0XHQ8YSBjbGFzc05hbWU9J21hZ25pZmljLXBvcHVwJyBocmVmPXsgYGh0dHBzOi8vaW1hZ2UuZXZlb25saW5lLmNvbS9DaGFyYWN0ZXIvJHt0aGlzLnN0YXRlLmNoYXJhY3RlcklkfV8xMDI0LmpwZ2AgfT5cbiAgICBcdFx0XHRcdDxpbWcgc3JjPXtgaHR0cHM6Ly9pbWFnZS5ldmVvbmxpbmUuY29tL0NoYXJhY3Rlci8ke3RoaXMuc3RhdGUuY2hhcmFjdGVySWR9XzI1Ni5qcGdgfSAvPlxuICAgIFx0XHRcdDwvYT5cbiAgICBcdFx0PC9kaXY+XG4gICAgXHRcdDxkaXYgY2xhc3NOYW1lPSdwcm9maWxlLWluZm8gY2xlYXJmaXgnPlxuICAgIFx0XHRcdDxoMj48c3Ryb25nPnsgdGhpcy5zdGF0ZS5uYW1lIH08L3N0cm9uZz48L2gyPlxuICAgIFx0XHRcdDxoNCBjbGFzc05hbWU9J2xlYWQnPlJhY2U6IDxzdHJvbmc+eyB0aGlzLnN0YXRlLnJhY2UgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGg0IGNsYXNzTmFtZT0nbGVhZCc+Qmxvb2RsaW5lOiA8c3Ryb25nPnsgdGhpcy5zdGF0ZS5ibG9vZGxpbmUgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGg0IGNsYXNzTmFtZT0nbGVhZCc+R2VuZGVyOiA8c3Ryb25nPnsgdGhpcy5zdGF0ZS5nZW5kZXIgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBidG4tdHJhbnNwYXJlbnQnXG4gICAgXHRcdFx0XHRvbkNsaWNrPXsgQ2hhcmFjdGVyQWN0aW9ucy5yZXBvcnQuYmluZCh0aGlzLCB0aGlzLnN0YXRlLmNoYXJhY3RlcklkKSB9XG4gICAgXHRcdFx0XHRkaXNhYmxlZD17IHRoaXMuc3RhdGUuaXNSZXBvcnRlZCB9PlxuICAgIFx0XHRcdFx0eyB0aGlzLnN0YXRlLmlzUmVwb3J0ZWQgPyAnUmVwb3J0ZWQnOiAnUmVwb3J0IENoYXJhY3RlciAnfVxuICBcdFx0XHRcdDwvYnV0dG9uPlxuICAgIFx0XHQ8L2Rpdj5cbiAgICBcdFx0PGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUtc3RhdHMgY2xlYXJmaXgnPlxuICAgIFx0XHRcdDx1bD5cbiAgICBcdFx0XHRcdDxsaT48c3BhbiBjbGFzc05hbWU9J3N0YXRzLW51bWJlcic+eyB0aGlzLnN0YXRlLndpbkxvc3NSYXRpbyB9PC9zcGFuPldpbm5pbmcgUGVyY2VudGFnZTwvbGk+XG4gICAgXHRcdFx0XHQ8bGk+PHNwYW4gY2xhc3NOYW1lPSdzdGF0cy1udW1iZXInPnsgdGhpcy5zdGF0ZS53aW5zIH08L3NwYW4+IFdpbnM8L2xpPlxuICAgIFx0XHRcdFx0PGxpPjxzcGFuIGNsYXNzTmFtZT0nc3RhdHMtbnVtYmVyJz57IHRoaXMuc3RhdGUubG9zc2VzIH08L3NwYW4+IExvc3NlczwvbGk+XG4gICAgXHRcdFx0PC91bD5cbiAgICBcdFx0PC9kaXY+XG4gICAgXHQ8L2Rpdj5cbiAgICApO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYXJhY3RlcjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgeyBpc0VxdWFsIH0gZnJvbSAndW5kZXJzY29yZSc7XG5pbXBvcnQgQ2hhcmFjdGVyTGlzdFN0b3JlIGZyb20gJy4uL3N0b3Jlcy9DaGFyYWN0ZXJMaXN0U3RvcmUnO1xuaW1wb3J0IENoYXJhY3Rlckxpc3RBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvQ2hhcmFjdGVyTGlzdEFjdGlvbnMnO1xuXG5jbGFzcyBDaGFyYWN0ZXJMaXN0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0gQ2hhcmFjdGVyTGlzdFN0b3JlLmdldFN0YXRlKCk7XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIENoYXJhY3Rlckxpc3RTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gICAgQ2hhcmFjdGVyTGlzdEFjdGlvbnMuZ2V0Q2hhcmFjdGVycyh0aGlzLnByb3BzLnBhcmFtcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBDaGFyYWN0ZXJMaXN0U3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gIH1cblxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKCFpc0VxdWFsKHByZXZQcm9wcy5wYXJhbXMsIHRoaXMucHJvcHMucGFyYW1zKSkge1xuICAgICAgQ2hhcmFjdGVyTGlzdEFjdGlvbnMuZ2V0Q2hhcmFjdGVycyh0aGlzLnByb3BzLnBhcmFtcyk7XG4gICAgfVxuICB9XG5cbiAgb25DaGFuZ2Uoc3RhdGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQgY2hhcmFjdGVyc0xpc3QgPSB0aGlzLnN0YXRlLmNoYXJhY3RlcnMubWFwKChjaGFyYWN0ZXIsIGluZGV4KSA9PiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGtleT17IGNoYXJhY3Rlci5jaGFyYWN0ZXJJZCB9IGNsYXNzTmFtZT0nbGlzdC1ncm91cC1pdGVtIGFuaW1hdGVkIGZhZGVJbic+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21lZGlhJz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ncG9zaXRpb24gcHVsbC1sZWZ0Jz57IGluZGV4ICsgMSB9PC9zcGFuPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3B1bGwtbGVmdCB0aHVtYi1sZyc+XG4gICAgICAgICAgICAgIDxMaW5rIHRvPXsgYC9jaGFyYWN0ZXJzLyR7Y2hhcmFjdGVyLmNoYXJhY3RlcklkfWAgfT5cbiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT0nbWVkaWEtb2JqZWN0JyBzcmM9eyBgaHR0cDovL2ltYWdlLmV2ZW9ubGluZS5jb20vQ2hhcmFjdGVyLyR7Y2hhcmFjdGVyLmNoYXJhY3RlcklkfV8xMjguanBnYCB9IC8+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21lZGlhLWJvZHknPlxuICAgICAgICAgICAgICA8aDQgY2xhc3NOYW1lPSdtZWRpYS1oZWFkaW5nJz5cbiAgICAgICAgICAgICAgICA8TGluayB0bz17IGAvY2hhcmFjdGVycy8ke2NoYXJhY3Rlci5jaGFyYWN0ZXJJZH1gIH0+eyBjaGFyYWN0ZXIubmFtZSB9PC9MaW5rPlxuICAgICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgICA8c21hbGw+UmFjZTogPHN0cm9uZz57IGNoYXJhY3Rlci5yYWNlIH08L3N0cm9uZz48L3NtYWxsPlxuICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgPHNtYWxsPkJsb29kbGluZTogPHN0cm9uZz57IGNoYXJhY3Rlci5ibG9vZGxpbmUgfTwvc3Ryb25nPjwvc21hbGw+XG4gICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICA8c21hbGw+V2luczogPHN0cm9uZz57IGNoYXJhY3Rlci53aW5zIH08L3N0cm9uZz4gTG9zc2VzOiA8c3Ryb25nPnsgY2hhcmFjdGVyLmxvc3NlcyB9PC9zdHJvbmc+PC9zbWFsbD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdsaXN0LWdyb3VwJz5cbiAgICAgICAgICB7IGNoYXJhY3RlcnNMaXN0IH1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYXJhY3Rlckxpc3Q7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IEZvb3RlclN0b3JlIGZyb20gJy4uL3N0b3Jlcy9Gb290ZXJTdG9yZSc7XG5pbXBvcnQgRm9vdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0Zvb3RlckFjdGlvbnMnO1xuXG5jbGFzcyBGb290ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuc3RhdGUgPSBGb290ZXJTdG9yZS5nZXRTdGF0ZSgpO1xuXHRcdHRoaXMub25DaGFuZ2UgPSB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcyk7XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHRGb290ZXJTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdFx0Rm9vdGVyQWN0aW9ucy5nZXRUb3BDaGFyYWN0ZXJzKCk7XG5cdH1cblxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRGb290ZXJTdG9yZS51bmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0fVxuXG5cdG9uQ2hhbmdlKHN0YXRlKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG4gICBcdGxldCBsZWFkZXJib2FyZENoYXJhY3RlcnMgPSB0aGlzLnN0YXRlLmNoYXJhY3RlcnMubWFwKChjaGFyYWN0ZXIpID0+IHtcbiAgIFx0ICByZXR1cm4gKFxuICAgXHQgICAgPGxpIGtleT17Y2hhcmFjdGVyLmNoYXJhY3RlcklkfT5cbiAgIFx0ICAgICAgPExpbmsgdG89eycvY2hhcmFjdGVycy8nICsgY2hhcmFjdGVyLmNoYXJhY3RlcklkfT5cbiAgIFx0ICAgICAgICA8aW1nIGNsYXNzTmFtZT0ndGh1bWItbWQnIHNyYz17J2h0dHA6Ly9pbWFnZS5ldmVvbmxpbmUuY29tL0NoYXJhY3Rlci8nICsgY2hhcmFjdGVyLmNoYXJhY3RlcklkICsgJ18xMjguanBnJ30gLz5cbiAgIFx0ICAgICAgPC9MaW5rPlxuICAgXHQgICAgPC9saT5cbiAgIFx0ICApXG4gICBcdH0pO1xuXG4gICBcdHJldHVybiAoXG5cdFx0XHQ8Zm9vdGVyPlxuXHRcdFx0IDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0ICAgPGRpdiBjbGFzc05hbWU9J3Jvdyc+XG5cdFx0XHQgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2wtc20tNSc+XG5cdFx0XHQgICAgICAgPGgzIGNsYXNzTmFtZT0nbGVhZCc+PHN0cm9uZz5JbmZvcm1hdGlvbjwvc3Ryb25nPiBhbmQgPHN0cm9uZz5Db3B5cmlnaHQ8L3N0cm9uZz48L2gzPlxuXHRcdFx0ICAgICAgIDxwPlBvd2VyZWQgYnkgPHN0cm9uZz5Ob2RlLmpzPC9zdHJvbmc+LCA8c3Ryb25nPk1vbmdvREI8L3N0cm9uZz4gYW5kIDxzdHJvbmc+UmVhY3Q8L3N0cm9uZz4gd2l0aCBGbHV4IGFyY2hpdGVjdHVyZSBhbmQgc2VydmVyLXNpZGUgcmVuZGVyaW5nLjwvcD5cblx0XHRcdCAgICAgICA8cD5Zb3UgbWF5IHZpZXcgdGhlIDxhIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbS9lZHVhcm1yZXllcy9yZWFjdC1jaGFyYWN0ZXItdm90aW5nJz5Tb3VyY2UgQ29kZTwvYT4gYmVoaW5kIHRoaXMgcHJvamVjdCBvbiBHaXRIdWIuPC9wPlxuXHRcdFx0ICAgICAgIDxwPsKpIDIwMTcgZWR1YXJtcmV5ZXMuPC9wPlxuXHRcdFx0ICAgICA8L2Rpdj5cblx0XHRcdCAgICAgPGRpdiBjbGFzc05hbWU9J2NvbC1zbS03IGhpZGRlbi14cyc+XG5cdFx0XHQgICAgICAgPGgzIGNsYXNzTmFtZT0nbGVhZCc+PHN0cm9uZz5MZWFkZXJib2FyZDwvc3Ryb25nPiBUb3AgNSBDaGFyYWN0ZXJzPC9oMz5cblx0XHRcdCAgICAgICA8dWwgY2xhc3NOYW1lPSdsaXN0LWlubGluZSc+XG5cdFx0XHQgICAgICAgICB7bGVhZGVyYm9hcmRDaGFyYWN0ZXJzfVxuXHRcdFx0ICAgICAgIDwvdWw+XG5cdFx0XHQgICAgIDwvZGl2PlxuXHRcdFx0ICAgPC9kaXY+XG5cdFx0XHQgPC9kaXY+XG5cdFx0XHQ8L2Zvb3Rlcj5cbiAgICApO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgSG9tZVN0b3JlIGZyb20gJy4uL3N0b3Jlcy9Ib21lU3RvcmUnO1xuaW1wb3J0IEhvbWVBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvSG9tZUFjdGlvbnMnO1xuaW1wb3J0IHsgZmlyc3QsIHdpdGhvdXQsIGZpbmRXaGVyZSB9IGZyb20gJ3VuZGVyc2NvcmUnO1xuXG5jbGFzcyBIb21lIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cblx0XHR0aGlzLnN0YXRlID0gSG9tZVN0b3JlLmdldFN0YXRlKCk7XG5cdFx0dGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcblx0fVxuXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xuXHRcdEhvbWVTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdFx0SG9tZUFjdGlvbnMuZ2V0VHdvQ2hhcmFjdGVycygpO1xuXHR9XG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQoKSB7XG5cdFx0SG9tZVN0b3JlLnVubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuXHR9XG5cblx0b25DaGFuZ2Uoc3RhdGUpIHtcblx0XHR0aGlzLnNldFN0YXRlKHN0YXRlKTtcblx0fVxuXG5cdGhhbmRsZUNsaWNrKGNoYXJhY3Rlcikge1xuXHRcdGxldCB3aW5uZXIgPSBjaGFyYWN0ZXIuY2hhcmFjdGVySWQ7XG5cdFx0bGV0IGxvb3NlciA9IGZpcnN0KHdpdGhvdXQodGhpcy5zdGF0ZS5jaGFyYWN0ZXJzLCBmaW5kV2hlcmUodGhpcy5zdGF0ZS5jaGFyYWN0ZXJzLCB7IGNoYXJhY3RlcklkOiB3aW5uZXIgfSkpKS5jaGFyYWN0ZXJJZDtcblx0XHRIb21lQWN0aW9ucy52b3RlKHdpbm5lciwgbG9vc2VyKTtcblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHRsZXQgY2hhcmFjdGVyTm9kZXMgPSB0aGlzLnN0YXRlLmNoYXJhY3RlcnMubWFwKChjaGFyYWN0ZXIsIGluZGV4KSA9PiB7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8ZGl2IGtleT17IGNoYXJhY3Rlci5jaGFyYWN0ZXJJZCB9IGNsYXNzTmFtZT17IGluZGV4ID09PSAwID8gJ2NvbC14cy02IGNvbC1zbS02IGNvbC1tZC01IGNvbC1tZC1vZmZzZXQtMScgOiAnY29sLXhzLTYgY29sLXNtLTYgY29sLW1kLTUnIH0+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RodW1ibmFpbCBmYWRlSW5VcCBhbmltYXRlZCc+XG5cdFx0XHRcdFx0XHQ8aW1nIG9uQ2xpY2s9eyB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcywgY2hhcmFjdGVyKSB9IHNyYz17IGBodHRwOi8vaW1hZ2UuZXZlb25saW5lLmNvbS9DaGFyYWN0ZXIvJHtjaGFyYWN0ZXIuY2hhcmFjdGVySWR9XzUxMi5qcGdgIH0gLz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYXB0aW9uIHRleHQtY2VudGVyJz5cblx0XHRcdFx0XHRcdFx0PHVsIGNsYXNzTmFtZT0nbGlzdC1pbmxpbmUnPlxuXHRcdFx0XHRcdFx0XHRcdDxsaT48c3Ryb25nPlJhY2U6PC9zdHJvbmc+IHsgY2hhcmFjdGVyLnJhY2UgfSA8L2xpPlxuXHRcdFx0XHRcdFx0XHRcdDxsaT48c3Ryb25nPkJsb29kbGluZTo8L3N0cm9uZz4geyBjaGFyYWN0ZXIuYmxvb2RsaW5lIH0gPC9saT5cblx0XHRcdFx0XHRcdFx0PC91bD5cblx0XHRcdFx0XHRcdFx0PGg0PlxuXHRcdFx0XHRcdFx0XHRcdDxMaW5rIHRvPXsgYC9jaGFyYWN0ZXJzLyR7Y2hhcmFjdGVyLmNoYXJhY3RlcklkfWB9PjxzdHJvbmc+eyBjaGFyYWN0ZXIubmFtZSB9PC9zdHJvbmc+PC9MaW5rPlxuXHRcdFx0XHRcdFx0XHQ8L2g0PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0KTtcblx0XHR9KTtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XG5cdFx0XHRcdDxoMyBjbGFzc05hbWU9J3RleHQtY2VudGVyJz5DbGljayBvbiB0aGUgcG9ydHJhaXQuIFNlbGVjdCB5b3VyIGZhdm9yaXRlLjwvaDM+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdyb3cnPlxuXHRcdFx0XHRcdHsgY2hhcmFjdGVyTm9kZXMgfVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSG9tZTsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgTmF2YmFyU3RvcmUgZnJvbSAnLi4vc3RvcmVzL05hdmJhclN0b3JlJztcbmltcG9ydCBOYXZiYXJBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvTmF2YmFyQWN0aW9ucyc7XG5cbmNsYXNzIE5hdmJhciBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IE5hdmJhclN0b3JlLmdldFN0YXRlKCk7XG5cdFx0dGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcblx0fVxuXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xuXHRcdE5hdmJhclN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHROYXZiYXJBY3Rpb25zLmdldENoYXJhY3RlckNvdW50KCk7XG5cblx0XHRsZXQgc29ja2V0ID0gaW8uY29ubmVjdCgpO1xuXG5cdFx0c29ja2V0Lm9uKCdvbmxpbmVVc2VycycsIChkYXRhKSA9PiB7XG5cdFx0XHROYXZiYXJBY3Rpb25zLnVwZGF0ZU9ubGluZVVzZXJzKGRhdGEpO1xuXHRcdH0pO1xuXG5cdFx0JChkb2N1bWVudCkuYWpheFN0YXJ0KCgpID0+IHtcblx0XHRcdE5hdmJhckFjdGlvbnMudXBkYXRlQWpheEFuaW1hdGlvbignZmFkZUluJyk7XG5cdFx0fSk7XG5cblx0XHQkKGRvY3VtZW50KS5hamF4Q29tcGxldGUoKCkgPT4ge1xuXHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRcdE5hdmJhckFjdGlvbnMudXBkYXRlQWpheEFuaW1hdGlvbignZmFkZU91dCcpO1xuXHRcdFx0fSwgNzUwKTtcblx0XHR9KTtcblx0fVxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuXHRcdE5hdmJhclN0b3JlLnVubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuXHR9XG5cblx0b25DaGFuZ2Uoc3RhdGUpIHtcblx0XHR0aGlzLnNldFN0YXRlKHN0YXRlKTtcblx0fVxuXG5cdGhhbmRsZVN1Ym1pdChldmVudCkge1xuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRsZXQgc2VhcmNoUXVlcnkgPSB0aGlzLnN0YXRlLnNlYXJjaFF1ZXJ5LnRyaW0oKTtcblxuXHRcdGlmIChzZWFyY2hRdWVyeSkge1xuXHRcdFx0TmF2YmFyQWN0aW9ucy5maW5kQ2hhcmFjdGVyKHtcblx0XHRcdFx0c2VhcmNoUXVlcnk6IHNlYXJjaFF1ZXJ5LFxuXHRcdFx0XHRzZWFyY2hGb3JtOiB0aGlzLnJlZnMuc2VhcmNoRm9ybSxcblx0XHRcdFx0aGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5XG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcbiAgICBcdDxuYXYgY2xhc3NOYW1lPSduYXZiYXIgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLXN0YXRpYy10b3AnPlxuICAgIFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbmF2YmFyLWhlYWRlcic+XG4gICAgXHRcdFx0PGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzTmFtZT0nbmF2YmFyLXRvZ2dsZSBjb2xsYXBzZWQnIGRhdGEtdG9nZ2xlPSdjb2xsYXBzZScgZGF0YS10YXJnZXQ9JyNuYXZiYXInPlxuXHQgICAgXHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdzci1vbmx5Jz5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj5cblx0ICAgIFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0naWNvbi1iYXInPjwvc3Bhbj5cblx0ICAgIFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0naWNvbi1iYXInPjwvc3Bhbj5cblx0ICAgIFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0naWNvbi1iYXInPjwvc3Bhbj5cbiAgICBcdFx0XHQ8L2J1dHRvbj5cbiAgICBcdFx0XHQ8TGluayB0bz0nLycgYWx0PSdSZWFjdCBDaGFyYWN0ZXIgVm90aW5nJyBjbGFzc05hbWU9J25hdmJhci1icmFuZCc+XG4gICAgXHRcdFx0XHQ8c3BhbiByZWY9J3RyaWFuZ2xlcycgY2xhc3NOYW1lPXsgJ3RyaWFuZ2xlcyBhbmltYXRlZCAnICsgdGhpcy5zdGF0ZS5hamF4QW5pbWF0aW9uQ2xhc3MgfT5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgIFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndHJpIGludmVydCc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmknPjwvZGl2PlxuICAgIFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndHJpIGludmVydCc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICBcdFx0XHRcdDwvc3Bhbj5cbiAgICBcdFx0XHRcdFJDVlxuICAgIFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdiYWRnZSBiYWRnZS11cCBiYWRnZS1kYW5nZXInPnsgdGhpcy5zdGF0ZS5vbmxpbmVVc2VycyB9PC9zcGFuPlxuICAgIFx0XHRcdDwvTGluaz5cbiAgICBcdFx0PC9kaXY+XG4gICAgXHRcdDxkaXYgaWQ9J25hdmJhcicgY2xhc3NOYW1lPSduYXZiYXItY29sbGFwc2UgY29sbGFwc2UnPlxuICAgIFx0XHRcdDxmb3JtIHJlZj0nc2VhcmNoRm9ybScgY2xhc3NOYW1lPSduYXZiYXItZm9ybSBuYXZiYXItbGVmdCBhbmltYXRlZCcgb25TdWJtaXQ9eyB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpIH0+XG4gICAgXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0naW5wdXQtZ3JvdXAnPlxuICAgIFx0XHRcdFx0XHQ8aW5wdXQgdHlwZT0ndGV4dCcgY2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnIHBsYWNlaG9sZGVyPXsgdGhpcy5zdGF0ZS50b3RhbENoYXJhY3RlcnMgKyAnIGNoYXJhY3RlcnMnIH0gdmFsdWU9eyB0aGlzLnN0YXRlLnNlYXJjaFF1ZXJ5IH0gb25DaGFuZ2U9eyBOYXZiYXJBY3Rpb25zLnVwZGF0ZVNlYXJjaFF1ZXJ5IH0gLz5cbiAgICBcdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdpbnB1dC1ncm91cC1idG4nPlxuICAgIFx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gYnRuLWRlZmF1bHQnIG9uQ2xpY2s9eyB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpIH0+PHNwYW4gY2xhc3NOYW1lPSdnbHlwaGljb24gZ2x5cGhpY29uLXNlYXJjaCc+PC9zcGFuPjwvYnV0dG9uPlxuICBcdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cbiAgICBcdFx0XHQ8L2Zvcm0+XG4gICAgXHRcdFx0PHVsIGNsYXNzTmFtZT0nbmF2IG5hdmJhci1uYXYnPlxuICAgIFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvJz5Ib21lPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQ8bGk+PExpbmsgdG89Jy9zdGF0cyc+U3RhdHM8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duJz5cbiAgICBcdFx0XHRcdFx0PGEgaHJlZj0nIycgY2xhc3NOYW1lPSdkcm9wZG93bi10b2dnbGUnIGRhdGEtdG9nZ2xlPSdkcm9wZG93bic+VG9wIDEwMCA8c3BhbiBjbGFzc05hbWU9J2NhcmV0Jz48L3NwYW4+PC9hPlxuICAgIFx0XHRcdFx0XHQ8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdFx0XHQ8bGk+PExpbmsgdG89Jy90b3AnPlRvcCBPdmVyYWxsPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0PGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHRcdFx0XHQ8TGluayB0bz0nL3RvcC9jYWxkYXJpJz5DYWxkYXJpPC9MaW5rPlxuICAgIFx0XHRcdFx0XHRcdFx0PHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHRcdFx0XHRcdDxsaT48TGluayB0bz0nL3RvcC9jYWxkYXJpL2FjaHVyYSc+QWNodXJhPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0XHRcdDxsaT48TGluayB0bz0nL3RvcC9jYWxkYXJpL2NpdmlyZSc+Q2l2aXJlPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0XHRcdDxsaT48TGluayB0bz0nL3RvcC9jYWxkYXJpL2RldGVpcyc+RGV0ZWlzPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0XHQ8L3VsPlxuICAgIFx0XHRcdFx0XHRcdDwvbGk+XG4gICAgXHRcdFx0XHRcdFx0PGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHRcdFx0XHQ8TGluayB0bz0nL3RvcC9nYWxsZW50ZSc+R2FsbGVudGU8L0xpbms+XG4gICAgXHRcdFx0XHRcdFx0XHQ8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvYnJ1dG9yJz5CcnV0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvc2ViaWVzdG9yJz5TZWJpZXN0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvdmhlcm9raW9yJz5WaGVyb2tpb3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdDwvdWw+XG4gICAgXHRcdFx0XHRcdFx0PC9saT5cbiAgICBcdFx0XHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdFx0XHQgIDxMaW5rIHRvPScvdG9wL21pbm1hdGFyJz5NaW5tYXRhcjwvTGluaz5cbiAgICBcdFx0XHRcdFx0XHQgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy90b3AvbWlubWF0YXIvYnJ1dG9yJz5CcnV0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvdG9wL21pbm1hdGFyL3NlYmllc3Rvcic+U2ViaWVzdG9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0ICAgIDxsaT48TGluayB0bz0nL3RvcC9taW5tYXRhci92aGVyb2tpb3InPlZoZXJva2lvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdCAgPC91bD5cbiAgICBcdFx0XHRcdFx0XHQ8L2xpPlxuICAgIFx0XHRcdFx0XHRcdDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0XHRcdCAgPExpbmsgdG89Jy90b3AvYW1hcnInPkFtYXJyPC9MaW5rPlxuICAgIFx0XHRcdFx0XHRcdCAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHRcdFx0ICAgIDxsaT48TGluayB0bz0nL3RvcC9hbWFyci9hbWFycic+QW1hcnI8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvdG9wL2FtYXJyL25pLWt1bm5pJz5OaS1LdW5uaTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy90b3AvYW1hcnIva2hhbmlkJz5LaGFuaWQ8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHQgIDwvdWw+XG4gICAgXHRcdFx0XHRcdFx0PC9saT5cbiAgICBcdFx0XHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkaXZpZGVyJz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdDxsaT48TGluayB0bz0nL3NoYW1lJz5IYWxsIG9mIFNoYW1lPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdDwvdWw+XG4gICAgXHRcdFx0XHQ8L2xpPlxuICAgIFx0XHRcdFx0PGxpIGNsYXNzTmFtZT0nZHJvcGRvd24nPlxuICAgIFx0XHRcdFx0ICA8YSBocmVmPScjJyBjbGFzc05hbWU9J2Ryb3Bkb3duLXRvZ2dsZScgZGF0YS10b2dnbGU9J2Ryb3Bkb3duJz5GZW1hbGUgPHNwYW4gY2xhc3NOYW1lPSdjYXJldCc+PC9zcGFuPjwvYT5cbiAgICBcdFx0XHRcdCAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlJz5BbGw8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICA8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgIDxMaW5rIHRvPScvZmVtYWxlL2NhbGRhcmknPkNhbGRhcmk8L0xpbms+XG4gICAgXHRcdFx0XHQgICAgICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2NhbGRhcmkvYWNodXJhJz5BY2h1cmE8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2NhbGRhcmkvY2l2aXJlLyc+Q2l2aXJlPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9jYWxkYXJpL2RldGVpcyc+RGV0ZWlzPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL2ZlbWFsZS9nYWxsZW50ZSc+R2FsbGVudGU8L0xpbms+XG4gICAgXHRcdFx0XHQgICAgICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2dhbGxlbnRlL2dhbGxlbnRlJz5HYWxsZW50ZTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvZ2FsbGVudGUvaW50YWtpJz5JbnRha2k8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2dhbGxlbnRlL2ppbi1tZWknPkppbi1NZWk8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgIDwvdWw+XG4gICAgXHRcdFx0XHQgICAgPC9saT5cbiAgICBcdFx0XHRcdCAgICA8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgIDxMaW5rIHRvPScvZmVtYWxlL21pbm1hdGFyJz5NaW5tYXRhcjwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvbWlubWF0YXIvYnJ1dG9yJz5CcnV0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL21pbm1hdGFyL3NlYmllc3Rvcic+U2ViaWVzdG9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9taW5tYXRhci92aGVyb2tpb3InPlZoZXJva2lvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9mZW1hbGUvYW1hcnInPkFtYXJyPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9hbWFyci9hbWFycic+QW1hcnI8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2FtYXJyL25pLWt1bm5pJz5OaS1LdW5uaTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvYW1hcnIva2hhbmlkJz5LaGFuaWQ8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgIDwvdWw+XG4gICAgXHRcdFx0XHQgICAgPC9saT5cbiAgICBcdFx0XHRcdCAgPC91bD5cbiAgICBcdFx0XHRcdDwvbGk+XG4gICAgXHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkcm9wZG93bic+XG4gICAgXHRcdFx0XHQgIDxhIGhyZWY9JyMnIGNsYXNzTmFtZT0nZHJvcGRvd24tdG9nZ2xlJyBkYXRhLXRvZ2dsZT0nZHJvcGRvd24nPk1hbGUgPHNwYW4gY2xhc3NOYW1lPSdjYXJldCc+PC9zcGFuPjwvYT5cbiAgICBcdFx0XHRcdCAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvbWFsZSc+QWxsPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL21hbGUvY2FsZGFyaSc+Q2FsZGFyaTwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2NhbGRhcmkvYWNodXJhJz5BY2h1cmE8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvbWFsZS9jYWxkYXJpL2NpdmlyZSc+Q2l2aXJlPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvY2FsZGFyaS9kZXRlaXMnPkRldGVpczwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9tYWxlL2dhbGxlbnRlJz5HYWxsZW50ZTwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2dhbGxlbnRlL2dhbGxlbnRlJz5HYWxsZW50ZTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2dhbGxlbnRlL2ludGFraSc+SW50YWtpPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvZ2FsbGVudGUvamluLW1laSc+SmluLU1laTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9tYWxlL21pbm1hdGFyJz5NaW5tYXRhcjwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL21pbm1hdGFyL2JydXRvcic+QnJ1dG9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvbWlubWF0YXIvc2ViaWVzdG9yJz5TZWJpZXN0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvbWFsZS9taW5tYXRhci92aGVyb2tpb3InPlZoZXJva2lvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9tYWxlL2FtYXJyJz5BbWFycjwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2FtYXJyL2FtYXJyJz5BbWFycjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2FtYXJyL25pLWt1bm5pJz5OaS1LdW5uaTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2FtYXJyL2toYW5pZCc+S2hhbmlkPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgIDwvdWw+XG4gICAgXHRcdFx0XHQ8L2xpPlxuICAgIFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvYWRkJz5BZGQ8L0xpbms+PC9saT5cbiAgICBcdFx0XHQ8L3VsPlxuICAgIFx0XHQ8L2Rpdj5cbiAgICBcdDwvbmF2PlxuICAgICk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTmF2YmFyOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU3RhdHNTdG9yZSBmcm9tICcuLi9zdG9yZXMvU3RhdHNTdG9yZSdcbmltcG9ydCBTdGF0c0FjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9TdGF0c0FjdGlvbnMnO1xuXG5jbGFzcyBTdGF0cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSBTdGF0c1N0b3JlLmdldFN0YXRlKCk7XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIFN0YXRzU3RvcmUubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuICAgIFN0YXRzQWN0aW9ucy5nZXRTdGF0cygpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgU3RhdHNTdG9yZS51bmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcbiAgfVxuXG4gIG9uQ2hhbmdlKHN0YXRlKSB7XG4gICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwgcGFuZWwtZGVmYXVsdCc+XG4gICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT0ndGFibGUgdGFibGUtc3RyaXBlZCc+XG4gICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0aCBjb2xTcGFuPScyJz5TdGF0czwvdGg+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPkxlYWRpbmcgcmFjZSBpbiBUb3AgMTAwPC90ZD5cbiAgICAgICAgICAgICAgPHRkPnt0aGlzLnN0YXRlLmxlYWRpbmdSYWNlLnJhY2V9IHdpdGgge3RoaXMuc3RhdGUubGVhZGluZ1JhY2UuY291bnR9IGNoYXJhY3RlcnM8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPkxlYWRpbmcgYmxvb2RsaW5lIGluIFRvcCAxMDA8L3RkPlxuICAgICAgICAgICAgICA8dGQ+e3RoaXMuc3RhdGUubGVhZGluZ0Jsb29kbGluZS5ibG9vZGxpbmV9IHdpdGgge3RoaXMuc3RhdGUubGVhZGluZ0Jsb29kbGluZS5jb3VudH0gY2hhcmFjdGVyc1xuICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPkFtYXJyIENoYXJhY3RlcnM8L3RkPlxuICAgICAgICAgICAgICA8dGQ+e3RoaXMuc3RhdGUuYW1hcnJDb3VudH08L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPkNhbGRhcmkgQ2hhcmFjdGVyczwvdGQ+XG4gICAgICAgICAgICAgIDx0ZD57dGhpcy5zdGF0ZS5jYWxkYXJpQ291bnR9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5HYWxsZW50ZSBDaGFyYWN0ZXJzPC90ZD5cbiAgICAgICAgICAgICAgPHRkPnt0aGlzLnN0YXRlLmdhbGxlbnRlQ291bnR9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5NaW5tYXRhciBDaGFyYWN0ZXJzPC90ZD5cbiAgICAgICAgICAgICAgPHRkPnt0aGlzLnN0YXRlLm1pbm1hdGFyQ291bnR9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5Ub3RhbCB2b3RlcyBjYXN0PC90ZD5cbiAgICAgICAgICAgICAgPHRkPnt0aGlzLnN0YXRlLnRvdGFsVm90ZXN9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5GZW1hbGUgY2hhcmFjdGVyczwvdGQ+XG4gICAgICAgICAgICAgIDx0ZD57dGhpcy5zdGF0ZS5mZW1hbGVDb3VudH08L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkPk1hbGUgY2hhcmFjdGVyczwvdGQ+XG4gICAgICAgICAgICAgIDx0ZD57dGhpcy5zdGF0ZS5tYWxlQ291bnR9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIDx0ZD5Ub3RhbCBudW1iZXIgb2YgY2hhcmFjdGVyczwvdGQ+XG4gICAgICAgICAgICAgIDx0ZD57dGhpcy5zdGF0ZS50b3RhbENvdW50fTwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU3RhdHM7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSb3V0ZXIgZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBSZWFjdERvbSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGZyb20gJ2hpc3RvcnkvbGliL2NyZWF0ZUJyb3dzZXJIaXN0b3J5JztcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnO1xuXG5sZXQgaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCk7XG5cblJlYWN0RG9tLnJlbmRlcihcblx0PFJvdXRlciBoaXN0b3J5PXsgaGlzdG9yeSB9Pnsgcm91dGVzIH08L1JvdXRlcj4sXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKVxuKTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuL2NvbXBvbmVudHMvQXBwJztcbmltcG9ydCBIb21lIGZyb20gJy4vY29tcG9uZW50cy9Ib21lJztcbmltcG9ydCBBZGRDaGFyYWN0ZXIgZnJvbSAnLi9jb21wb25lbnRzL0FkZENoYXJhY3Rlcic7XG5pbXBvcnQgQ2hhcmFjdGVyIGZyb20gJy4vY29tcG9uZW50cy9DaGFyYWN0ZXInO1xuaW1wb3J0IENoYXJhY3Rlckxpc3QgZnJvbSAnLi9jb21wb25lbnRzL0NoYXJhY3Rlckxpc3QnO1xuaW1wb3J0IFN0YXRzIGZyb20gJy4vY29tcG9uZW50cy9TdGF0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IChcbiAgPFJvdXRlIGNvbXBvbmVudD17IEFwcCB9PlxuICBcdDxSb3V0ZSBwYXRoPScvJyBjb21wb25lbnQ9eyBIb21lIH0gLz5cbiAgXHQ8Um91dGUgcGF0aD0nL2FkZCcgY29tcG9uZW50PSB7IEFkZENoYXJhY3RlciB9IC8+XG4gIFx0PFJvdXRlIHBhdGg9Jy9jaGFyYWN0ZXJzLzppZCcgY29tcG9uZW50PXsgQ2hhcmFjdGVyIH0gLz5cbiAgXHQ8Um91dGUgcGF0aD0nL3NoYW1lJyBjb21wb25lbnQ9eyBDaGFyYWN0ZXJMaXN0IH0gLz5cbiAgXHQ8Um91dGUgcGF0aD0nL3N0YXRzJyBjb21wb25lbnQ9eyBTdGF0cyB9IC8+XG4gIFx0PFJvdXRlIHBhdGg9JzpjYXRlZ29yeScgY29tcG9uZW50PXsgQ2hhcmFjdGVyTGlzdCB9PlxuICBcdCAgPFJvdXRlIHBhdGg9JzpyYWNlJyBjb21wb25lbnQ9eyBDaGFyYWN0ZXJMaXN0IH0+XG4gIFx0ICAgIDxSb3V0ZSBwYXRoPSc6Ymxvb2RsaW5lJyBjb21wb25lbnQ9eyBDaGFyYWN0ZXJMaXN0IH0gLz5cbiAgXHQgIDwvUm91dGU+XG4gIFx0PC9Sb3V0ZT5cbiAgPC9Sb3V0ZT5cbik7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IEFkZENoYXJhY3RlckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9BZGRDaGFyYWN0ZXJBY3Rpb25zJztcblxuY2xhc3MgQWRkQ2hhcmFjdGVyU3RvcmUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmJpbmRBY3Rpb25zKEFkZENoYXJhY3RlckFjdGlvbnMpO1xuICAgIHRoaXMubmFtZSA9ICcnO1xuICAgIHRoaXMuZ2VuZGVyID0gJyc7XG4gICAgdGhpcy5oZWxwQmxvY2sgPSAnJztcbiAgICB0aGlzLm5hbWVWYWxpZGF0aW9uU3RhdGUgPSAnJztcbiAgICB0aGlzLmdlbmRlclZhbGlkYXRpb25TdGF0ZSA9ICcnO1xuICB9XG5cbiAgb25BZGRDaGFyYWN0ZXJTdWNjZXNzKHN1Y2Nlc3NNZXNzYWdlKSB7XG4gICAgdGhpcy5uYW1lVmFsaWRhdGlvblN0YXRlID0gJ2hhcy1zdWNjZXNzJztcbiAgICB0aGlzLmhlbHBCbG9jayA9IHN1Y2Nlc3NNZXNzYWdlO1xuICB9XG5cbiAgb25BZGRDaGFyYWN0ZXJGYWlsKGVycm9yTWVzc2FnZSkge1xuICBcdGxldCBlcnJvck1zZyA9IGVycm9yTWVzc2FnZS5yZXNwb25zZUpTT04gJiYgZXJyb3JNZXNzYWdlLnJlc3BvbnNlSlNPTi5tZXNzYWdlIHx8IGVycm9yTWVzc2FnZS5yZXNwb25zZVRleHQgfHwgZXJyb3JNZXNzYWdlLnN0YXR1c1RleHQ7XG4gICAgdGhpcy5uYW1lVmFsaWRhdGlvblN0YXRlID0gJ2hhcy1lcnJvcic7XG4gICAgdGhpcy5oZWxwQmxvY2sgPSBlcnJvck1zZztcblx0XHR0b2FzdHIuZXJyb3IoZXJyb3JNc2cpO1xuICB9XG5cbiAgb25VcGRhdGVOYW1lKGV2ZW50KSB7XG4gICAgdGhpcy5uYW1lID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMubmFtZVZhbGlkYXRpb25TdGF0ZSA9ICcnO1xuICAgIHRoaXMuaGVscEJsb2NrID0gJyc7XG4gIH1cblxuICBvblVwZGF0ZUdlbmRlcihldmVudCkge1xuICAgIHRoaXMuZ2VuZGVyID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMuZ2VuZGVyVmFsaWRhdGlvblN0YXRlID0gJyc7XG4gIH1cblxuICBvbkludmFsaWROYW1lKCkge1xuICAgIHRoaXMubmFtZVZhbGlkYXRpb25TdGF0ZSA9ICdoYXMtZXJyb3InO1xuICAgIHRoaXMuaGVscEJsb2NrID0gJ1BsZWFzZSBlbnRlciBhIGNoYXJhY3RlciBuYW1lLic7XG4gIH1cblxuICBvbkludmFsaWRHZW5kZXIoKSB7XG4gICAgdGhpcy5nZW5kZXJWYWxpZGF0aW9uU3RhdGUgPSAnaGFzLWVycm9yJztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoQWRkQ2hhcmFjdGVyU3RvcmUpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBDaGFyYWN0ZXJMaXN0QWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0NoYXJhY3Rlckxpc3RBY3Rpb25zJztcblxuY2xhc3MgQ2hhcmFjdGVyTGlzdFN0b3JlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5iaW5kQWN0aW9ucyhDaGFyYWN0ZXJMaXN0QWN0aW9ucyk7XG4gICAgdGhpcy5jaGFyYWN0ZXJzID0gW107XG4gIH1cblxuICBvbkdldENoYXJhY3RlcnNTdWNjZXNzKGRhdGEpIHtcbiAgICB0aGlzLmNoYXJhY3RlcnMgPSBkYXRhO1xuICB9XG5cbiAgb25HZXRDaGFyYWN0ZXJzRmFpbChqcVhocikge1xuICBcdGxldCBlcnJvck1zZyA9IGpxWGhyLnJlc3BvbnNlSlNPTiAmJiBqcVhoci5yZXNwb25zZUpTT04ubWVzc2FnZSB8fCBqcVhoci5yZXNwb25zZVRleHQgfHwganFYaHIuc3RhdHVzVGV4dDtcbiAgICB0b2FzdHIuZXJyb3IoZXJyb3JNc2cpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShDaGFyYWN0ZXJMaXN0U3RvcmUpOyIsImltcG9ydCB7IGFzc2lnbiwgY29udGFpbnMgfSBmcm9tICd1bmRlcnNjb3JlJztcbmltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBDaGFyYWN0ZXJBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvQ2hhcmFjdGVyQWN0aW9ucyc7XG5cbmNsYXNzIENoYXJhY3RlclN0b3JlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5iaW5kQWN0aW9ucyhDaGFyYWN0ZXJBY3Rpb25zKTtcbiAgICB0aGlzLmNoYXJhY3RlcklkID0gMDtcbiAgICB0aGlzLm5hbWUgPSAnVEJEJztcbiAgICB0aGlzLnJhY2UgPSAnVEJEJztcbiAgICB0aGlzLmJsb29kbGluZSA9ICdUQkQnO1xuICAgIHRoaXMuZ2VuZGVyID0gJ1RCRCc7XG4gICAgdGhpcy53aW5zID0gMDtcbiAgICB0aGlzLmxvc3NlcyA9IDA7XG4gICAgdGhpcy53aW5Mb3NzUmF0aW8gPSAwO1xuICAgIHRoaXMuaXNSZXBvcnRlZCA9IGZhbHNlO1xuICB9XG5cbiAgb25HZXRDaGFyYWN0ZXJTdWNjZXNzKGRhdGEpIHtcbiAgICBhc3NpZ24odGhpcywgZGF0YSk7XG4gICAgJChkb2N1bWVudC5ib2R5KS5hdHRyKCdjbGFzcycsICdwcm9maWxlICcgKyB0aGlzLnJhY2UudG9Mb3dlckNhc2UoKSk7XG4gICAgbGV0IGxvY2FsRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdSQ1YnKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1JDVicpKSA6IHt9O1xuICAgIGxldCByZXBvcnRzID0gbG9jYWxEYXRhLnJlcG9ydHMgfHwgW107XG4gICAgdGhpcy5pc1JlcG9ydGVkID0gY29udGFpbnMocmVwb3J0cywgdGhpcy5jaGFyYWN0ZXJJZCk7XG4gICAgLy8gSWYgaXMgTmFOIChmcm9tIGRpdmlzaW9uIGJ5IHplcm8pIHRoZW4gc2V0IGl0IHRvIFwiMFwiXG4gICAgdGhpcy53aW5Mb3NzUmF0aW8gPSAoKHRoaXMud2lucyAvICh0aGlzLndpbnMgKyB0aGlzLmxvc3NlcykgKiAxMDApIHx8IDApLnRvRml4ZWQoMSk7XG4gIH1cblxuICBvbkdldENoYXJhY3RlckZhaWwoanFYaHIpIHtcbiAgICB0b2FzdHIuZXJyb3IoanFYaHIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICB9XG5cbiAgb25SZXBvcnRTdWNjZXNzKCkge1xuICAgIHRoaXMuaXNSZXBvcnRlZCA9IHRydWU7XG4gICAgbGV0IGxvY2FsRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdSQ1YnKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1JDVicpKSA6IHt9O1xuICAgIGxvY2FsRGF0YS5yZXBvcnRzID0gbG9jYWxEYXRhLnJlcG9ydHMgfHwgW107XG4gICAgbG9jYWxEYXRhLnJlcG9ydHMucHVzaCh0aGlzLmNoYXJhY3RlcklkKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnUkNWJywgSlNPTi5zdHJpbmdpZnkobG9jYWxEYXRhKSk7XG4gICAgdG9hc3RyLndhcm5pbmcoJ0NoYXJhY3RlciBoYXMgYmVlbiByZXBvcnRlZC4nKTtcbiAgfVxuXG4gIG9uUmVwb3J0RmFpbChqcVhocikge1xuICAgIHRvYXN0ci5lcnJvcihqcVhoci5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZVN0b3JlKENoYXJhY3RlclN0b3JlKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgRm9vdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0Zvb3RlckFjdGlvbnMnO1xuXG5jbGFzcyBGb290ZXJTdG9yZSB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMuYmluZEFjdGlvbnMoRm9vdGVyQWN0aW9ucyk7XG5cdFx0dGhpcy5jaGFyYWN0ZXJzID0gW107XG5cdH1cblxuXHRvbkdldFRvcENoYXJhY3RlcnNTdWNjZXNzKGRhdGEpIHtcblx0XHR0aGlzLmNoYXJhY3RlcnMgPSBkYXRhLnNsaWNlKDAsIDUpO1xuXHR9XG5cblx0b25HZXRUb3BDaGFyYWN0ZXJzRmFpbChqcVhocikge1xuXHRcdHRvYXN0ci5lcnJvcihqcVhoci5yZXNwb25zZUpTT04gJiYganFYaHIucmVzcG9uc2VKU09OLm1lc3NhZ2UgfHwganFYaHIucmVzcG9uc2VUZXh0IHx8IGpxWGhyLnN0YXR1c1RleHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShGb290ZXJTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IEhvbWVBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvSG9tZUFjdGlvbnMnO1xuXG5jbGFzcyBIb21lU3RvcmUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmJpbmRBY3Rpb25zKEhvbWVBY3Rpb25zKTtcblx0XHR0aGlzLmNoYXJhY3RlcnMgPSBbXTtcblx0fVxuXG5cdG9uR2V0VHdvQ2hhcmFjdGVyc1N1Y2Nlc3MoZGF0YSkge1xuXHRcdHRoaXMuY2hhcmFjdGVycyA9IGRhdGE7XG5cdH1cblxuXHRvbkdldFR3b0NoYXJhY3RlcnNGYWlsKGVycm9yTWVzc2FnZSkge1xuICBcdGxldCBlcnJvck1zZyA9IGVycm9yTWVzc2FnZS5yZXNwb25zZUpTT04gJiYgZXJyb3JNZXNzYWdlLnJlc3BvbnNlSlNPTi5tZXNzYWdlIHx8IGVycm9yTWVzc2FnZS5yZXNwb25zZVRleHQgfHwgZXJyb3JNZXNzYWdlLnN0YXR1c1RleHQ7XG5cdFx0dG9hc3RyLmVycm9yKGVycm9yTXNnKTtcblx0fVxuXG5cdG9uVm90ZUZhaWwoZXJyb3JNZXNzYWdlKSB7XG4gIFx0bGV0IGVycm9yTXNnID0gZXJyb3JNZXNzYWdlLnJlc3BvbnNlSlNPTiAmJiBlcnJvck1lc3NhZ2UucmVzcG9uc2VKU09OLm1lc3NhZ2UgfHwgZXJyb3JNZXNzYWdlLnJlc3BvbnNlVGV4dCB8fCBlcnJvck1lc3NhZ2Uuc3RhdHVzVGV4dDtcblx0XHR0b2FzdHIuZXJyb3IoZXJyb3JNc2cpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShIb21lU3RvcmUpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBOYXZiYXJBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvTmF2YmFyQWN0aW9ucyc7XG5cbmNsYXNzIE5hdmJhclN0b3JlIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5iaW5kQWN0aW9ucyhOYXZiYXJBY3Rpb25zKTtcblx0XHR0aGlzLnRvdGFsQ2hhcmFjdGVycyA9IDA7XG5cdFx0dGhpcy5vbmxpbmVVc2VycyA9IDA7XG5cdFx0dGhpcy5zZWFyY2hRdWVyeSA9ICcnO1xuXHRcdHRoaXMuYWpheEFuaW1hdGlvbkNsYXNzID0gJyc7XG5cdH1cblxuXHRvbkZpbmRDaGFyYWN0ZXJTdWNjZXNzKHBheWxvYWQpIHtcblx0XHRwYXlsb2FkLmhpc3RvcnkucHVzaFN0YXRlKG51bGwsICcvY2hhcmFjdGVycy8nICsgcGF5bG9hZC5jaGFyYWN0ZXJJZCk7XG5cdH1cblxuXHRvbkZpbmRDaGFyYWN0ZXJGYWlsKHBheWxvYWQpIHtcblx0XHRwYXlsb2FkLnNlYXJjaEZvcm0uY2xhc3NMaXN0LmFkZCgnc2hha2UnKTtcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdHBheWxvYWQuc2VhcmNoRm9ybS5jbGFzc0xpc3QucmVtb3ZlKCdzaGFrZScpO1xuXHRcdH0sIDEwMDApO1xuXHR9XG5cblx0b25VcGRhdGVPbmxpbmVVc2VycyhkYXRhKSB7XG5cdFx0dGhpcy5vbmxpbmVVc2VycyA9IGRhdGEub25saW5lVXNlcnM7XG5cdH1cblxuXHRvblVwZGF0ZUFqYXhBbmltYXRpb24oY2xhc3NOYW1lKSB7XG5cdFx0dGhpcy5hamF4QW5pbWF0aW9uQ2xhc3MgPSBjbGFzc05hbWU7IC8vZmFkZUluIG9yIGZhZGVPdXRcblx0fVxuXG5cdG9uVXBkYXRlU2VhcmNoUXVlcnkoZXZlbnQpIHtcblx0XHR0aGlzLnNlYXJjaFF1ZXJ5ID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXHR9XG5cblx0b25HZXRDaGFyYWN0ZXJDb3VudFN1Y2Nlc3MoZGF0YSkge1xuXHRcdHRoaXMudG90YWxDaGFyYWN0ZXJzID0gZGF0YS5jb3VudDtcblx0fVxuXG5cdG9uR2V0Q2hhcmFjdGVyQ291bnRGYWlsKGpxWGhyKSB7XG5cdFx0dG9hc3RyLmVycm9yKGpxWGhyLnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoTmF2YmFyU3RvcmUpOyIsImltcG9ydCB7YXNzaWdufSBmcm9tICd1bmRlcnNjb3JlJztcbmltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBTdGF0c0FjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9TdGF0c0FjdGlvbnMnO1xuXG5jbGFzcyBTdGF0c1N0b3JlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5iaW5kQWN0aW9ucyhTdGF0c0FjdGlvbnMpO1xuICAgIHRoaXMubGVhZGluZ1JhY2UgPSB7IHJhY2U6ICdVbmtub3duJywgY291bnQ6IDAgfTtcbiAgICB0aGlzLmxlYWRpbmdCbG9vZGxpbmUgPSB7IGJsb29kbGluZTogJ1Vua25vd24nLCBjb3VudDogMCB9O1xuICAgIHRoaXMuYW1hcnJDb3VudCA9IDA7XG4gICAgdGhpcy5jYWxkYXJpQ291bnQgPSAwO1xuICAgIHRoaXMuZ2FsbGVudGVDb3VudCA9IDA7XG4gICAgdGhpcy5taW5tYXRhckNvdW50ID0gMDtcbiAgICB0aGlzLnRvdGFsVm90ZXMgPSAwO1xuICAgIHRoaXMuZmVtYWxlQ291bnQgPSAwO1xuICAgIHRoaXMubWFsZUNvdW50ID0gMDtcbiAgICB0aGlzLnRvdGFsQ291bnQgPSAwO1xuICB9XG5cbiAgb25HZXRTdGF0c1N1Y2Nlc3MoZGF0YSkge1xuICAgIGFzc2lnbih0aGlzLCBkYXRhKTtcbiAgfVxuXG4gIG9uR2V0U3RhdHNGYWlsKGpxWGhyKSB7XG4gICAgdG9hc3RyLmVycm9yKGpxWGhyLnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoU3RhdHNTdG9yZSk7IiwidmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi9saWIva2V5cy5qcycpO1xudmFyIGlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9saWIvaXNfYXJndW1lbnRzLmpzJyk7XG5cbnZhciBkZWVwRXF1YWwgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKSB7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIERhdGUgJiYgZXhwZWN0ZWQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMuIE90aGVyIHBhaXJzIHRoYXQgZG8gbm90IGJvdGggcGFzcyB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgPT0uXG4gIH0gZWxzZSBpZiAoIWFjdHVhbCB8fCAhZXhwZWN0ZWQgfHwgdHlwZW9mIGFjdHVhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0cy5zdHJpY3QgPyBhY3R1YWwgPT09IGV4cGVjdGVkIDogYWN0dWFsID09IGV4cGVjdGVkO1xuXG4gIC8vIDcuNC4gRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKHgpIHtcbiAgaWYgKCF4IHx8IHR5cGVvZiB4ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgeC5sZW5ndGggIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgeC5jb3B5ICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB4LnNsaWNlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh4Lmxlbmd0aCA+IDAgJiYgdHlwZW9mIHhbMF0gIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiLCBvcHRzKSB7XG4gIHZhciBpLCBrZXk7XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS5cbiAgaWYgKGEucHJvdG90eXBlICE9PSBiLnByb3RvdHlwZSkgcmV0dXJuIGZhbHNlO1xuICAvL35+fkkndmUgbWFuYWdlZCB0byBicmVhayBPYmplY3Qua2V5cyB0aHJvdWdoIHNjcmV3eSBhcmd1bWVudHMgcGFzc2luZy5cbiAgLy8gICBDb252ZXJ0aW5nIHRvIGFycmF5IHNvbHZlcyB0aGUgcHJvYmxlbS5cbiAgaWYgKGlzQXJndW1lbnRzKGEpKSB7XG4gICAgaWYgKCFpc0FyZ3VtZW50cyhiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBkZWVwRXF1YWwoYSwgYiwgb3B0cyk7XG4gIH1cbiAgaWYgKGlzQnVmZmVyKGEpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSxcbiAgICAgICAga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7Ly9oYXBwZW5zIHdoZW4gb25lIGlzIGEgc3RyaW5nIGxpdGVyYWwgYW5kIHRoZSBvdGhlciBpc24ndFxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIG9wdHMpKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBhID09PSB0eXBlb2YgYjtcbn1cbiIsInZhciBzdXBwb3J0c0FyZ3VtZW50c0NsYXNzID0gKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzKVxufSkoKSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gc3VwcG9ydHNBcmd1bWVudHNDbGFzcyA/IHN1cHBvcnRlZCA6IHVuc3VwcG9ydGVkO1xuXG5leHBvcnRzLnN1cHBvcnRlZCA9IHN1cHBvcnRlZDtcbmZ1bmN0aW9uIHN1cHBvcnRlZChvYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpID09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xufTtcblxuZXhwb3J0cy51bnN1cHBvcnRlZCA9IHVuc3VwcG9ydGVkO1xuZnVuY3Rpb24gdW5zdXBwb3J0ZWQob2JqZWN0KXtcbiAgcmV0dXJuIG9iamVjdCAmJlxuICAgIHR5cGVvZiBvYmplY3QgPT0gJ29iamVjdCcgJiZcbiAgICB0eXBlb2Ygb2JqZWN0Lmxlbmd0aCA9PSAnbnVtYmVyJyAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsICdjYWxsZWUnKSAmJlxuICAgICFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCAnY2FsbGVlJykgfHxcbiAgICBmYWxzZTtcbn07XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgT2JqZWN0LmtleXMgPT09ICdmdW5jdGlvbidcbiAgPyBPYmplY3Qua2V5cyA6IHNoaW07XG5cbmV4cG9ydHMuc2hpbSA9IHNoaW07XG5mdW5jdGlvbiBzaGltIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikga2V5cy5wdXNoKGtleSk7XG4gIHJldHVybiBrZXlzO1xufVxuIiwiLyoqXG4gKiBJbmRpY2F0ZXMgdGhhdCBuYXZpZ2F0aW9uIHdhcyBjYXVzZWQgYnkgYSBjYWxsIHRvIGhpc3RvcnkucHVzaC5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIFBVU0ggPSAnUFVTSCc7XG5cbmV4cG9ydHMuUFVTSCA9IFBVU0g7XG4vKipcbiAqIEluZGljYXRlcyB0aGF0IG5hdmlnYXRpb24gd2FzIGNhdXNlZCBieSBhIGNhbGwgdG8gaGlzdG9yeS5yZXBsYWNlLlxuICovXG52YXIgUkVQTEFDRSA9ICdSRVBMQUNFJztcblxuZXhwb3J0cy5SRVBMQUNFID0gUkVQTEFDRTtcbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgbmF2aWdhdGlvbiB3YXMgY2F1c2VkIGJ5IHNvbWUgb3RoZXIgYWN0aW9uIHN1Y2hcbiAqIGFzIHVzaW5nIGEgYnJvd3NlcidzIGJhY2svZm9yd2FyZCBidXR0b25zIGFuZC9vciBtYW51YWxseSBtYW5pcHVsYXRpbmdcbiAqIHRoZSBVUkwgaW4gYSBicm93c2VyJ3MgbG9jYXRpb24gYmFyLiBUaGlzIGlzIHRoZSBkZWZhdWx0LlxuICpcbiAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93RXZlbnRIYW5kbGVycy9vbnBvcHN0YXRlXG4gKiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIFBPUCA9ICdQT1AnO1xuXG5leHBvcnRzLlBPUCA9IFBPUDtcbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IHtcbiAgUFVTSDogUFVTSCxcbiAgUkVQTEFDRTogUkVQTEFDRSxcbiAgUE9QOiBQT1Bcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmxvb3BBc3luYyA9IGxvb3BBc3luYztcblxuZnVuY3Rpb24gbG9vcEFzeW5jKHR1cm5zLCB3b3JrLCBjYWxsYmFjaykge1xuICB2YXIgY3VycmVudFR1cm4gPSAwO1xuICB2YXIgaXNEb25lID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICBpc0RvbmUgPSB0cnVlO1xuICAgIGNhbGxiYWNrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBmdW5jdGlvbiBuZXh0KCkge1xuICAgIGlmIChpc0RvbmUpIHJldHVybjtcblxuICAgIGlmIChjdXJyZW50VHVybiA8IHR1cm5zKSB7XG4gICAgICB3b3JrLmNhbGwodGhpcywgY3VycmVudFR1cm4rKywgbmV4dCwgZG9uZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRvbmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICBuZXh0KCk7XG59IiwiLyplc2xpbnQtZGlzYWJsZSBuby1lbXB0eSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5zYXZlU3RhdGUgPSBzYXZlU3RhdGU7XG5leHBvcnRzLnJlYWRTdGF0ZSA9IHJlYWRTdGF0ZTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIEtleVByZWZpeCA9ICdAQEhpc3RvcnkvJztcbnZhciBRdW90YUV4Y2VlZGVkRXJyb3IgPSAnUXVvdGFFeGNlZWRlZEVycm9yJztcbnZhciBTZWN1cml0eUVycm9yID0gJ1NlY3VyaXR5RXJyb3InO1xuXG5mdW5jdGlvbiBjcmVhdGVLZXkoa2V5KSB7XG4gIHJldHVybiBLZXlQcmVmaXggKyBrZXk7XG59XG5cbmZ1bmN0aW9uIHNhdmVTdGF0ZShrZXksIHN0YXRlKSB7XG4gIHRyeSB7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oY3JlYXRlS2V5KGtleSksIEpTT04uc3RyaW5naWZ5KHN0YXRlKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yLm5hbWUgPT09IFNlY3VyaXR5RXJyb3IpIHtcbiAgICAgIC8vIEJsb2NraW5nIGNvb2tpZXMgaW4gQ2hyb21lL0ZpcmVmb3gvU2FmYXJpIHRocm93cyBTZWN1cml0eUVycm9yIG9uIGFueVxuICAgICAgLy8gYXR0ZW1wdCB0byBhY2Nlc3Mgd2luZG93LnNlc3Npb25TdG9yYWdlLlxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF93YXJuaW5nMlsnZGVmYXVsdCddKGZhbHNlLCAnW2hpc3RvcnldIFVuYWJsZSB0byBzYXZlIHN0YXRlOyBzZXNzaW9uU3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlIGR1ZSB0byBzZWN1cml0eSBzZXR0aW5ncycpIDogdW5kZWZpbmVkO1xuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGVycm9yLm5hbWUgPT09IFF1b3RhRXhjZWVkZWRFcnJvciAmJiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAvLyBTYWZhcmkgXCJwcml2YXRlIG1vZGVcIiB0aHJvd3MgUXVvdGFFeGNlZWRlZEVycm9yLlxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF93YXJuaW5nMlsnZGVmYXVsdCddKGZhbHNlLCAnW2hpc3RvcnldIFVuYWJsZSB0byBzYXZlIHN0YXRlOyBzZXNzaW9uU3RvcmFnZSBpcyBub3QgYXZhaWxhYmxlIGluIFNhZmFyaSBwcml2YXRlIG1vZGUnKSA6IHVuZGVmaW5lZDtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlYWRTdGF0ZShrZXkpIHtcbiAgdmFyIGpzb24gPSB1bmRlZmluZWQ7XG4gIHRyeSB7XG4gICAganNvbiA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGNyZWF0ZUtleShrZXkpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gU2VjdXJpdHlFcnJvcikge1xuICAgICAgLy8gQmxvY2tpbmcgY29va2llcyBpbiBDaHJvbWUvRmlyZWZveC9TYWZhcmkgdGhyb3dzIFNlY3VyaXR5RXJyb3Igb24gYW55XG4gICAgICAvLyBhdHRlbXB0IHRvIGFjY2VzcyB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10oZmFsc2UsICdbaGlzdG9yeV0gVW5hYmxlIHRvIHJlYWQgc3RhdGU7IHNlc3Npb25TdG9yYWdlIGlzIG5vdCBhdmFpbGFibGUgZHVlIHRvIHNlY3VyaXR5IHNldHRpbmdzJykgOiB1bmRlZmluZWQ7XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGlmIChqc29uKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb24pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBJZ25vcmUgaW52YWxpZCBKU09OLlxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufSIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7XG5leHBvcnRzLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSByZW1vdmVFdmVudExpc3RlbmVyO1xuZXhwb3J0cy5nZXRIYXNoUGF0aCA9IGdldEhhc2hQYXRoO1xuZXhwb3J0cy5yZXBsYWNlSGFzaFBhdGggPSByZXBsYWNlSGFzaFBhdGg7XG5leHBvcnRzLmdldFdpbmRvd1BhdGggPSBnZXRXaW5kb3dQYXRoO1xuZXhwb3J0cy5nbyA9IGdvO1xuZXhwb3J0cy5nZXRVc2VyQ29uZmlybWF0aW9uID0gZ2V0VXNlckNvbmZpcm1hdGlvbjtcbmV4cG9ydHMuc3VwcG9ydHNIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5O1xuZXhwb3J0cy5zdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoO1xuXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICBpZiAobm9kZS5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIG5vZGUuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgaWYgKG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnIycpWzFdIHx8ICcnO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGdldFdpbmRvd1BhdGgoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoICsgd2luZG93LmxvY2F0aW9uLmhhc2g7XG59XG5cbmZ1bmN0aW9uIGdvKG4pIHtcbiAgaWYgKG4pIHdpbmRvdy5oaXN0b3J5LmdvKG4pO1xufVxuXG5mdW5jdGlvbiBnZXRVc2VyQ29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JhY2t0L3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gRklYTUU6IFdvcmsgYXJvdW5kIG91ciBicm93c2VyIGhpc3Rvcnkgbm90IHdvcmtpbmcgY29ycmVjdGx5IG9uIENocm9tZVxuICAvLyBpT1M6IGh0dHBzOi8vZ2l0aHViLmNvbS9yYWNrdC9yZWFjdC1yb3V0ZXIvaXNzdWVzLzI1NjVcbiAgaWYgKHVhLmluZGV4T2YoJ0NyaU9TJykgIT09IC0xKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHZhciB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIHJldHVybiB1YS5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufSIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZXhwb3J0cy5jYW5Vc2VET00gPSBjYW5Vc2VET007IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfaW52YXJpYW50ID0gcmVxdWlyZSgnaW52YXJpYW50Jyk7XG5cbnZhciBfaW52YXJpYW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ludmFyaWFudCk7XG5cbnZhciBfQWN0aW9ucyA9IHJlcXVpcmUoJy4vQWN0aW9ucycpO1xuXG52YXIgX0V4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnLi9FeGVjdXRpb25FbnZpcm9ubWVudCcpO1xuXG52YXIgX0RPTVV0aWxzID0gcmVxdWlyZSgnLi9ET01VdGlscycpO1xuXG52YXIgX0RPTVN0YXRlU3RvcmFnZSA9IHJlcXVpcmUoJy4vRE9NU3RhdGVTdG9yYWdlJyk7XG5cbnZhciBfY3JlYXRlRE9NSGlzdG9yeSA9IHJlcXVpcmUoJy4vY3JlYXRlRE9NSGlzdG9yeScpO1xuXG52YXIgX2NyZWF0ZURPTUhpc3RvcnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlRE9NSGlzdG9yeSk7XG5cbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZSgnLi9wYXJzZVBhdGgnKTtcblxudmFyIF9wYXJzZVBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VQYXRoKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIEhUTUw1J3MgaGlzdG9yeSBBUElcbiAqIChwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudCkgdG8gbWFuYWdlIGhpc3RvcnkuXG4gKiBUaGlzIGlzIHRoZSByZWNvbW1lbmRlZCBtZXRob2Qgb2YgbWFuYWdpbmcgaGlzdG9yeSBpbiBicm93c2VycyBiZWNhdXNlXG4gKiBpdCBwcm92aWRlcyB0aGUgY2xlYW5lc3QgVVJMcy5cbiAqXG4gKiBOb3RlOiBJbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBmdWxsXG4gKiBwYWdlIHJlbG9hZHMgd2lsbCBiZSB1c2VkIHRvIHByZXNlcnZlIFVSTHMuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHt9IDogYXJndW1lbnRzWzBdO1xuXG4gICFfRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UpIDogdW5kZWZpbmVkO1xuXG4gIHZhciBmb3JjZVJlZnJlc2ggPSBvcHRpb25zLmZvcmNlUmVmcmVzaDtcblxuICB2YXIgaXNTdXBwb3J0ZWQgPSBfRE9NVXRpbHMuc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciB1c2VSZWZyZXNoID0gIWlzU3VwcG9ydGVkIHx8IGZvcmNlUmVmcmVzaDtcblxuICBmdW5jdGlvbiBnZXRDdXJyZW50TG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgaGlzdG9yeVN0YXRlID0gaGlzdG9yeVN0YXRlIHx8IHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuXG4gICAgdmFyIHBhdGggPSBfRE9NVXRpbHMuZ2V0V2luZG93UGF0aCgpO1xuICAgIHZhciBfaGlzdG9yeVN0YXRlID0gaGlzdG9yeVN0YXRlO1xuICAgIHZhciBrZXkgPSBfaGlzdG9yeVN0YXRlLmtleTtcblxuICAgIHZhciBzdGF0ZSA9IHVuZGVmaW5lZDtcbiAgICBpZiAoa2V5KSB7XG4gICAgICBzdGF0ZSA9IF9ET01TdGF0ZVN0b3JhZ2UucmVhZFN0YXRlKGtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlID0gbnVsbDtcbiAgICAgIGtleSA9IGhpc3RvcnkuY3JlYXRlS2V5KCk7XG5cbiAgICAgIGlmIChpc1N1cHBvcnRlZCkgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKF9leHRlbmRzKHt9LCBoaXN0b3J5U3RhdGUsIHsga2V5OiBrZXkgfSksIG51bGwsIHBhdGgpO1xuICAgIH1cblxuICAgIHZhciBsb2NhdGlvbiA9IF9wYXJzZVBhdGgyWydkZWZhdWx0J10ocGF0aCk7XG5cbiAgICByZXR1cm4gaGlzdG9yeS5jcmVhdGVMb2NhdGlvbihfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHsgc3RhdGU6IHN0YXRlIH0pLCB1bmRlZmluZWQsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydFBvcFN0YXRlTGlzdGVuZXIoX3JlZikge1xuICAgIHZhciB0cmFuc2l0aW9uVG8gPSBfcmVmLnRyYW5zaXRpb25UbztcblxuICAgIGZ1bmN0aW9uIHBvcFN0YXRlTGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm47IC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG5cbiAgICAgIHRyYW5zaXRpb25UbyhnZXRDdXJyZW50TG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgICB9XG5cbiAgICBfRE9NVXRpbHMuYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csICdwb3BzdGF0ZScsIHBvcFN0YXRlTGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIF9ET01VdGlscy5yZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgJ3BvcHN0YXRlJywgcG9wU3RhdGVMaXN0ZW5lcik7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpbmlzaFRyYW5zaXRpb24obG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZW5hbWUgPSBsb2NhdGlvbi5iYXNlbmFtZTtcbiAgICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoO1xuICAgIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcbiAgICB2YXIgYWN0aW9uID0gbG9jYXRpb24uYWN0aW9uO1xuICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXk7XG5cbiAgICBpZiAoYWN0aW9uID09PSBfQWN0aW9ucy5QT1ApIHJldHVybjsgLy8gTm90aGluZyB0byBkby5cblxuICAgIF9ET01TdGF0ZVN0b3JhZ2Uuc2F2ZVN0YXRlKGtleSwgc3RhdGUpO1xuXG4gICAgdmFyIHBhdGggPSAoYmFzZW5hbWUgfHwgJycpICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHZhciBoaXN0b3J5U3RhdGUgPSB7XG4gICAgICBrZXk6IGtleVxuICAgIH07XG5cbiAgICBpZiAoYWN0aW9uID09PSBfQWN0aW9ucy5QVVNIKSB7XG4gICAgICBpZiAodXNlUmVmcmVzaCkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHBhdGg7XG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gUHJldmVudCBsb2NhdGlvbiB1cGRhdGUuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShoaXN0b3J5U3RhdGUsIG51bGwsIHBhdGgpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJFUExBQ0VcbiAgICAgIGlmICh1c2VSZWZyZXNoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHBhdGgpO1xuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIFByZXZlbnQgbG9jYXRpb24gdXBkYXRlLlxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoaGlzdG9yeVN0YXRlLCBudWxsLCBwYXRoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0gX2NyZWF0ZURPTUhpc3RvcnkyWydkZWZhdWx0J10oX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICBnZXRDdXJyZW50TG9jYXRpb246IGdldEN1cnJlbnRMb2NhdGlvbixcbiAgICBmaW5pc2hUcmFuc2l0aW9uOiBmaW5pc2hUcmFuc2l0aW9uLFxuICAgIHNhdmVTdGF0ZTogX0RPTVN0YXRlU3RvcmFnZS5zYXZlU3RhdGVcbiAgfSkpO1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMCxcbiAgICAgIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIGxpc3RlbkJlZm9yZShsaXN0ZW5lcikge1xuICAgIGlmICgrK2xpc3RlbmVyQ291bnQgPT09IDEpIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gc3RhcnRQb3BTdGF0ZUxpc3RlbmVyKGhpc3RvcnkpO1xuXG4gICAgdmFyIHVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW5CZWZvcmUobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHVubGlzdGVuKCk7XG5cbiAgICAgIGlmICgtLWxpc3RlbmVyQ291bnQgPT09IDApIHN0b3BQb3BTdGF0ZUxpc3RlbmVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIGlmICgrK2xpc3RlbmVyQ291bnQgPT09IDEpIHN0b3BQb3BTdGF0ZUxpc3RlbmVyID0gc3RhcnRQb3BTdGF0ZUxpc3RlbmVyKGhpc3RvcnkpO1xuXG4gICAgdmFyIHVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4obGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHVubGlzdGVuKCk7XG5cbiAgICAgIGlmICgtLWxpc3RlbmVyQ291bnQgPT09IDApIHN0b3BQb3BTdGF0ZUxpc3RlbmVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gcmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgaWYgKCsrbGlzdGVuZXJDb3VudCA9PT0gMSkgc3RvcFBvcFN0YXRlTGlzdGVuZXIgPSBzdGFydFBvcFN0YXRlTGlzdGVuZXIoaGlzdG9yeSk7XG5cbiAgICBoaXN0b3J5LnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vayk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgaGlzdG9yeS51bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vayk7XG5cbiAgICBpZiAoLS1saXN0ZW5lckNvdW50ID09PSAwKSBzdG9wUG9wU3RhdGVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBoaXN0b3J5LCB7XG4gICAgbGlzdGVuQmVmb3JlOiBsaXN0ZW5CZWZvcmUsXG4gICAgbGlzdGVuOiBsaXN0ZW4sXG4gICAgcmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogcmVnaXN0ZXJUcmFuc2l0aW9uSG9vayxcbiAgICB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2s6IHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9va1xuICB9KTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gY3JlYXRlQnJvd3Nlckhpc3Rvcnk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoJy4vRXhlY3V0aW9uRW52aXJvbm1lbnQnKTtcblxudmFyIF9ET01VdGlscyA9IHJlcXVpcmUoJy4vRE9NVXRpbHMnKTtcblxudmFyIF9jcmVhdGVIaXN0b3J5ID0gcmVxdWlyZSgnLi9jcmVhdGVIaXN0b3J5Jyk7XG5cbnZhciBfY3JlYXRlSGlzdG9yeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVIaXN0b3J5KTtcblxuZnVuY3Rpb24gY3JlYXRlRE9NSGlzdG9yeShvcHRpb25zKSB7XG4gIHZhciBoaXN0b3J5ID0gX2NyZWF0ZUhpc3RvcnkyWydkZWZhdWx0J10oX2V4dGVuZHMoe1xuICAgIGdldFVzZXJDb25maXJtYXRpb246IF9ET01VdGlscy5nZXRVc2VyQ29uZmlybWF0aW9uXG4gIH0sIG9wdGlvbnMsIHtcbiAgICBnbzogX0RPTVV0aWxzLmdvXG4gIH0pKTtcblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICAhX0V4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfaW52YXJpYW50MlsnZGVmYXVsdCddKGZhbHNlLCAnRE9NIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UpIDogdW5kZWZpbmVkO1xuXG4gICAgcmV0dXJuIGhpc3RvcnkubGlzdGVuKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgaGlzdG9yeSwge1xuICAgIGxpc3RlbjogbGlzdGVuXG4gIH0pO1xufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBjcmVhdGVET01IaXN0b3J5O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLy9pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJ1xuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfZGVlcEVxdWFsID0gcmVxdWlyZSgnZGVlcC1lcXVhbCcpO1xuXG52YXIgX2RlZXBFcXVhbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWVwRXF1YWwpO1xuXG52YXIgX0FzeW5jVXRpbHMgPSByZXF1aXJlKCcuL0FzeW5jVXRpbHMnKTtcblxudmFyIF9BY3Rpb25zID0gcmVxdWlyZSgnLi9BY3Rpb25zJyk7XG5cbnZhciBfY3JlYXRlTG9jYXRpb24yID0gcmVxdWlyZSgnLi9jcmVhdGVMb2NhdGlvbicpO1xuXG52YXIgX2NyZWF0ZUxvY2F0aW9uMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUxvY2F0aW9uMik7XG5cbnZhciBfcnVuVHJhbnNpdGlvbkhvb2sgPSByZXF1aXJlKCcuL3J1blRyYW5zaXRpb25Ib29rJyk7XG5cbnZhciBfcnVuVHJhbnNpdGlvbkhvb2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnVuVHJhbnNpdGlvbkhvb2spO1xuXG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoJy4vcGFyc2VQYXRoJyk7XG5cbnZhciBfcGFyc2VQYXRoMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcnNlUGF0aCk7XG5cbnZhciBfZGVwcmVjYXRlID0gcmVxdWlyZSgnLi9kZXByZWNhdGUnKTtcblxudmFyIF9kZXByZWNhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVwcmVjYXRlKTtcblxuZnVuY3Rpb24gY3JlYXRlUmFuZG9tS2V5KGxlbmd0aCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGxlbmd0aCk7XG59XG5cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmXG4gIC8vYS5hY3Rpb24gPT09IGIuYWN0aW9uICYmIC8vIERpZmZlcmVudCBhY3Rpb24gIT09IGxvY2F0aW9uIGNoYW5nZS5cbiAgYS5rZXkgPT09IGIua2V5ICYmIF9kZWVwRXF1YWwyWydkZWZhdWx0J10oYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbnZhciBEZWZhdWx0S2V5TGVuZ3RoID0gNjtcblxuZnVuY3Rpb24gY3JlYXRlSGlzdG9yeSgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1swXTtcbiAgdmFyIGdldEN1cnJlbnRMb2NhdGlvbiA9IG9wdGlvbnMuZ2V0Q3VycmVudExvY2F0aW9uO1xuICB2YXIgZmluaXNoVHJhbnNpdGlvbiA9IG9wdGlvbnMuZmluaXNoVHJhbnNpdGlvbjtcbiAgdmFyIHNhdmVTdGF0ZSA9IG9wdGlvbnMuc2F2ZVN0YXRlO1xuICB2YXIgZ28gPSBvcHRpb25zLmdvO1xuICB2YXIga2V5TGVuZ3RoID0gb3B0aW9ucy5rZXlMZW5ndGg7XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gb3B0aW9ucy5nZXRVc2VyQ29uZmlybWF0aW9uO1xuXG4gIGlmICh0eXBlb2Yga2V5TGVuZ3RoICE9PSAnbnVtYmVyJykga2V5TGVuZ3RoID0gRGVmYXVsdEtleUxlbmd0aDtcblxuICB2YXIgdHJhbnNpdGlvbkhvb2tzID0gW107XG5cbiAgZnVuY3Rpb24gbGlzdGVuQmVmb3JlKGhvb2spIHtcbiAgICB0cmFuc2l0aW9uSG9va3MucHVzaChob29rKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB0cmFuc2l0aW9uSG9va3MgPSB0cmFuc2l0aW9uSG9va3MuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBob29rO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBhbGxLZXlzID0gW107XG4gIHZhciBjaGFuZ2VMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIGxvY2F0aW9uID0gdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnQoKSB7XG4gICAgaWYgKHBlbmRpbmdMb2NhdGlvbiAmJiBwZW5kaW5nTG9jYXRpb24uYWN0aW9uID09PSBfQWN0aW9ucy5QT1ApIHtcbiAgICAgIHJldHVybiBhbGxLZXlzLmluZGV4T2YocGVuZGluZ0xvY2F0aW9uLmtleSk7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIGFsbEtleXMuaW5kZXhPZihsb2NhdGlvbi5rZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlTG9jYXRpb24obmV3TG9jYXRpb24pIHtcbiAgICB2YXIgY3VycmVudCA9IGdldEN1cnJlbnQoKTtcblxuICAgIGxvY2F0aW9uID0gbmV3TG9jYXRpb247XG5cbiAgICBpZiAobG9jYXRpb24uYWN0aW9uID09PSBfQWN0aW9ucy5QVVNIKSB7XG4gICAgICBhbGxLZXlzID0gW10uY29uY2F0KGFsbEtleXMuc2xpY2UoMCwgY3VycmVudCArIDEpLCBbbG9jYXRpb24ua2V5XSk7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlJFUExBQ0UpIHtcbiAgICAgIGFsbEtleXNbY3VycmVudF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgfVxuXG4gICAgY2hhbmdlTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICBsaXN0ZW5lcihsb2NhdGlvbik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICBjaGFuZ2VMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICBpZiAobG9jYXRpb24pIHtcbiAgICAgIGxpc3RlbmVyKGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9sb2NhdGlvbiA9IGdldEN1cnJlbnRMb2NhdGlvbigpO1xuICAgICAgYWxsS2V5cyA9IFtfbG9jYXRpb24ua2V5XTtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uKF9sb2NhdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoYW5nZUxpc3RlbmVycyA9IGNoYW5nZUxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgX0FzeW5jVXRpbHMubG9vcEFzeW5jKHRyYW5zaXRpb25Ib29rcy5sZW5ndGgsIGZ1bmN0aW9uIChpbmRleCwgbmV4dCwgZG9uZSkge1xuICAgICAgX3J1blRyYW5zaXRpb25Ib29rMlsnZGVmYXVsdCddKHRyYW5zaXRpb25Ib29rc1tpbmRleF0sIGxvY2F0aW9uLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICAgIGRvbmUocmVzdWx0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sIGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICBpZiAoZ2V0VXNlckNvbmZpcm1hdGlvbiAmJiB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihtZXNzYWdlLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgICBjYWxsYmFjayhvayAhPT0gZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKG1lc3NhZ2UgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHZhciBwZW5kaW5nTG9jYXRpb24gPSB1bmRlZmluZWQ7XG5cbiAgZnVuY3Rpb24gdHJhbnNpdGlvblRvKG5leHRMb2NhdGlvbikge1xuICAgIGlmIChsb2NhdGlvbiAmJiBsb2NhdGlvbnNBcmVFcXVhbChsb2NhdGlvbiwgbmV4dExvY2F0aW9uKSkgcmV0dXJuOyAvLyBOb3RoaW5nIHRvIGRvLlxuXG4gICAgcGVuZGluZ0xvY2F0aW9uID0gbmV4dExvY2F0aW9uO1xuXG4gICAgY29uZmlybVRyYW5zaXRpb25UbyhuZXh0TG9jYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKHBlbmRpbmdMb2NhdGlvbiAhPT0gbmV4dExvY2F0aW9uKSByZXR1cm47IC8vIFRyYW5zaXRpb24gd2FzIGludGVycnVwdGVkLlxuXG4gICAgICBpZiAob2spIHtcbiAgICAgICAgLy8gdHJlYXQgUFVTSCB0byBjdXJyZW50IHBhdGggbGlrZSBSRVBMQUNFIHRvIGJlIGNvbnNpc3RlbnQgd2l0aCBicm93c2Vyc1xuICAgICAgICBpZiAobmV4dExvY2F0aW9uLmFjdGlvbiA9PT0gX0FjdGlvbnMuUFVTSCkge1xuICAgICAgICAgIHZhciBwcmV2UGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgICAgIHZhciBuZXh0UGF0aCA9IGNyZWF0ZVBhdGgobmV4dExvY2F0aW9uKTtcblxuICAgICAgICAgIGlmIChuZXh0UGF0aCA9PT0gcHJldlBhdGgpIG5leHRMb2NhdGlvbi5hY3Rpb24gPSBfQWN0aW9ucy5SRVBMQUNFO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGZpbmlzaFRyYW5zaXRpb24obmV4dExvY2F0aW9uKSAhPT0gZmFsc2UpIHVwZGF0ZUxvY2F0aW9uKG5leHRMb2NhdGlvbik7XG4gICAgICB9IGVsc2UgaWYgKGxvY2F0aW9uICYmIG5leHRMb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlBPUCkge1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGxvY2F0aW9uLmtleSk7XG4gICAgICAgIHZhciBuZXh0SW5kZXggPSBhbGxLZXlzLmluZGV4T2YobmV4dExvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEgJiYgbmV4dEluZGV4ICE9PSAtMSkgZ28ocHJldkluZGV4IC0gbmV4dEluZGV4KTsgLy8gUmVzdG9yZSB0aGUgVVJMLlxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChsb2NhdGlvbikge1xuICAgIHRyYW5zaXRpb25UbyhjcmVhdGVMb2NhdGlvbihsb2NhdGlvbiwgX0FjdGlvbnMuUFVTSCwgY3JlYXRlS2V5KCkpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UobG9jYXRpb24pIHtcbiAgICB0cmFuc2l0aW9uVG8oY3JlYXRlTG9jYXRpb24obG9jYXRpb24sIF9BY3Rpb25zLlJFUExBQ0UsIGNyZWF0ZUtleSgpKSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBjcmVhdGVSYW5kb21LZXkoa2V5TGVuZ3RoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgICBpZiAobG9jYXRpb24gPT0gbnVsbCB8fCB0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnKSByZXR1cm4gbG9jYXRpb247XG5cbiAgICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoO1xuICAgIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuICAgIHZhciByZXN1bHQgPSBwYXRobmFtZTtcblxuICAgIGlmIChzZWFyY2gpIHJlc3VsdCArPSBzZWFyY2g7XG5cbiAgICBpZiAoaGFzaCkgcmVzdWx0ICs9IGhhc2g7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIga2V5ID0gYXJndW1lbnRzLmxlbmd0aCA8PSAyIHx8IGFyZ3VtZW50c1syXSA9PT0gdW5kZWZpbmVkID8gY3JlYXRlS2V5KCkgOiBhcmd1bWVudHNbMl07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ29iamVjdCcpIHtcbiAgICAgIC8vd2FybmluZyhcbiAgICAgIC8vICBmYWxzZSxcbiAgICAgIC8vICAnVGhlIHN0YXRlICgybmQpIGFyZ3VtZW50IHRvIGhpc3RvcnkuY3JlYXRlTG9jYXRpb24gaXMgZGVwcmVjYXRlZDsgdXNlIGEgJyArXG4gICAgICAvLyAgJ2xvY2F0aW9uIGRlc2NyaXB0b3IgaW5zdGVhZCdcbiAgICAgIC8vKVxuXG4gICAgICBpZiAodHlwZW9mIGxvY2F0aW9uID09PSAnc3RyaW5nJykgbG9jYXRpb24gPSBfcGFyc2VQYXRoMlsnZGVmYXVsdCddKGxvY2F0aW9uKTtcblxuICAgICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHsgc3RhdGU6IGFjdGlvbiB9KTtcblxuICAgICAgYWN0aW9uID0ga2V5O1xuICAgICAga2V5ID0gYXJndW1lbnRzWzNdIHx8IGNyZWF0ZUtleSgpO1xuICAgIH1cblxuICAgIHJldHVybiBfY3JlYXRlTG9jYXRpb24zWydkZWZhdWx0J10obG9jYXRpb24sIGFjdGlvbiwga2V5KTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gc2V0U3RhdGUoc3RhdGUpIHtcbiAgICBpZiAobG9jYXRpb24pIHtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uU3RhdGUobG9jYXRpb24sIHN0YXRlKTtcbiAgICAgIHVwZGF0ZUxvY2F0aW9uKGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXBkYXRlTG9jYXRpb25TdGF0ZShnZXRDdXJyZW50TG9jYXRpb24oKSwgc3RhdGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUxvY2F0aW9uU3RhdGUobG9jYXRpb24sIHN0YXRlKSB7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBfZXh0ZW5kcyh7fSwgbG9jYXRpb24uc3RhdGUsIHN0YXRlKTtcbiAgICBzYXZlU3RhdGUobG9jYXRpb24ua2V5LCBsb2NhdGlvbi5zdGF0ZSk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vaykge1xuICAgIGlmICh0cmFuc2l0aW9uSG9va3MuaW5kZXhPZihob29rKSA9PT0gLTEpIHRyYW5zaXRpb25Ib29rcy5wdXNoKGhvb2spO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2soaG9vaykge1xuICAgIHRyYW5zaXRpb25Ib29rcyA9IHRyYW5zaXRpb25Ib29rcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBpdGVtICE9PSBob29rO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiBwdXNoU3RhdGUoc3RhdGUsIHBhdGgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSBwYXRoID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcblxuICAgIHB1c2goX2V4dGVuZHMoeyBzdGF0ZTogc3RhdGUgfSwgcGF0aCkpO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiByZXBsYWNlU3RhdGUoc3RhdGUsIHBhdGgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSBwYXRoID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcblxuICAgIHJlcGxhY2UoX2V4dGVuZHMoeyBzdGF0ZTogc3RhdGUgfSwgcGF0aCkpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0ZW5CZWZvcmU6IGxpc3RlbkJlZm9yZSxcbiAgICBsaXN0ZW46IGxpc3RlbixcbiAgICB0cmFuc2l0aW9uVG86IHRyYW5zaXRpb25UbyxcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNyZWF0ZUtleTogY3JlYXRlS2V5LFxuICAgIGNyZWF0ZVBhdGg6IGNyZWF0ZVBhdGgsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBjcmVhdGVMb2NhdGlvbjogY3JlYXRlTG9jYXRpb24sXG5cbiAgICBzZXRTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShzZXRTdGF0ZSwgJ3NldFN0YXRlIGlzIGRlcHJlY2F0ZWQ7IHVzZSBsb2NhdGlvbi5rZXkgdG8gc2F2ZSBzdGF0ZSBpbnN0ZWFkJyksXG4gICAgcmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShyZWdpc3RlclRyYW5zaXRpb25Ib29rLCAncmVnaXN0ZXJUcmFuc2l0aW9uSG9vayBpcyBkZXByZWNhdGVkOyB1c2UgbGlzdGVuQmVmb3JlIGluc3RlYWQnKSxcbiAgICB1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2s6IF9kZXByZWNhdGUyWydkZWZhdWx0J10odW5yZWdpc3RlclRyYW5zaXRpb25Ib29rLCAndW5yZWdpc3RlclRyYW5zaXRpb25Ib29rIGlzIGRlcHJlY2F0ZWQ7IHVzZSB0aGUgY2FsbGJhY2sgcmV0dXJuZWQgZnJvbSBsaXN0ZW5CZWZvcmUgaW5zdGVhZCcpLFxuICAgIHB1c2hTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShwdXNoU3RhdGUsICdwdXNoU3RhdGUgaXMgZGVwcmVjYXRlZDsgdXNlIHB1c2ggaW5zdGVhZCcpLFxuICAgIHJlcGxhY2VTdGF0ZTogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXShyZXBsYWNlU3RhdGUsICdyZXBsYWNlU3RhdGUgaXMgZGVwcmVjYXRlZDsgdXNlIHJlcGxhY2UgaW5zdGVhZCcpXG4gIH07XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGNyZWF0ZUhpc3Rvcnk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvL2ltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9BY3Rpb25zID0gcmVxdWlyZSgnLi9BY3Rpb25zJyk7XG5cbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZSgnLi9wYXJzZVBhdGgnKTtcblxudmFyIF9wYXJzZVBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VQYXRoKTtcblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24oKSB7XG4gIHZhciBsb2NhdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/ICcvJyA6IGFyZ3VtZW50c1swXTtcbiAgdmFyIGFjdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMSB8fCBhcmd1bWVudHNbMV0gPT09IHVuZGVmaW5lZCA/IF9BY3Rpb25zLlBPUCA6IGFyZ3VtZW50c1sxXTtcbiAgdmFyIGtleSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMiB8fCBhcmd1bWVudHNbMl0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBhcmd1bWVudHNbMl07XG5cbiAgdmFyIF9mb3VydGhBcmcgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDMgfHwgYXJndW1lbnRzWzNdID09PSB1bmRlZmluZWQgPyBudWxsIDogYXJndW1lbnRzWzNdO1xuXG4gIGlmICh0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnKSBsb2NhdGlvbiA9IF9wYXJzZVBhdGgyWydkZWZhdWx0J10obG9jYXRpb24pO1xuXG4gIGlmICh0eXBlb2YgYWN0aW9uID09PSAnb2JqZWN0Jykge1xuICAgIC8vd2FybmluZyhcbiAgICAvLyAgZmFsc2UsXG4gICAgLy8gICdUaGUgc3RhdGUgKDJuZCkgYXJndW1lbnQgdG8gY3JlYXRlTG9jYXRpb24gaXMgZGVwcmVjYXRlZDsgdXNlIGEgJyArXG4gICAgLy8gICdsb2NhdGlvbiBkZXNjcmlwdG9yIGluc3RlYWQnXG4gICAgLy8pXG5cbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBsb2NhdGlvbiwgeyBzdGF0ZTogYWN0aW9uIH0pO1xuXG4gICAgYWN0aW9uID0ga2V5IHx8IF9BY3Rpb25zLlBPUDtcbiAgICBrZXkgPSBfZm91cnRoQXJnO1xuICB9XG5cbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoIHx8ICcnO1xuICB2YXIgaGFzaCA9IGxvY2F0aW9uLmhhc2ggfHwgJyc7XG4gIHZhciBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlIHx8IG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCxcbiAgICBzdGF0ZTogc3RhdGUsXG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAga2V5OiBrZXlcbiAgfTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gY3JlYXRlTG9jYXRpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvL2ltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnXG5cblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZnVuY3Rpb24gZGVwcmVjYXRlKGZuKSB7XG4gIHJldHVybiBmbjtcbiAgLy9yZXR1cm4gZnVuY3Rpb24gKCkge1xuICAvLyAgd2FybmluZyhmYWxzZSwgJ1toaXN0b3J5XSAnICsgbWVzc2FnZSlcbiAgLy8gIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gIC8vfVxufVxuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGRlcHJlY2F0ZTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBleHRyYWN0UGF0aChzdHJpbmcpIHtcbiAgdmFyIG1hdGNoID0gc3RyaW5nLm1hdGNoKC9eaHR0cHM/OlxcL1xcL1teXFwvXSovKTtcblxuICBpZiAobWF0Y2ggPT0gbnVsbCkgcmV0dXJuIHN0cmluZztcblxuICByZXR1cm4gc3RyaW5nLnN1YnN0cmluZyhtYXRjaFswXS5sZW5ndGgpO1xufVxuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4dHJhY3RQYXRoO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfZXh0cmFjdFBhdGggPSByZXF1aXJlKCcuL2V4dHJhY3RQYXRoJyk7XG5cbnZhciBfZXh0cmFjdFBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXh0cmFjdFBhdGgpO1xuXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBfZXh0cmFjdFBhdGgyWydkZWZhdWx0J10ocGF0aCk7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10ocGF0aCA9PT0gcGF0aG5hbWUsICdBIHBhdGggbXVzdCBiZSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2ggb25seSwgbm90IGEgZnVsbHkgcXVhbGlmaWVkIFVSTCBsaWtlIFwiJXNcIicsIHBhdGgpIDogdW5kZWZpbmVkO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cmluZyhoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyaW5nKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHJpbmcoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyaW5nKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIGlmIChwYXRobmFtZSA9PT0gJycpIHBhdGhuYW1lID0gJy8nO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2hcbiAgfTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gcGFyc2VQYXRoO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBydW5UcmFuc2l0aW9uSG9vayhob29rLCBsb2NhdGlvbiwgY2FsbGJhY2spIHtcbiAgdmFyIHJlc3VsdCA9IGhvb2sobG9jYXRpb24sIGNhbGxiYWNrKTtcblxuICBpZiAoaG9vay5sZW5ndGggPCAyKSB7XG4gICAgLy8gQXNzdW1lIHRoZSBob29rIHJ1bnMgc3luY2hyb25vdXNseSBhbmQgYXV0b21hdGljYWxseVxuICAgIC8vIGNhbGwgdGhlIGNhbGxiYWNrIHdpdGggdGhlIHJldHVybiB2YWx1ZS5cbiAgICBjYWxsYmFjayhyZXN1bHQpO1xuICB9IGVsc2Uge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfd2FybmluZzJbJ2RlZmF1bHQnXShyZXN1bHQgPT09IHVuZGVmaW5lZCwgJ1lvdSBzaG91bGQgbm90IFwicmV0dXJuXCIgaW4gYSB0cmFuc2l0aW9uIGhvb2sgd2l0aCBhIGNhbGxiYWNrIGFyZ3VtZW50OyBjYWxsIHRoZSBjYWxsYmFjayBpbnN0ZWFkJykgOiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gcnVuVHJhbnNpdGlvbkhvb2s7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIl19"}