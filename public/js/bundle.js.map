{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/AddCharacterActions.js","app/actions/CharacterActions.js","app/actions/FooterActions.js","app/actions/HomeActions.js","app/actions/NavbarActions.js","app/alt.js","app/components/AddCharacter.js","app/components/App.js","app/components/Character.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/main.js","app/routes.js","app/stores/AddCharacterStore.js","app/stores/CharacterStore.js","app/stores/FooterStore.js","app/stores/HomeStore.js","app/stores/NavbarStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"AAAA;;;;;;;;;ACAA;;;;;;;;IAEM,mB;AACL,gCAAc;AAAA;;AACb,OAAK,eAAL,CACC,qBADD,EAEC,kBAFD,EAGC,YAHD,EAIC,cAJD,EAKC,aALD,EAMC,eAND;AAQA;;;;+BAEY,I,EAAM,M,EAAQ;AAAA;;AAC1B,KAAE,IAAF,CAAO;AACN,UAAM,MADA;AAEN,SAAK,iBAFC;AAGN,UAAM,EAAE,MAAM,IAAR,EAAc,QAAQ,MAAtB;AAHA,IAAP,EAKC,IALD,CAKM,UAAC,IAAD,EAAU;AACf,UAAK,OAAL,CAAa,mBAAb,CAAiC,KAAK,OAAtC;AACA,IAPD,EAQC,IARD,CAQM,UAAC,KAAD,EAAW;AAChB,UAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B;AACA,IAVD;AAWA;;;;;;kBAGa,cAAI,aAAJ,CAAkB,mBAAlB,C;;;;;;;;;;;AC7Bf;;;;;;;;IAEM,gB;AACJ,8BAAc;AAAA;;AACZ,SAAK,eAAL,CACE,eADF,EAEE,YAFF,EAGE,qBAHF,EAIE,kBAJF;AAMD;;;;iCAEY,W,EAAa;AAAA;;AACxB,QAAE,IAAF,CAAO,EAAE,KAAK,qBAAqB,WAA5B,EAAP,EACG,IADH,CACQ,UAAC,IAAD,EAAU;AACd,cAAK,OAAL,CAAa,mBAAb,CAAiC,IAAjC;AACD,OAHH,EAIG,IAJH,CAIQ,UAAC,KAAD,EAAW;AACf,cAAK,OAAL,CAAa,gBAAb,CAA8B,KAA9B;AACD,OANH;AAOD;;;2BAEM,W,EAAa;AAAA;;AAClB,QAAE,IAAF,CAAO;AACL,cAAM,MADD;AAEL,aAAK,aAFA;AAGL,cAAM,EAAE,aAAa,WAAf;AAHD,OAAP,EAKG,IALH,CAKQ,YAAM;AACV,eAAK,OAAL,CAAa,aAAb;AACD,OAPH,EAQG,IARH,CAQQ,UAAC,KAAD,EAAW;AACf,eAAK,OAAL,CAAa,UAAb,CAAwB,KAAxB;AACD,OAVH;AAWD;;;;;;kBAGY,cAAI,aAAJ,CAAkB,gBAAlB,C;;;;;;;;;;;ACrCf;;;;;;;;IAEM,a;AACL,0BAAc;AAAA;;AAEb,OAAK,eAAL,CACC,yBADD,EAEC,sBAFD;AAIA;;;;qCAEkB;AAAA;;AAClB,KAAE,IAAF,CAAO,EAAE,KAAK,qBAAP,EAAP,EACE,IADF,CACO,UAAC,IAAD,EAAU;AACf,UAAK,OAAL,CAAa,uBAAb,CAAqC,IAArC;AACA,IAHF,EAIE,IAJF,CAIO,UAAC,KAAD,EAAW;AAChB,UAAK,OAAL,CAAa,oBAAb,CAAkC,KAAlC;AACA,IANF;AAOA;;;;;;kBAGa,cAAI,aAAJ,CAAkB,aAAlB,C;;;;;;;;;;;ACtBf;;;;;;;;IAEM,W;AACL,wBAAc;AAAA;;AACb,OAAK,eAAL,CACC,yBADD,EAEC,sBAFD,EAGC,UAHD;AAKA;;;;qCAEkB;AAAA;;AAClB,KAAE,IAAF,CAAO,EAAE,KAAK,iBAAP,EAAP,EACC,IADD,CACM,gBAAQ;AACb,UAAK,OAAL,CAAa,uBAAb,CAAqC,IAArC;AACA,IAHD,EAIC,IAJD,CAIM,iBAAS;AACd,UAAK,OAAL,CAAa,oBAAb,CAAkC,KAAlC;AACA,IAND;AAOA;;;uBAEI,M,EAAQ,K,EAAO;AAAA;;AACnB,KAAE,IAAF,CAAO;AACN,UAAM,KADA;AAEN,SAAK,iBAFC;AAGN,UAAM,EAAE,QAAQ,MAAV,EAAkB,OAAO,KAAzB;AAHA,IAAP,EAKC,IALD,CAKM,YAAM;AACX,WAAK,OAAL,CAAa,gBAAb;AACA,IAPD,EAQC,IARD,CAQM,UAAC,KAAD,EAAW;AAChB,WAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB;AACA,IAVD;AAWA;;;;;;kBAGa,cAAI,aAAJ,CAAkB,WAAlB,C;;;;;;;;;;;ACpCf;;;;AACA;;;;;;IAEM,a;AACL,0BAAc;AAAA;;AACb,OAAK,eAAL,CACC,mBADD,EAEC,qBAFD,EAGC,mBAHD,EAIC,0BAJD,EAKC,uBALD,EAMC,sBAND,EAOC,mBAPD;AASA;;;;gCAEa,O,EAAS;AAAA;;AACtB,KAAE,IAAF,CAAO;AACN,SAAK,wBADC;AAEN,UAAM,EAAE,MAAM,QAAQ,WAAhB;AAFA,IAAP,EAIC,IAJD,CAIM,UAAC,IAAD,EAAU;AACf,4BAAO,OAAP,EAAgB,IAAhB;AACA,UAAK,OAAL,CAAa,oBAAb,CAAkC,OAAlC;AACA,IAPD,EAQC,IARD,CAQM,UAAC,KAAD,EAAW;AAChB,UAAK,OAAL,CAAa,qBAAb,CAAmC,KAAnC;AACA,IAVD;AAWA;;;sCAEmB;AAAA;;AACnB,KAAE,IAAF,CAAO,EAAE,KAAK,uBAAP,EAAP,EACC,IADD,CACM,UAAC,IAAD,EAAU;AACf,WAAK,OAAL,CAAa,wBAAb,CAAsC,IAAtC;AACA,IAHD,EAIC,IAJD,CAIM,UAAC,KAAD,EAAW;AAChB,WAAK,OAAL,CAAa,qBAAb,CAAmC,KAAnC;AACA,IAND;AAOA;;;;;;kBAGa,cAAI,aAAJ,CAAkB,aAAlB,C;;;;;;;;;ACzCf;;;;;;kBAEe,mB;;;;;;;;;;;ACFf;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,Y;;;AACJ,wBAAY,KAAZ,EAAmB;AAAA;;AAAA,4HACX,KADW;;AAEjB,UAAK,KAAL,GAAa,4BAAkB,QAAlB,EAAb;AACA,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AAHiB;AAIlB;;;;wCAEmB;AAClB,kCAAkB,MAAlB,CAAyB,KAAK,QAA9B;AACD;;;2CAEsB;AACrB,kCAAkB,QAAlB,CAA2B,KAAK,QAAhC;AACD;;;6BAEQ,K,EAAO;AACd,WAAK,QAAL,CAAc,KAAd;AACD;;;iCAEY,K,EAAO;AAClB,YAAM,cAAN;;AAEA,UAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,EAAX;AACA,UAAI,SAAS,KAAK,KAAL,CAAW,MAAxB;;AAEA,UAAI,CAAC,IAAL,EAAW;AACT,sCAAoB,WAApB;AACA,aAAK,IAAL,CAAU,aAAV,CAAwB,UAAxB,GAAqC,KAArC;AACD;;AAED,UAAI,CAAC,MAAL,EAAa;AACX,sCAAoB,aAApB;AACD;;AAED,UAAI,QAAQ,MAAZ,EAAoB;AAClB,sCAAoB,YAApB,CAAiC,IAAjC,EAAuC,MAAvC;AACD;AACF;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAK,WAAU,sBAAf;AACE;AAAA;AAAA,cAAK,WAAU,UAAf;AACE;AAAA;AAAA,gBAAK,WAAU,qBAAf;AACE;AAAA;AAAA,kBAAK,WAAU,eAAf;AAAA;AAAA,eADF;AAEE;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE;AAAA;AAAA,oBAAM,UAAW,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAAjB;AACE;AAAA;AAAA,sBAAK,WAAY,gBAAgB,KAAK,KAAL,CAAW,mBAA5C;AACE;AAAA;AAAA,wBAAO,WAAU,eAAjB;AAAA;AAAA,qBADF;AAEE,6DAAO,MAAK,MAAZ,EAAmB,WAAU,cAA7B,EAA4C,KAAI,eAAhD,EAAgE,OAAQ,KAAK,KAAL,CAAW,IAAnF,EAA0F,UAAW,8BAAoB,UAAzH,EAAsI,eAAtI,GAFF;AAGE;AAAA;AAAA,wBAAM,WAAU,YAAhB;AAA+B,2BAAK,KAAL,CAAW;AAA1C;AAHF,mBADF;AAME;AAAA;AAAA,sBAAK,WAAY,gBAAgB,KAAK,KAAL,CAAW,qBAA5C;AACE;AAAA;AAAA,wBAAK,WAAU,oBAAf;AACE,+DAAO,MAAK,OAAZ,EAAoB,MAAK,QAAzB,EAAkC,IAAG,QAArC,EAA8C,OAAM,QAApD,EAA6D,SAAU,KAAK,KAAL,CAAW,MAAX,KAAsB,QAA7F,EAAwG,UAAW,8BAAoB,YAAvI,GADF;AAEE;AAAA;AAAA,0BAAO,SAAQ,QAAf;AAAA;AAAA;AAFF,qBADF;AAKE;AAAA;AAAA,wBAAK,WAAU,oBAAf;AACE,+DAAO,MAAK,OAAZ,EAAoB,MAAK,QAAzB,EAAkC,IAAG,MAArC,EAA4C,OAAM,MAAlD,EAAyD,SAAU,KAAK,KAAL,CAAW,MAAX,KAAsB,MAAzF,EAAkG,UAAW,8BAAoB,YAAjI,GADF;AAEE;AAAA;AAAA,0BAAO,SAAQ,MAAf;AAAA;AAAA;AAFF;AALF,mBANF;AAgBE;AAAA;AAAA,sBAAQ,MAAK,QAAb,EAAsB,WAAU,iBAAhC;AAAA;AAAA;AAhBF;AADF;AAFF;AADF;AADF;AADF,OADF;AA+BD;;;;;;kBAGY,Y;;;;;;;;;;;AC9Ef;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,G;;;;;;;;;;;2BACI;AACR,UACC;AAAA;AAAA;AACC,sDAAQ,SAAU,KAAK,KAAL,CAAW,OAA7B,GADD;AAEG,SAAK,KAAL,CAAW,QAFd;AAGC;AAHD,IADD;AAOA;;;;;;kBAGa,G;;;;;;;;;;;AChBf;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,S;;;AACL,oBAAY,KAAZ,EAAmB;AAAA;;AAAA,oHACZ,KADY;;AAGlB,QAAK,KAAL,GAAa,yBAAe,QAAf,EAAb;AACA,QAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AAJkB;AAKlB;;;;sCAEmB;AACnB,4BAAe,MAAf,CAAsB,KAAK,QAA3B;AACA,8BAAiB,YAAjB,CAA8B,KAAK,KAAL,CAAW,MAAX,CAAkB,EAAhD;;AAEA,KAAE,iBAAF,EAAqB,aAArB,CAAmC;AACjC,UAAM,OAD2B;AAEjC,eAAW,aAFsB;AAGjC,yBAAqB,IAHY;AAIjC,cAAU,IAJuB;AAKjC,UAAM;AACJ,cAAS,IADL;AAEJ,eAAU;AAFN;AAL2B,IAAnC;AAUA;;;yCAEsB;AACtB,4BAAe,QAAf,CAAwB,KAAK,QAA7B;AACA,KAAE,SAAS,IAAX,EAAiB,WAAjB;AACA;;;qCAEkB,S,EAAW,S,EAAW;AACxC,OAAI,UAAU,MAAV,CAAiB,EAAjB,KAAwB,KAAK,KAAL,CAAW,MAAX,CAAkB,EAA9C,EAAkD;AACjD,+BAAiB,YAAjB,CAA8B,KAAK,KAAL,CAAW,MAAX,CAAkB,EAAhD;AACA;AACD;;;2BAEQ,K,EAAO;AACf,QAAK,QAAL,CAAc,KAAd;AACA;;;2BAEQ;AACR,UACG;AAAA;AAAA,MAAK,WAAU,WAAf;AACC;AAAA;AAAA,OAAK,WAAU,aAAf;AACC;AAAA;AAAA,QAAG,WAAU,gBAAb,EAA8B,iDAAgD,KAAK,KAAL,CAAW,WAA3D,cAA9B;AACC,6CAAK,gDAA8C,KAAK,KAAL,CAAW,WAAzD,aAAL;AADD;AADD,KADD;AAMC;AAAA;AAAA,OAAK,WAAU,uBAAf;AACC;AAAA;AAAA;AAAI;AAAA;AAAA;AAAU,YAAK,KAAL,CAAW;AAArB;AAAJ,MADD;AAEC;AAAA;AAAA,QAAI,WAAU,MAAd;AAAA;AAA2B;AAAA;AAAA;AAAU,YAAK,KAAL,CAAW;AAArB;AAA3B,MAFD;AAGC;AAAA;AAAA,QAAI,WAAU,MAAd;AAAA;AAAgC;AAAA;AAAA;AAAU,YAAK,KAAL,CAAW;AAArB;AAAhC,MAHD;AAIC;AAAA;AAAA,QAAI,WAAU,MAAd;AAAA;AAA6B;AAAA;AAAA;AAAU,YAAK,KAAL,CAAW;AAArB;AAA7B,MAJD;AAKC;AAAA;AAAA,QAAQ,WAAU,qBAAlB;AACC,gBAAU,2BAAiB,MAAjB,CAAwB,IAAxB,CAA6B,IAA7B,EAAmC,KAAK,KAAL,CAAW,WAA9C,CADX;AAEC,iBAAW,KAAK,KAAL,CAAW,UAFvB;AAGG,WAAK,KAAL,CAAW,UAAX,GAAwB,UAAxB,GAAoC;AAHvC;AALD,KAND;AAiBC;AAAA;AAAA,OAAK,WAAU,wBAAf;AACC;AAAA;AAAA;AACC;AAAA;AAAA;AAAI;AAAA;AAAA,UAAM,WAAU,cAAhB;AAAiC,aAAK,KAAL,CAAW;AAA5C,QAAJ;AAAA;AAAA,OADD;AAEC;AAAA;AAAA;AAAI;AAAA;AAAA,UAAM,WAAU,cAAhB;AAAiC,aAAK,KAAL,CAAW;AAA5C,QAAJ;AAAA;AAAA,OAFD;AAGC;AAAA;AAAA;AAAI;AAAA;AAAA,UAAM,WAAU,cAAhB;AAAiC,aAAK,KAAL,CAAW;AAA5C,QAAJ;AAAA;AAAA;AAHD;AADD;AAjBD,IADH;AA2BA;;;;;;kBAGa,S;;;;;;;;;;;AC1Ef;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,M;;;AACL,iBAAY,KAAZ,EAAmB;AAAA;;AAAA,8GACZ,KADY;;AAGlB,QAAK,KAAL,GAAa,sBAAY,QAAZ,EAAb;AACA,QAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AAJkB;AAKlB;;;;sCAEmB;AACnB,yBAAY,MAAZ,CAAmB,KAAK,QAAxB;AACA,2BAAc,gBAAd;AACA;;;yCAEsB;AACtB,yBAAY,QAAZ,CAAqB,KAAK,QAA1B;AACA;;;2BAEQ,K,EAAO;AACf,QAAK,QAAL,CAAc,KAAd;AACA;;;2BAEQ;AACN,OAAI,wBAAwB,KAAK,KAAL,CAAW,UAAX,CAAsB,GAAtB,CAA0B,UAAC,SAAD,EAAe;AACnE,WACE;AAAA;AAAA,OAAI,KAAK,UAAU,WAAnB;AACE;AAAA;AAAA,QAAM,IAAI,iBAAiB,UAAU,WAArC;AACE,6CAAK,WAAU,UAAf,EAA0B,KAAK,0CAA0C,UAAU,WAApD,GAAkE,UAAjG;AADF;AADF,KADF;AAOD,IAR2B,CAA5B;;AAUA,UACD;AAAA;AAAA;AACC;AAAA;AAAA,OAAK,WAAU,WAAf;AACE;AAAA;AAAA,QAAK,WAAU,KAAf;AACE;AAAA;AAAA,SAAK,WAAU,UAAf;AACE;AAAA;AAAA,UAAI,WAAU,MAAd;AAAqB;AAAA;AAAA;AAAA;AAAA,SAArB;AAAA;AAAsD;AAAA;AAAA;AAAA;AAAA;AAAtD,QADF;AAEE;AAAA;AAAA;AAAA;AAAc;AAAA;AAAA;AAAA;AAAA,SAAd;AAAA;AAAwC;AAAA;AAAA;AAAA;AAAA,SAAxC;AAAA;AAAqE;AAAA;AAAA;AAAA;AAAA,SAArE;AAAA;AAAA,QAFF;AAGE;AAAA;AAAA;AAAA;AAAoB;AAAA;AAAA,WAAG,MAAK,uDAAR;AAAA;AAAA,SAApB;AAAA;AAAA,QAHF;AAIE;AAAA;AAAA;AAAA;AAAA;AAJF,OADF;AAOE;AAAA;AAAA,SAAK,WAAU,oBAAf;AACE;AAAA;AAAA,UAAI,WAAU,MAAd;AAAqB;AAAA;AAAA;AAAA;AAAA,SAArB;AAAA;AAAA,QADF;AAEE;AAAA;AAAA,UAAI,WAAU,aAAd;AACG;AADH;AAFF;AAPF;AADF;AADD,IADC;AAoBF;;;;;;kBAGa,M;;;;;;;;;;;AC5Df;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEM,I;;;AACL,eAAY,KAAZ,EAAmB;AAAA;;AAAA,0GACZ,KADY;;AAGlB,QAAK,KAAL,GAAa,oBAAU,QAAV,EAAb;AACA,QAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AAJkB;AAKlB;;;;sCAEmB;AACnB,uBAAU,MAAV,CAAiB,KAAK,QAAtB;AACA,yBAAY,gBAAZ;AACA;;;yCAEsB;AACtB,uBAAU,QAAV,CAAmB,KAAK,QAAxB;AACA;;;2BAEQ,K,EAAO;AACf,QAAK,QAAL,CAAc,KAAd;AACA;;;8BAEW,S,EAAW;AACtB,OAAI,SAAS,UAAU,WAAvB;AACA,OAAI,SAAS,uBAAM,yBAAQ,KAAK,KAAL,CAAW,UAAnB,EAA+B,2BAAU,KAAK,KAAL,CAAW,UAArB,EAAiC,EAAE,aAAa,MAAf,EAAjC,CAA/B,CAAN,EAAiG,WAA9G;AACA,yBAAY,IAAZ,CAAiB,MAAjB,EAAyB,MAAzB;AACA;;;2BAEQ;AAAA;;AACR,OAAI,iBAAiB,KAAK,KAAL,CAAW,UAAX,CAAsB,GAAtB,CAA0B,UAAC,SAAD,EAAY,KAAZ,EAAsB;AACpE,WACC;AAAA;AAAA,OAAK,KAAM,UAAU,WAArB,EAAmC,WAAY,UAAU,CAAV,GAAc,4CAAd,GAA6D,4BAA5G;AACC;AAAA;AAAA,QAAK,WAAU,6BAAf;AACC,6CAAK,SAAU,OAAK,WAAL,CAAiB,IAAjB,SAA4B,SAA5B,CAAf,EAAwD,+CAA8C,UAAU,WAAxD,aAAxD,GADD;AAEC;AAAA;AAAA,SAAK,WAAU,qBAAf;AACC;AAAA;AAAA,UAAI,WAAU,aAAd;AACC;AAAA;AAAA;AAAI;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA;AAA6B,mBAAU,IAAvC;AAAA;AAAA,SADD;AAEC;AAAA;AAAA;AAAI;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA;AAAkC,mBAAU,SAA5C;AAAA;AAAA;AAFD,QADD;AAKC;AAAA;AAAA;AACC;AAAA;AAAA,WAAM,qBAAoB,UAAU,WAApC;AAAmD;AAAA;AAAA;AAAU,oBAAU;AAApB;AAAnD;AADD;AALD;AAFD;AADD,KADD;AAgBA,IAjBoB,CAArB;AAkBA,UACC;AAAA;AAAA,MAAK,WAAU,WAAf;AACC;AAAA;AAAA,OAAI,WAAU,aAAd;AAAA;AAAA,KADD;AAEC;AAAA;AAAA,OAAK,WAAU,KAAf;AACG;AADH;AAFD,IADD;AAQA;;;;;;kBAGa,I;;;;;;;;;;;AC/Df;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,M;;;AACL,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,gHACZ,KADY;;AAGlB,UAAK,KAAL,GAAa,sBAAY,QAAZ,EAAb;AACA,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AAJkB;AAKlB;;;;wCAEmB;AACnB,4BAAY,MAAZ,CAAmB,KAAK,QAAxB;AACA,8BAAc,iBAAd;;AAEA,UAAI,SAAS,GAAG,OAAH,EAAb;;AAEA,aAAO,EAAP,CAAU,aAAV,EAAyB,UAAC,IAAD,EAAU;AAClC,gCAAc,iBAAd,CAAgC,IAAhC;AACA,OAFD;;AAIA,QAAE,QAAF,EAAY,SAAZ,CAAsB,YAAM;AAC3B,gCAAc,mBAAd,CAAkC,QAAlC;AACA,OAFD;;AAIA,QAAE,QAAF,EAAY,YAAZ,CAAyB,YAAM;AAC9B,mBAAW,YAAM;AAChB,kCAAc,mBAAd,CAAkC,SAAlC;AACA,SAFD,EAEG,GAFH;AAGA,OAJD;AAKA;;;2CAEsB;AACtB,4BAAY,QAAZ,CAAqB,KAAK,QAA1B;AACA;;;6BAEQ,K,EAAO;AACf,WAAK,QAAL,CAAc,KAAd;AACA;;;iCAEY,K,EAAO;AACnB,YAAM,cAAN;;AAEA,UAAI,cAAc,KAAK,KAAL,CAAW,WAAX,CAAuB,IAAvB,EAAlB;;AAEA,UAAI,WAAJ,EAAiB;AAChB,gCAAc,aAAd,CAA4B;AAC3B,uBAAa,WADc;AAE3B,sBAAY,KAAK,IAAL,CAAU,UAFK;AAG3B,mBAAS,KAAK,KAAL,CAAW;AAHO,SAA5B;AAKA;AACD;;;6BAEQ;AACR,aACG;AAAA;AAAA,UAAK,WAAU,yCAAf;AACC;AAAA;AAAA,YAAK,WAAU,eAAf;AACC;AAAA;AAAA,cAAQ,MAAK,QAAb,EAAsB,WAAU,yBAAhC,EAA0D,eAAY,UAAtE,EAAiF,eAAY,SAA7F;AACC;AAAA;AAAA,gBAAM,WAAU,SAAhB;AAAA;AAAA,aADD;AAEC,oDAAM,WAAU,UAAhB,GAFD;AAGC,oDAAM,WAAU,UAAhB,GAHD;AAIC,oDAAM,WAAU,UAAhB;AAJD,WADD;AAOC;AAAA;AAAA,cAAM,IAAG,GAAT,EAAa,KAAI,wBAAjB,EAA0C,WAAU,cAApD;AACC;AAAA;AAAA,gBAAM,KAAI,WAAV,EAAsB,WAAY,wBAAwB,KAAK,KAAL,CAAW,kBAArE;AACC,qDAAK,WAAU,YAAf,GADD;AAEC,qDAAK,WAAU,YAAf,GAFD;AAGC,qDAAK,WAAU,KAAf,GAHD;AAIC,qDAAK,WAAU,YAAf,GAJD;AAKC,qDAAK,WAAU,YAAf,GALD;AAMC,qDAAK,WAAU,KAAf,GAND;AAOC,qDAAK,WAAU,YAAf,GAPD;AAQC,qDAAK,WAAU,KAAf,GARD;AASC,qDAAK,WAAU,YAAf;AATD,aADD;AAAA;AAaC;AAAA;AAAA,gBAAM,WAAU,6BAAhB;AAAgD,mBAAK,KAAL,CAAW;AAA3D;AAbD;AAPD,SADD;AAwBC;AAAA;AAAA,YAAK,IAAG,QAAR,EAAiB,WAAU,0BAA3B;AACC;AAAA;AAAA,cAAM,KAAI,YAAV,EAAuB,WAAU,kCAAjC,EAAoE,UAAW,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAA/E;AACC;AAAA;AAAA,gBAAK,WAAU,aAAf;AACC,uDAAO,MAAK,MAAZ,EAAmB,WAAU,cAA7B,EAA4C,aAAc,KAAK,KAAL,CAAW,eAAX,GAA6B,aAAvF,EAAuG,OAAQ,KAAK,KAAL,CAAW,WAA1H,EAAwI,UAAW,wBAAc,iBAAjK,GADD;AAEC;AAAA;AAAA,kBAAM,WAAU,iBAAhB;AACC;AAAA;AAAA,oBAAQ,WAAU,iBAAlB,EAAoC,SAAU,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAA9C;AAA6E,0DAAM,WAAU,4BAAhB;AAA7E;AADD;AAFD;AADD,WADD;AASC;AAAA;AAAA,cAAI,WAAU,gBAAd;AACC;AAAA;AAAA;AAAI;AAAA;AAAA,kBAAM,IAAG,GAAT;AAAA;AAAA;AAAJ,aADD;AAEC;AAAA;AAAA;AAAI;AAAA;AAAA,kBAAM,IAAG,QAAT;AAAA;AAAA;AAAJ,aAFD;AAGC;AAAA;AAAA,gBAAI,WAAU,UAAd;AACC;AAAA;AAAA,kBAAG,MAAK,GAAR,EAAY,WAAU,iBAAtB,EAAwC,eAAY,UAApD;AAAA;AAAuE,wDAAM,WAAU,OAAhB;AAAvE,eADD;AAEC;AAAA;AAAA,kBAAI,WAAU,eAAd;AACC;AAAA;AAAA;AAAI;AAAA;AAAA,sBAAM,IAAG,MAAT;AAAA;AAAA;AAAJ,iBADD;AAEC;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACC;AAAA;AAAA,sBAAM,IAAG,cAAT;AAAA;AAAA,mBADD;AAEC;AAAA;AAAA,sBAAI,WAAU,eAAd;AACC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ,qBADD;AAEC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ,qBAFD;AAGC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ;AAHD;AAFD,iBAFD;AAUC;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACC;AAAA;AAAA,sBAAM,IAAG,eAAT;AAAA;AAAA,mBADD;AAEC;AAAA;AAAA,sBAAI,WAAU,eAAd;AACC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ,qBADD;AAEC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ,qBAFD;AAGC;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ;AAHD;AAFD,iBAVD;AAkBC;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,eAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAlBD;AA0BC;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,YAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,kBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,mBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBA1BD;AAkCC,sDAAI,WAAU,SAAd,GAlCD;AAmCC;AAAA;AAAA;AAAI;AAAA;AAAA,sBAAM,IAAG,QAAT;AAAA;AAAA;AAAJ;AAnCD;AAFD,aAHD;AA2CC;AAAA;AAAA,gBAAI,WAAU,UAAd;AACE;AAAA;AAAA,kBAAG,MAAK,GAAR,EAAY,WAAU,iBAAtB,EAAwC,eAAY,UAApD;AAAA;AAAsE,wDAAM,WAAU,OAAhB;AAAtE,eADF;AAEE;AAAA;AAAA,kBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,sBAAM,IAAG,SAAT;AAAA;AAAA;AAAJ,iBADF;AAEE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,iBAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAFF;AAUE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,kBAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,2BAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,0BAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAVF;AAkBE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,kBAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,4BAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,4BAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAlBF;AA0BE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,eAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,qBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF;AA1BF;AAFF,aA3CD;AAiFC;AAAA;AAAA,gBAAI,WAAU,UAAd;AACE;AAAA;AAAA,kBAAG,MAAK,GAAR,EAAY,WAAU,iBAAtB,EAAwC,eAAY,UAApD;AAAA;AAAoE,wDAAM,WAAU,OAAhB;AAApE,eADF;AAEE;AAAA;AAAA,kBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,sBAAM,IAAG,OAAT;AAAA;AAAA;AAAJ,iBADF;AAEE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,eAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAFF;AAUE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,gBAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,yBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,uBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,wBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAVF;AAkBE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,gBAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,uBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,0BAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,0BAAT;AAAA;AAAA;AAAJ;AAHF;AAFF,iBAlBF;AA0BE;AAAA;AAAA,oBAAI,WAAU,kBAAd;AACE;AAAA;AAAA,sBAAM,IAAG,aAAT;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAI,WAAU,eAAd;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,mBAAT;AAAA;AAAA;AAAJ,qBADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,sBAAT;AAAA;AAAA;AAAJ,qBAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,0BAAM,IAAG,oBAAT;AAAA;AAAA;AAAJ;AAHF;AAFF;AA1BF;AAFF,aAjFD;AAuHC;AAAA;AAAA;AAAI;AAAA;AAAA,kBAAM,IAAG,MAAT;AAAA;AAAA;AAAJ;AAvHD;AATD;AAxBD,OADH;AA8JA;;;;;;kBAGa,M;;;;;AC1Nf;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAI,UAAU,qCAAd;;AAEA,mBAAS,MAAT,CACC;AAAA;AAAA,GAAQ,SAAU,OAAlB;AAAA;AAAA,CADD,EAEC,SAAS,cAAT,CAAwB,KAAxB,CAFD;;;;;;;;;ACRA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAGE;AAAA;AAAA,IAAO,wBAAP;AACC,sDAAO,MAAK,GAAZ,EAAgB,yBAAhB,GADD;AAEC,sDAAO,MAAK,MAAZ,EAAmB,iCAAnB,GAFD;AAGC,sDAAO,MAAK,iBAAZ,EAA8B,8BAA9B;AAHD,C;;;;;;;;;;;ACRF;;;;AACA;;;;;;;;IAEM,iB;AACJ,+BAAc;AAAA;;AACZ,SAAK,WAAL;AACA,SAAK,IAAL,GAAY,EAAZ;AACA,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,SAAL,GAAiB,EAAjB;AACA,SAAK,mBAAL,GAA2B,EAA3B;AACA,SAAK,qBAAL,GAA6B,EAA7B;AACD;;;;0CAEqB,c,EAAgB;AACpC,WAAK,mBAAL,GAA2B,aAA3B;AACA,WAAK,SAAL,GAAiB,cAAjB;AACD;;;uCAEkB,Y,EAAc;AAChC,UAAI,WAAW,aAAa,YAAb,IAA6B,aAAa,YAAb,CAA0B,OAAvD,IAAkE,aAAa,YAA/E,IAA+F,aAAa,UAA3H;AACC,WAAK,mBAAL,GAA2B,WAA3B;AACA,WAAK,SAAL,GAAiB,QAAjB;AACF,aAAO,KAAP,CAAa,QAAb;AACC;;;iCAEY,K,EAAO;AAClB,WAAK,IAAL,GAAY,MAAM,MAAN,CAAa,KAAzB;AACA,WAAK,mBAAL,GAA2B,EAA3B;AACA,WAAK,SAAL,GAAiB,EAAjB;AACD;;;mCAEc,K,EAAO;AACpB,WAAK,MAAL,GAAc,MAAM,MAAN,CAAa,KAA3B;AACA,WAAK,qBAAL,GAA6B,EAA7B;AACD;;;oCAEe;AACd,WAAK,mBAAL,GAA2B,WAA3B;AACA,WAAK,SAAL,GAAiB,gCAAjB;AACD;;;sCAEiB;AAChB,WAAK,qBAAL,GAA6B,WAA7B;AACD;;;;;;kBAGY,cAAI,WAAJ,CAAgB,iBAAhB,C;;;;;;;;;;;AC9Cf;;AACA;;;;AACA;;;;;;;;IAEM,c;AACJ,4BAAc;AAAA;;AACZ,SAAK,WAAL;AACA,SAAK,WAAL,GAAmB,CAAnB;AACA,SAAK,IAAL,GAAY,KAAZ;AACA,SAAK,IAAL,GAAY,KAAZ;AACA,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,IAAL,GAAY,CAAZ;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,YAAL,GAAoB,CAApB;AACA,SAAK,UAAL,GAAkB,KAAlB;AACD;;;;0CAEqB,I,EAAM;AAC1B,8BAAO,IAAP,EAAa,IAAb;AACA,QAAE,SAAS,IAAX,EAAiB,IAAjB,CAAsB,OAAtB,EAA+B,aAAa,KAAK,IAAL,CAAU,WAAV,EAA5C;AACA,UAAI,YAAY,aAAa,OAAb,CAAqB,KAArB,IAA8B,KAAK,KAAL,CAAW,aAAa,OAAb,CAAqB,KAArB,CAAX,CAA9B,GAAwE,EAAxF;AACA,UAAI,UAAU,UAAU,OAAV,IAAqB,EAAnC;AACA,WAAK,UAAL,GAAkB,0BAAS,OAAT,EAAkB,KAAK,WAAvB,CAAlB;AACA;AACA,WAAK,YAAL,GAAoB,CAAE,KAAK,IAAL,IAAa,KAAK,IAAL,GAAY,KAAK,MAA9B,IAAwC,GAAzC,IAAiD,CAAlD,EAAqD,OAArD,CAA6D,CAA7D,CAApB;AACD;;;uCAEkB,K,EAAO;AACxB,aAAO,KAAP,CAAa,MAAM,YAAN,CAAmB,OAAhC;AACD;;;sCAEiB;AAChB,WAAK,UAAL,GAAkB,IAAlB;AACA,UAAI,YAAY,aAAa,OAAb,CAAqB,KAArB,IAA8B,KAAK,KAAL,CAAW,aAAa,OAAb,CAAqB,KAArB,CAAX,CAA9B,GAAwE,EAAxF;AACA,gBAAU,OAAV,GAAoB,UAAU,OAAV,IAAqB,EAAzC;AACA,gBAAU,OAAV,CAAkB,IAAlB,CAAuB,KAAK,WAA5B;AACA,mBAAa,OAAb,CAAqB,KAArB,EAA4B,KAAK,SAAL,CAAe,SAAf,CAA5B;AACA,aAAO,OAAP,CAAe,8BAAf;AACD;;;iCAEY,K,EAAO;AAClB,aAAO,KAAP,CAAa,MAAM,YAAN,CAAmB,OAAhC;AACD;;;;;;kBAGY,cAAI,WAAJ,CAAgB,cAAhB,C;;;;;;;;;;;AC9Cf;;;;AACA;;;;;;;;IAEM,W;AACL,wBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,UAAL,GAAkB,EAAlB;AACA;;;;4CAEyB,I,EAAM;AAC/B,QAAK,UAAL,GAAkB,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAlB;AACA;;;yCAEsB,K,EAAO;AAC7B,UAAO,KAAP,CAAa,MAAM,YAAN,IAAsB,MAAM,YAAN,CAAmB,OAAzC,IAAoD,MAAM,YAA1D,IAA0E,MAAM,UAA7F;AACA;;;;;;kBAGa,cAAI,WAAJ,CAAgB,WAAhB,C;;;;;;;;;;;AClBf;;;;AACA;;;;;;;;IAEM,S;AACL,sBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,UAAL,GAAkB,EAAlB;AACA;;;;4CAEyB,I,EAAM;AAC/B,QAAK,UAAL,GAAkB,IAAlB;AACA;;;yCAEsB,Y,EAAc;AACnC,OAAI,WAAW,aAAa,YAAb,IAA6B,aAAa,YAAb,CAA0B,OAAvD,IAAkE,aAAa,YAA/E,IAA+F,aAAa,UAA3H;AACD,UAAO,KAAP,CAAa,QAAb;AACA;;;6BAEU,Y,EAAc;AACvB,OAAI,WAAW,aAAa,YAAb,IAA6B,aAAa,YAAb,CAA0B,OAAvD,IAAkE,aAAa,YAA/E,IAA+F,aAAa,UAA3H;AACD,UAAO,KAAP,CAAa,QAAb;AACA;;;;;;kBAGa,cAAI,WAAJ,CAAgB,SAAhB,C;;;;;;;;;;;ACxBf;;;;AACA;;;;;;;;IAEM,W;AACL,wBAAc;AAAA;;AACb,OAAK,WAAL;AACA,OAAK,eAAL,GAAuB,CAAvB;AACA,OAAK,WAAL,GAAmB,CAAnB;AACA,OAAK,WAAL,GAAmB,EAAnB;AACA,OAAK,kBAAL,GAA0B,EAA1B;AACA;;;;yCAEsB,O,EAAS;AAC/B,WAAQ,OAAR,CAAgB,SAAhB,CAA0B,IAA1B,EAAgC,iBAAiB,QAAQ,WAAzD;AACA;;;sCAEmB,O,EAAS;AAC5B,WAAQ,UAAR,CAAmB,SAAnB,CAA6B,GAA7B,CAAiC,OAAjC;AACA,cAAW,YAAM;AAChB,YAAQ,UAAR,CAAmB,SAAnB,CAA6B,MAA7B,CAAoC,OAApC;AACA,IAFD,EAEG,IAFH;AAGA;;;sCAEmB,I,EAAM;AACzB,QAAK,WAAL,GAAmB,KAAK,WAAxB;AACA;;;wCAEqB,S,EAAW;AAChC,QAAK,kBAAL,GAA0B,SAA1B,CADgC,CACK;AACrC;;;sCAEmB,K,EAAO;AAC1B,QAAK,WAAL,GAAmB,MAAM,MAAN,CAAa,KAAhC;AACA;;;6CAE0B,I,EAAM;AAChC,QAAK,eAAL,GAAuB,KAAK,KAA5B;AACA;;;0CAEuB,K,EAAO;AAC9B,UAAO,KAAP,CAAa,MAAM,YAAN,CAAmB,OAAhC;AACA;;;;;;kBAGa,cAAI,WAAJ,CAAgB,WAAhB,C;;;AC5Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass AddCharacterActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'addCharacterSuccess',\n\t\t\t'addCharacterFail',\n\t\t\t'updateName',\n\t\t\t'updateGender',\n\t\t\t'invalidName',\n\t\t\t'invalidGender',\n\t\t);\n\t}\n\n\taddCharacter(name, gender) {\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: '/api/characters',\n\t\t\tdata: { name: name, gender: gender }\n\t\t})\n\t\t.done((data) => {\n\t\t\tthis.actions.addCharacterSuccess(data.message);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.addCharacterFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(AddCharacterActions);","import alt from '../alt';\n\nclass CharacterActions {\n  constructor() {\n    this.generateActions(\n      'reportSuccess',\n      'reportFail',\n      'getCharacterSuccess',\n      'getCharacterFail'\n    );\n  }\n\n  getCharacter(characterId) {\n    $.ajax({ url: '/api/characters/' + characterId })\n      .done((data) => {\n        this.actions.getCharacterSuccess(data);\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterFail(jqXhr);\n      });\n  }\n\n  report(characterId) {\n    $.ajax({\n      type: 'POST',\n      url: '/api/report',\n      data: { characterId: characterId }\n    })\n      .done(() => {\n        this.actions.reportSuccess();\n      })\n      .fail((jqXhr) => {\n        this.actions.reportFail(jqXhr);\n      });\n  }\n}\n\nexport default alt.createActions(CharacterActions);","import alt from '../alt';\n\nclass FooterActions {\n\tconstructor() {\n\n\t\tthis.generateActions(\n\t\t\t'getTopCharactersSuccess',\n\t\t\t'getTopCharactersFail'\n\t\t);\n\t}\n\n\tgetTopCharacters() {\n\t\t$.ajax({ url: '/api/characters/top' })\n\t\t\t.done((data) => {\n\t\t\t\tthis.actions.getTopCharactersSuccess(data);\n\t\t\t})\n\t\t\t.fail((jqXhr) => {\n\t\t\t\tthis.actions.getTopCharactersFail(jqXhr);\n\t\t\t});\n\t}\n}\n\nexport default alt.createActions(FooterActions);","import alt from '../alt';\n\nclass HomeActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'getTwoCharactersSuccess',\n\t\t\t'getTwoCharactersFail',\n\t\t\t'voteFail',\n\t\t);\n\t}\n\n\tgetTwoCharacters() {\n\t\t$.ajax({ url: '/api/characters' })\n\t\t.done(data => {\n\t\t\tthis.actions.getTwoCharactersSuccess(data);\n\t\t})\n\t\t.fail(jqXhr => {\n\t\t\tthis.actions.getTwoCharactersFail(jqXhr);\n\t\t});\n\t}\n\n\tvote(winner, loser) {\n\t\t$.ajax({\n\t\t\ttype: 'PUT',\n\t\t\turl: '/api/characters',\n\t\t\tdata: { winner: winner, loser: loser },\n\t\t})\n\t\t.done(() => {\n\t\t\tthis.actions.getTwoCharacters();\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.voteFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(HomeActions);","import alt from '../alt';\nimport { assign } from 'underscore';\n\nclass NavbarActions {\n\tconstructor() {\n\t\tthis.generateActions(\n\t\t\t'updateOnlineUsers',\n\t\t\t'updateAjaxAnimation',\n\t\t\t'updateSearchQuery',\n\t\t\t'getCharacterCountSuccess',\n\t\t\t'getCharacterCountFail',\n\t\t\t'findCharacterSuccess',\n\t\t\t'findCharacterFail',\n\t\t);\n\t}\n\n\tfindCharacter(payload) {\n\t\t$.ajax({\n\t\t\turl: '/api/characters/search',\n\t\t\tdata: { name: payload.searchQuery }\n\t\t})\n\t\t.done((data) => {\n\t\t\tassign(payload, data);\n\t\t\tthis.actions.findCharacterSuccess(payload);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.getCharacterCountFail(jqXhr);\n\t\t});\n\t}\n\n\tgetCharacterCount() {\n\t\t$.ajax({ url: '/api/characters/count' })\n\t\t.done((data) => {\n\t\t\tthis.actions.getCharacterCountSuccess(data);\n\t\t})\n\t\t.fail((jqXhr) => {\n\t\t\tthis.actions.getCharacterCountFail(jqXhr);\n\t\t});\n\t}\n}\n\nexport default alt.createActions(NavbarActions);","import Alt from 'alt';\n\nexport default new Alt();","import React, { Component } from 'react';\nimport AddCharacterStore from '../stores/AddCharacterStore';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = AddCharacterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AddCharacterStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AddCharacterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var name = this.state.name.trim();\n    var gender = this.state.gender;\n\n    if (!name) {\n      AddCharacterActions.invalidName();\n      this.refs.nameTextField.getDOMNode().focus();\n    }\n\n    if (!gender) {\n      AddCharacterActions.invalidGender();\n    }\n\n    if (name && gender) {\n      AddCharacterActions.addCharacter(name, gender);\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row flipInX animated'>\n          <div className='col-sm-8'>\n            <div className='panel panel-default'>\n              <div className='panel-heading'>Add Character</div>\n              <div className='panel-body'>\n                <form onSubmit={ this.handleSubmit.bind(this) }>\n                  <div className={ 'form-group ' + this.state.nameValidationState }>\n                    <label className='control-label'>Character Name</label>\n                    <input type='text' className='form-control' ref='nameTextField' value={ this.state.name } onChange={ AddCharacterActions.updateName } autoFocus/>\n                    <span className='help-block'>{ this.state.helpBlock }</span>\n                  </div>\n                  <div className={ 'form-group ' + this.state.genderValidationState }>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='female' value='Female' checked={ this.state.gender === 'Female' } onChange={ AddCharacterActions.updateGender }/>\n                      <label htmlFor='female'>Female</label>\n                    </div>\n                    <div className='radio radio-inline'>\n                      <input type='radio' name='gender' id='male' value='Male' checked={ this.state.gender === 'Male' } onChange={ AddCharacterActions.updateGender } />\n                      <label htmlFor='male'>Male</label>\n                    </div>\n                  </div>\n                  <button type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddCharacter;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nclass App extends Component{\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar history={ this.props.history } />\n\t\t\t\t{ this.props.children }\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React, { Component } from 'react';\nimport CharacterStore from '../stores/CharacterStore';\nimport CharacterActions from '../actions/CharacterActions';\n\nclass Character extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = CharacterStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tCharacterStore.listen(this.onChange);\n\t\tCharacterActions.getCharacter(this.props.params.id);\n\n\t\t$('.magnific-popup').magnificPopup({\n\t\t  type: 'image',\n\t\t  mainClass: 'mfp-zoom-in',\n\t\t  closeOnContentClick: true,\n\t\t  midClick: true,\n\t\t  zoom: {\n\t\t    enabled: true,\n\t\t    duration: 300\n\t\t  }\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tCharacterStore.unlisten(this.onChange);\n\t\t$(document.body).removeClass();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevProps.params.id !== this.props.params.id) {\n\t\t\tCharacterActions.getCharacter(this.props.params.id);\n\t\t}\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\trender() {\n\t\treturn (\n    \t<div className='container'>\n    \t\t<div className='profile-img'>\n    \t\t\t<a className='magnific-popup' href={ `https://image.eveonline.com/Character/${this.state.characterId}_1024.jpg` }>\n    \t\t\t\t<img src={`https://image.eveonline.com/Character/${this.state.characterId}_256.jpg`} />\n    \t\t\t</a>\n    \t\t</div>\n    \t\t<div className='profile-info clearfix'>\n    \t\t\t<h2><strong>{ this.state.name }</strong></h2>\n    \t\t\t<h4 className='lead'>Race: <strong>{ this.state.race }</strong></h4>\n    \t\t\t<h4 className='lead'>Bloodline: <strong>{ this.state.bloodline }</strong></h4>\n    \t\t\t<h4 className='lead'>Gender: <strong>{ this.state.gender }</strong></h4>\n    \t\t\t<button className='btn btn-transparent'\n    \t\t\t\tonClick={ CharacterActions.report.bind(this, this.state.characterId) }\n    \t\t\t\tdisabled={ this.state.isReported }>\n    \t\t\t\t{ this.state.isReported ? 'Reported': 'Report Character '}\n  \t\t\t\t</button>\n    \t\t</div>\n    \t\t<div className='profile-stats clearfix'>\n    \t\t\t<ul>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.winLossRatio }</span>Winning Percentage</li>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.wins }</span> Wins</li>\n    \t\t\t\t<li><span className='stats-number'>{ this.state.losses }</span> Losses</li>\n    \t\t\t</ul>\n    \t\t</div>\n    \t</div>\n    );\n\t}\n}\n\nexport default Character;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport FooterStore from '../stores/FooterStore';\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = FooterStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tFooterStore.listen(this.onChange);\n\t\tFooterActions.getTopCharacters();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tFooterStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\trender() {\n   \tlet leaderboardCharacters = this.state.characters.map((character) => {\n   \t  return (\n   \t    <li key={character.characterId}>\n   \t      <Link to={'/characters/' + character.characterId}>\n   \t        <img className='thumb-md' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\n   \t      </Link>\n   \t    </li>\n   \t  )\n   \t});\n\n   \treturn (\n\t\t\t<footer>\n\t\t\t <div className='container'>\n\t\t\t   <div className='row'>\n\t\t\t     <div className='col-sm-5'>\n\t\t\t       <h3 className='lead'><strong>Information</strong> and <strong>Copyright</strong></h3>\n\t\t\t       <p>Powered by <strong>Node.js</strong>, <strong>MongoDB</strong> and <strong>React</strong> with Flux architecture and server-side rendering.</p>\n\t\t\t       <p>You may view the <a href='https://github.com/eduarmreyes/react-character-voting'>Source Code</a> behind this project on GitHub.</p>\n\t\t\t       <p>© 2017 eduarmreyes.</p>\n\t\t\t     </div>\n\t\t\t     <div className='col-sm-7 hidden-xs'>\n\t\t\t       <h3 className='lead'><strong>Leaderboard</strong> Top 5 Characters</h3>\n\t\t\t       <ul className='list-inline'>\n\t\t\t         {leaderboardCharacters}\n\t\t\t       </ul>\n\t\t\t     </div>\n\t\t\t   </div>\n\t\t\t </div>\n\t\t\t</footer>\n    );\n\t}\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport HomeStore from '../stores/HomeStore';\nimport HomeActions from '../actions/HomeActions';\nimport { first, without, findWhere } from 'underscore';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = HomeStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tHomeStore.listen(this.onChange);\n\t\tHomeActions.getTwoCharacters();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tHomeStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\thandleClick(character) {\n\t\tlet winner = character.characterId;\n\t\tlet looser = first(without(this.state.characters, findWhere(this.state.characters, { characterId: winner }))).characterId;\n\t\tHomeActions.vote(winner, looser);\n\t}\n\n\trender() {\n\t\tlet characterNodes = this.state.characters.map((character, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={ character.characterId } className={ index === 0 ? 'col-xs-6 col-sm-6 col-md-5 col-md-offset-1' : 'col-xs-6 col-sm-6 col-md-5' }>\n\t\t\t\t\t<div className='thumbnail fadeInUp animated'>\n\t\t\t\t\t\t<img onClick={ this.handleClick.bind(this, character) } src={ `http://image.eveonline.com/Character/${character.characterId}_512.jpg` } />\n\t\t\t\t\t\t<div className='caption text-center'>\n\t\t\t\t\t\t\t<ul className='list-inline'>\n\t\t\t\t\t\t\t\t<li><strong>Race:</strong> { character.race } </li>\n\t\t\t\t\t\t\t\t<li><strong>Bloodline:</strong> { character.bloodline } </li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<Link to={ `/characters/${character.characterId}`}><strong>{ character.name }</strong></Link>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h3 className='text-center'>Click on the portrait. Select your favorite.</h3>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t{ characterNodes }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = NavbarStore.getState();\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tNavbarStore.listen(this.onChange);\n\t\tNavbarActions.getCharacterCount();\n\n\t\tlet socket = io.connect();\n\n\t\tsocket.on('onlineUsers', (data) => {\n\t\t\tNavbarActions.updateOnlineUsers(data);\n\t\t});\n\n\t\t$(document).ajaxStart(() => {\n\t\t\tNavbarActions.updateAjaxAnimation('fadeIn');\n\t\t});\n\n\t\t$(document).ajaxComplete(() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tNavbarActions.updateAjaxAnimation('fadeOut');\n\t\t\t}, 750);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tNavbarStore.unlisten(this.onChange);\n\t}\n\n\tonChange(state) {\n\t\tthis.setState(state);\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tlet searchQuery = this.state.searchQuery.trim();\n\n\t\tif (searchQuery) {\n\t\t\tNavbarActions.findCharacter({\n\t\t\t\tsearchQuery: searchQuery,\n\t\t\t\tsearchForm: this.refs.searchForm,\n\t\t\t\thistory: this.props.history\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n    \t<nav className='navbar navbar-default navbar-static-top'>\n    \t\t<div className='navbar-header'>\n    \t\t\t<button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n\t    \t\t\t<span className='sr-only'>Toggle navigation</span>\n\t    \t\t\t<span className='icon-bar'></span>\n\t    \t\t\t<span className='icon-bar'></span>\n\t    \t\t\t<span className='icon-bar'></span>\n    \t\t\t</button>\n    \t\t\t<Link to='/' alt='React Character Voting' className='navbar-brand'>\n    \t\t\t\t<span ref='triangles' className={ 'triangles animated ' + this.state.ajaxAnimationClass }>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t\t<div className='tri'></div>\n    \t\t\t\t\t<div className='tri invert'></div>\n    \t\t\t\t</span>\n    \t\t\t\tRCV\n    \t\t\t\t<span className='badge badge-up badge-danger'>{ this.state.onlineUsers }</span>\n    \t\t\t</Link>\n    \t\t</div>\n    \t\t<div id='navbar' className='navbar-collapse collapse'>\n    \t\t\t<form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={ this.handleSubmit.bind(this) }>\n    \t\t\t\t<div className='input-group'>\n    \t\t\t\t\t<input type='text' className='form-control' placeholder={ this.state.totalCharacters + ' characters' } value={ this.state.searchQuery } onChange={ NavbarActions.updateSearchQuery } />\n    \t\t\t\t\t<span className='input-group-btn'>\n    \t\t\t\t\t\t<button className='btn btn-default' onClick={ this.handleSubmit.bind(this) }><span className='glyphicon glyphicon-search'></span></button>\n  \t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n    \t\t\t</form>\n    \t\t\t<ul className='nav navbar-nav'>\n    \t\t\t\t<li><Link to='/'>Home</Link></li>\n    \t\t\t\t<li><Link to='/stats'>Stats</Link></li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t\t<a href='#' className='dropdown-toggle' data-toggle='dropdown'>Top 100 <span className='caret'></span></a>\n    \t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t<li><Link to='/top'>Top Overall</Link></li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t\t<Link to='/top/caldari'>Caldari</Link>\n    \t\t\t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/achura'>Achura</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/civire'>Civire</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t\t\t\t</ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t\t<Link to='/top/gallente'>Gallente</Link>\n    \t\t\t\t\t\t\t<ul className='dropdown-menu'>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/brutor'>Brutor</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t\t\t\t\t<li><Link to='/top/caldari/vherokior'>Vherokior</Link></li>\n    \t\t\t\t\t\t\t</ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t  <Link to='/top/minmatar'>Minmatar</Link>\n    \t\t\t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t\t\t  </ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='dropdown-submenu'>\n    \t\t\t\t\t\t  <Link to='/top/amarr'>Amarr</Link>\n    \t\t\t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t\t\t    <li><Link to='/top/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t\t\t  </ul>\n    \t\t\t\t\t\t</li>\n    \t\t\t\t\t\t<li className='divider'></li>\n    \t\t\t\t\t\t<li><Link to='/shame'>Hall of Shame</Link></li>\n    \t\t\t\t\t</ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t  <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Female <span className='caret'></span></a>\n    \t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t    <li><Link to='/female'>All</Link></li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/caldari'>Caldari</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/caldari/achura'>Achura</Link></li>\n    \t\t\t\t        <li><Link to='/female/caldari/civire/'>Civire</Link></li>\n    \t\t\t\t        <li><Link to='/female/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/gallente'>Gallente</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/gallente/gallente'>Gallente</Link></li>\n    \t\t\t\t        <li><Link to='/female/gallente/intaki'>Intaki</Link></li>\n    \t\t\t\t        <li><Link to='/female/gallente/jin-mei'>Jin-Mei</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/minmatar'>Minmatar</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t        <li><Link to='/female/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t        <li><Link to='/female/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/female/amarr'>Amarr</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/female/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t        <li><Link to='/female/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t        <li><Link to='/female/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t  </ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li className='dropdown'>\n    \t\t\t\t  <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Male <span className='caret'></span></a>\n    \t\t\t\t  <ul className='dropdown-menu'>\n    \t\t\t\t    <li><Link to='/male'>All</Link></li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/caldari'>Caldari</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/caldari/achura'>Achura</Link></li>\n    \t\t\t\t        <li><Link to='/male/caldari/civire'>Civire</Link></li>\n    \t\t\t\t        <li><Link to='/male/caldari/deteis'>Deteis</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/gallente'>Gallente</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/gallente/gallente'>Gallente</Link></li>\n    \t\t\t\t        <li><Link to='/male/gallente/intaki'>Intaki</Link></li>\n    \t\t\t\t        <li><Link to='/male/gallente/jin-mei'>Jin-Mei</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/minmatar'>Minmatar</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/minmatar/brutor'>Brutor</Link></li>\n    \t\t\t\t        <li><Link to='/male/minmatar/sebiestor'>Sebiestor</Link></li>\n    \t\t\t\t        <li><Link to='/male/minmatar/vherokior'>Vherokior</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t    <li className='dropdown-submenu'>\n    \t\t\t\t      <Link to='/male/amarr'>Amarr</Link>\n    \t\t\t\t      <ul className='dropdown-menu'>\n    \t\t\t\t        <li><Link to='/male/amarr/amarr'>Amarr</Link></li>\n    \t\t\t\t        <li><Link to='/male/amarr/ni-kunni'>Ni-Kunni</Link></li>\n    \t\t\t\t        <li><Link to='/male/amarr/khanid'>Khanid</Link></li>\n    \t\t\t\t      </ul>\n    \t\t\t\t    </li>\n    \t\t\t\t  </ul>\n    \t\t\t\t</li>\n    \t\t\t\t<li><Link to='/add'>Add</Link></li>\n    \t\t\t</ul>\n    \t\t</div>\n    \t</nav>\n    );\n\t}\n}\n\nexport default Navbar;","import React from 'react';\nimport Router from 'react-router';\nimport ReactDom from 'react-dom';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\n\nlet history = createBrowserHistory();\n\nReactDom.render(\n\t<Router history={ history }>{ routes }</Router>,\n\tdocument.getElementById('app')\n);","import React from 'react';\nimport { Route } from 'react-router';\nimport App from './components/App';\nimport Home from './components/Home';\nimport AddCharacter from './components/AddCharacter';\nimport Character from './components/Character';\n\nexport default (\n  <Route component={ App }>\n  \t<Route path='/' component={ Home } />\n  \t<Route path='/add' component= { AddCharacter } />\n  \t<Route path='/characters/:id' component={ Character } />\n  </Route>\n);","import alt from '../alt';\nimport AddCharacterActions from '../actions/AddCharacterActions';\n\nclass AddCharacterStore {\n  constructor() {\n    this.bindActions(AddCharacterActions);\n    this.name = '';\n    this.gender = '';\n    this.helpBlock = '';\n    this.nameValidationState = '';\n    this.genderValidationState = '';\n  }\n\n  onAddCharacterSuccess(successMessage) {\n    this.nameValidationState = 'has-success';\n    this.helpBlock = successMessage;\n  }\n\n  onAddCharacterFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n    this.nameValidationState = 'has-error';\n    this.helpBlock = errorMsg;\n\t\ttoastr.error(errorMsg);\n  }\n\n  onUpdateName(event) {\n    this.name = event.target.value;\n    this.nameValidationState = '';\n    this.helpBlock = '';\n  }\n\n  onUpdateGender(event) {\n    this.gender = event.target.value;\n    this.genderValidationState = '';\n  }\n\n  onInvalidName() {\n    this.nameValidationState = 'has-error';\n    this.helpBlock = 'Please enter a character name.';\n  }\n\n  onInvalidGender() {\n    this.genderValidationState = 'has-error';\n  }\n}\n\nexport default alt.createStore(AddCharacterStore);","import { assign, contains } from 'underscore';\nimport alt from '../alt';\nimport CharacterActions from '../actions/CharacterActions';\n\nclass CharacterStore {\n  constructor() {\n    this.bindActions(CharacterActions);\n    this.characterId = 0;\n    this.name = 'TBD';\n    this.race = 'TBD';\n    this.bloodline = 'TBD';\n    this.gender = 'TBD';\n    this.wins = 0;\n    this.losses = 0;\n    this.winLossRatio = 0;\n    this.isReported = false;\n  }\n\n  onGetCharacterSuccess(data) {\n    assign(this, data);\n    $(document.body).attr('class', 'profile ' + this.race.toLowerCase());\n    let localData = localStorage.getItem('RCV') ? JSON.parse(localStorage.getItem('RCV')) : {};\n    let reports = localData.reports || [];\n    this.isReported = contains(reports, this.characterId);\n    // If is NaN (from division by zero) then set it to \"0\"\n    this.winLossRatio = ((this.wins / (this.wins + this.losses) * 100) || 0).toFixed(1);\n  }\n\n  onGetCharacterFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onReportSuccess() {\n    this.isReported = true;\n    let localData = localStorage.getItem('RCV') ? JSON.parse(localStorage.getItem('RCV')) : {};\n    localData.reports = localData.reports || [];\n    localData.reports.push(this.characterId);\n    localStorage.setItem('RCV', JSON.stringify(localData));\n    toastr.warning('Character has been reported.');\n  }\n\n  onReportFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(CharacterStore);","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n\tconstructor() {\n\t\tthis.bindActions(FooterActions);\n\t\tthis.characters = [];\n\t}\n\n\tonGetTopCharactersSuccess(data) {\n\t\tthis.characters = data.slice(0, 5);\n\t}\n\n\tonGetTopCharactersFail(jqXhr) {\n\t\ttoastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n\t}\n}\n\nexport default alt.createStore(FooterStore);","import alt from '../alt';\nimport HomeActions from '../actions/HomeActions';\n\nclass HomeStore {\n\tconstructor() {\n\t\tthis.bindActions(HomeActions);\n\t\tthis.characters = [];\n\t}\n\n\tonGetTwoCharactersSuccess(data) {\n\t\tthis.characters = data;\n\t}\n\n\tonGetTwoCharactersFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n\t\ttoastr.error(errorMsg);\n\t}\n\n\tonVoteFail(errorMessage) {\n  \tlet errorMsg = errorMessage.responseJSON && errorMessage.responseJSON.message || errorMessage.responseText || errorMessage.statusText;\n\t\ttoastr.error(errorMsg);\n\t}\n}\n\nexport default alt.createStore(HomeStore);","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n\tconstructor() {\n\t\tthis.bindActions(NavbarActions);\n\t\tthis.totalCharacters = 0;\n\t\tthis.onlineUsers = 0;\n\t\tthis.searchQuery = '';\n\t\tthis.ajaxAnimationClass = '';\n\t}\n\n\tonFindCharacterSuccess(payload) {\n\t\tpayload.history.pushState(null, '/characters/' + payload.characterId);\n\t}\n\n\tonFindCharacterFail(payload) {\n\t\tpayload.searchForm.classList.add('shake');\n\t\tsetTimeout(() => {\n\t\t\tpayload.searchForm.classList.remove('shake');\n\t\t}, 1000);\n\t}\n\n\tonUpdateOnlineUsers(data) {\n\t\tthis.onlineUsers = data.onlineUsers;\n\t}\n\n\tonUpdateAjaxAnimation(className) {\n\t\tthis.ajaxAnimationClass = className; //fadeIn or fadeOut\n\t}\n\n\tonUpdateSearchQuery(event) {\n\t\tthis.searchQuery = event.target.value;\n\t}\n\n\tonGetCharacterCountSuccess(data) {\n\t\tthis.totalCharacters = data.count;\n\t}\n\n\tonGetCharacterCountFail(jqXhr) {\n\t\ttoastr.error(jqXhr.responseJSON.message);\n\t}\n}\n\nexport default alt.createStore(NavbarStore);","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYWN0aW9ucy9BZGRDaGFyYWN0ZXJBY3Rpb25zLmpzIiwiYXBwL2FjdGlvbnMvQ2hhcmFjdGVyQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL0Zvb3RlckFjdGlvbnMuanMiLCJhcHAvYWN0aW9ucy9Ib21lQWN0aW9ucy5qcyIsImFwcC9hY3Rpb25zL05hdmJhckFjdGlvbnMuanMiLCJhcHAvYWx0LmpzIiwiYXBwL2NvbXBvbmVudHMvQWRkQ2hhcmFjdGVyLmpzIiwiYXBwL2NvbXBvbmVudHMvQXBwLmpzIiwiYXBwL2NvbXBvbmVudHMvQ2hhcmFjdGVyLmpzIiwiYXBwL2NvbXBvbmVudHMvRm9vdGVyLmpzIiwiYXBwL2NvbXBvbmVudHMvSG9tZS5qcyIsImFwcC9jb21wb25lbnRzL05hdmJhci5qcyIsImFwcC9tYWluLmpzIiwiYXBwL3JvdXRlcy5qcyIsImFwcC9zdG9yZXMvQWRkQ2hhcmFjdGVyU3RvcmUuanMiLCJhcHAvc3RvcmVzL0NoYXJhY3RlclN0b3JlLmpzIiwiYXBwL3N0b3Jlcy9Gb290ZXJTdG9yZS5qcyIsImFwcC9zdG9yZXMvSG9tZVN0b3JlLmpzIiwiYXBwL3N0b3Jlcy9OYXZiYXJTdG9yZS5qcyIsIm5vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2lzX2FyZ3VtZW50cy5qcyIsIm5vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2xpYi9rZXlzLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL0FjdGlvbnMuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvQXN5bmNVdGlscy5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9ET01TdGF0ZVN0b3JhZ2UuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvRE9NVXRpbHMuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnQuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvY3JlYXRlRE9NSGlzdG9yeS5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9jcmVhdGVIaXN0b3J5LmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2NyZWF0ZUxvY2F0aW9uLmpzIiwibm9kZV9tb2R1bGVzL2hpc3RvcnkvbGliL2RlcHJlY2F0ZS5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9leHRyYWN0UGF0aC5qcyIsIm5vZGVfbW9kdWxlcy9oaXN0b3J5L2xpYi9wYXJzZVBhdGguanMiLCJub2RlX21vZHVsZXMvaGlzdG9yeS9saWIvcnVuVHJhbnNpdGlvbkhvb2suanMiLCJub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3dhcm5pbmcvYnJvd3Nlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FDQUE7Ozs7Ozs7O0lBRU0sbUI7QUFDTCxnQ0FBYztBQUFBOztBQUNiLE9BQUssZUFBTCxDQUNDLHFCQURELEVBRUMsa0JBRkQsRUFHQyxZQUhELEVBSUMsY0FKRCxFQUtDLGFBTEQsRUFNQyxlQU5EO0FBUUE7Ozs7K0JBRVksSSxFQUFNLE0sRUFBUTtBQUFBOztBQUMxQixLQUFFLElBQUYsQ0FBTztBQUNOLFVBQU0sTUFEQTtBQUVOLFNBQUssaUJBRkM7QUFHTixVQUFNLEVBQUUsTUFBTSxJQUFSLEVBQWMsUUFBUSxNQUF0QjtBQUhBLElBQVAsRUFLQyxJQUxELENBS00sVUFBQyxJQUFELEVBQVU7QUFDZixVQUFLLE9BQUwsQ0FBYSxtQkFBYixDQUFpQyxLQUFLLE9BQXRDO0FBQ0EsSUFQRCxFQVFDLElBUkQsQ0FRTSxVQUFDLEtBQUQsRUFBVztBQUNoQixVQUFLLE9BQUwsQ0FBYSxn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Q0E7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ25FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNqTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUN2Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2xTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUMzQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3ZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ25EQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4TEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuXG5jbGFzcyBBZGRDaGFyYWN0ZXJBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQnYWRkQ2hhcmFjdGVyU3VjY2VzcycsXG5cdFx0XHQnYWRkQ2hhcmFjdGVyRmFpbCcsXG5cdFx0XHQndXBkYXRlTmFtZScsXG5cdFx0XHQndXBkYXRlR2VuZGVyJyxcblx0XHRcdCdpbnZhbGlkTmFtZScsXG5cdFx0XHQnaW52YWxpZEdlbmRlcicsXG5cdFx0KTtcblx0fVxuXG5cdGFkZENoYXJhY3RlcihuYW1lLCBnZW5kZXIpIHtcblx0XHQkLmFqYXgoe1xuXHRcdFx0dHlwZTogJ1BPU1QnLFxuXHRcdFx0dXJsOiAnL2FwaS9jaGFyYWN0ZXJzJyxcblx0XHRcdGRhdGE6IHsgbmFtZTogbmFtZSwgZ2VuZGVyOiBnZW5kZXIgfVxuXHRcdH0pXG5cdFx0LmRvbmUoKGRhdGEpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5hZGRDaGFyYWN0ZXJTdWNjZXNzKGRhdGEubWVzc2FnZSk7XG5cdFx0fSlcblx0XHQuZmFpbCgoanFYaHIpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5hZGRDaGFyYWN0ZXJGYWlsKGpxWGhyKTtcblx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhBZGRDaGFyYWN0ZXJBY3Rpb25zKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIENoYXJhY3RlckFjdGlvbnMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmdlbmVyYXRlQWN0aW9ucyhcbiAgICAgICdyZXBvcnRTdWNjZXNzJyxcbiAgICAgICdyZXBvcnRGYWlsJyxcbiAgICAgICdnZXRDaGFyYWN0ZXJTdWNjZXNzJyxcbiAgICAgICdnZXRDaGFyYWN0ZXJGYWlsJ1xuICAgICk7XG4gIH1cblxuICBnZXRDaGFyYWN0ZXIoY2hhcmFjdGVySWQpIHtcbiAgICAkLmFqYXgoeyB1cmw6ICcvYXBpL2NoYXJhY3RlcnMvJyArIGNoYXJhY3RlcklkIH0pXG4gICAgICAuZG9uZSgoZGF0YSkgPT4ge1xuICAgICAgICB0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyU3VjY2VzcyhkYXRhKTtcbiAgICAgIH0pXG4gICAgICAuZmFpbCgoanFYaHIpID0+IHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLmdldENoYXJhY3RlckZhaWwoanFYaHIpO1xuICAgICAgfSk7XG4gIH1cblxuICByZXBvcnQoY2hhcmFjdGVySWQpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgdXJsOiAnL2FwaS9yZXBvcnQnLFxuICAgICAgZGF0YTogeyBjaGFyYWN0ZXJJZDogY2hhcmFjdGVySWQgfVxuICAgIH0pXG4gICAgICAuZG9uZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5yZXBvcnRTdWNjZXNzKCk7XG4gICAgICB9KVxuICAgICAgLmZhaWwoKGpxWGhyKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9ucy5yZXBvcnRGYWlsKGpxWGhyKTtcbiAgICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVBY3Rpb25zKENoYXJhY3RlckFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcblxuY2xhc3MgRm9vdGVyQWN0aW9ucyB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQnZ2V0VG9wQ2hhcmFjdGVyc1N1Y2Nlc3MnLFxuXHRcdFx0J2dldFRvcENoYXJhY3RlcnNGYWlsJ1xuXHRcdCk7XG5cdH1cblxuXHRnZXRUb3BDaGFyYWN0ZXJzKCkge1xuXHRcdCQuYWpheCh7IHVybDogJy9hcGkvY2hhcmFjdGVycy90b3AnIH0pXG5cdFx0XHQuZG9uZSgoZGF0YSkgPT4ge1xuXHRcdFx0XHR0aGlzLmFjdGlvbnMuZ2V0VG9wQ2hhcmFjdGVyc1N1Y2Nlc3MoZGF0YSk7XG5cdFx0XHR9KVxuXHRcdFx0LmZhaWwoKGpxWGhyKSA9PiB7XG5cdFx0XHRcdHRoaXMuYWN0aW9ucy5nZXRUb3BDaGFyYWN0ZXJzRmFpbChqcVhocik7XG5cdFx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhGb290ZXJBY3Rpb25zKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5cbmNsYXNzIEhvbWVBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQnZ2V0VHdvQ2hhcmFjdGVyc1N1Y2Nlc3MnLFxuXHRcdFx0J2dldFR3b0NoYXJhY3RlcnNGYWlsJyxcblx0XHRcdCd2b3RlRmFpbCcsXG5cdFx0KTtcblx0fVxuXG5cdGdldFR3b0NoYXJhY3RlcnMoKSB7XG5cdFx0JC5hamF4KHsgdXJsOiAnL2FwaS9jaGFyYWN0ZXJzJyB9KVxuXHRcdC5kb25lKGRhdGEgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldFR3b0NoYXJhY3RlcnNTdWNjZXNzKGRhdGEpO1xuXHRcdH0pXG5cdFx0LmZhaWwoanFYaHIgPT4ge1xuXHRcdFx0dGhpcy5hY3Rpb25zLmdldFR3b0NoYXJhY3RlcnNGYWlsKGpxWGhyKTtcblx0XHR9KTtcblx0fVxuXG5cdHZvdGUod2lubmVyLCBsb3Nlcikge1xuXHRcdCQuYWpheCh7XG5cdFx0XHR0eXBlOiAnUFVUJyxcblx0XHRcdHVybDogJy9hcGkvY2hhcmFjdGVycycsXG5cdFx0XHRkYXRhOiB7IHdpbm5lcjogd2lubmVyLCBsb3NlcjogbG9zZXIgfSxcblx0XHR9KVxuXHRcdC5kb25lKCgpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRUd29DaGFyYWN0ZXJzKCk7XG5cdFx0fSlcblx0XHQuZmFpbCgoanFYaHIpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy52b3RlRmFpbChqcVhocik7XG5cdFx0fSk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZUFjdGlvbnMoSG9tZUFjdGlvbnMpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCB7IGFzc2lnbiB9IGZyb20gJ3VuZGVyc2NvcmUnO1xuXG5jbGFzcyBOYXZiYXJBY3Rpb25zIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5nZW5lcmF0ZUFjdGlvbnMoXG5cdFx0XHQndXBkYXRlT25saW5lVXNlcnMnLFxuXHRcdFx0J3VwZGF0ZUFqYXhBbmltYXRpb24nLFxuXHRcdFx0J3VwZGF0ZVNlYXJjaFF1ZXJ5Jyxcblx0XHRcdCdnZXRDaGFyYWN0ZXJDb3VudFN1Y2Nlc3MnLFxuXHRcdFx0J2dldENoYXJhY3RlckNvdW50RmFpbCcsXG5cdFx0XHQnZmluZENoYXJhY3RlclN1Y2Nlc3MnLFxuXHRcdFx0J2ZpbmRDaGFyYWN0ZXJGYWlsJyxcblx0XHQpO1xuXHR9XG5cblx0ZmluZENoYXJhY3RlcihwYXlsb2FkKSB7XG5cdFx0JC5hamF4KHtcblx0XHRcdHVybDogJy9hcGkvY2hhcmFjdGVycy9zZWFyY2gnLFxuXHRcdFx0ZGF0YTogeyBuYW1lOiBwYXlsb2FkLnNlYXJjaFF1ZXJ5IH1cblx0XHR9KVxuXHRcdC5kb25lKChkYXRhKSA9PiB7XG5cdFx0XHRhc3NpZ24ocGF5bG9hZCwgZGF0YSk7XG5cdFx0XHR0aGlzLmFjdGlvbnMuZmluZENoYXJhY3RlclN1Y2Nlc3MocGF5bG9hZCk7XG5cdFx0fSlcblx0XHQuZmFpbCgoanFYaHIpID0+IHtcblx0XHRcdHRoaXMuYWN0aW9ucy5nZXRDaGFyYWN0ZXJDb3VudEZhaWwoanFYaHIpO1xuXHRcdH0pO1xuXHR9XG5cblx0Z2V0Q2hhcmFjdGVyQ291bnQoKSB7XG5cdFx0JC5hamF4KHsgdXJsOiAnL2FwaS9jaGFyYWN0ZXJzL2NvdW50JyB9KVxuXHRcdC5kb25lKChkYXRhKSA9PiB7XG5cdFx0XHR0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyQ291bnRTdWNjZXNzKGRhdGEpO1xuXHRcdH0pXG5cdFx0LmZhaWwoKGpxWGhyKSA9PiB7XG5cdFx0XHR0aGlzLmFjdGlvbnMuZ2V0Q2hhcmFjdGVyQ291bnRGYWlsKGpxWGhyKTtcblx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlQWN0aW9ucyhOYXZiYXJBY3Rpb25zKTsiLCJpbXBvcnQgQWx0IGZyb20gJ2FsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBBbHQoKTsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFkZENoYXJhY3RlclN0b3JlIGZyb20gJy4uL3N0b3Jlcy9BZGRDaGFyYWN0ZXJTdG9yZSc7XG5pbXBvcnQgQWRkQ2hhcmFjdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0FkZENoYXJhY3RlckFjdGlvbnMnO1xuXG5jbGFzcyBBZGRDaGFyYWN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0gQWRkQ2hhcmFjdGVyU3RvcmUuZ2V0U3RhdGUoKTtcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgQWRkQ2hhcmFjdGVyU3RvcmUubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgQWRkQ2hhcmFjdGVyU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG4gIH1cblxuICBvbkNoYW5nZShzdGF0ZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIHZhciBuYW1lID0gdGhpcy5zdGF0ZS5uYW1lLnRyaW0oKTtcbiAgICB2YXIgZ2VuZGVyID0gdGhpcy5zdGF0ZS5nZW5kZXI7XG5cbiAgICBpZiAoIW5hbWUpIHtcbiAgICAgIEFkZENoYXJhY3RlckFjdGlvbnMuaW52YWxpZE5hbWUoKTtcbiAgICAgIHRoaXMucmVmcy5uYW1lVGV4dEZpZWxkLmdldERPTU5vZGUoKS5mb2N1cygpO1xuICAgIH1cblxuICAgIGlmICghZ2VuZGVyKSB7XG4gICAgICBBZGRDaGFyYWN0ZXJBY3Rpb25zLmludmFsaWRHZW5kZXIoKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZSAmJiBnZW5kZXIpIHtcbiAgICAgIEFkZENoYXJhY3RlckFjdGlvbnMuYWRkQ2hhcmFjdGVyKG5hbWUsIGdlbmRlcik7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JvdyBmbGlwSW5YIGFuaW1hdGVkJz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNtLTgnPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3BhbmVsIHBhbmVsLWRlZmF1bHQnPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwtaGVhZGluZyc+QWRkIENoYXJhY3RlcjwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFuZWwtYm9keSc+XG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9eyB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ICdmb3JtLWdyb3VwICcgKyB0aGlzLnN0YXRlLm5hbWVWYWxpZGF0aW9uU3RhdGUgfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT0nY29udHJvbC1sYWJlbCc+Q2hhcmFjdGVyIE5hbWU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgY2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnIHJlZj0nbmFtZVRleHRGaWVsZCcgdmFsdWU9eyB0aGlzLnN0YXRlLm5hbWUgfSBvbkNoYW5nZT17IEFkZENoYXJhY3RlckFjdGlvbnMudXBkYXRlTmFtZSB9IGF1dG9Gb2N1cy8+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0naGVscC1ibG9jayc+eyB0aGlzLnN0YXRlLmhlbHBCbG9jayB9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ICdmb3JtLWdyb3VwICcgKyB0aGlzLnN0YXRlLmdlbmRlclZhbGlkYXRpb25TdGF0ZSB9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmFkaW8gcmFkaW8taW5saW5lJz5cbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ncmFkaW8nIG5hbWU9J2dlbmRlcicgaWQ9J2ZlbWFsZScgdmFsdWU9J0ZlbWFsZScgY2hlY2tlZD17IHRoaXMuc3RhdGUuZ2VuZGVyID09PSAnRmVtYWxlJyB9IG9uQ2hhbmdlPXsgQWRkQ2hhcmFjdGVyQWN0aW9ucy51cGRhdGVHZW5kZXIgfS8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2ZlbWFsZSc+RmVtYWxlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyYWRpbyByYWRpby1pbmxpbmUnPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdyYWRpbycgbmFtZT0nZ2VuZGVyJyBpZD0nbWFsZScgdmFsdWU9J01hbGUnIGNoZWNrZWQ9eyB0aGlzLnN0YXRlLmdlbmRlciA9PT0gJ01hbGUnIH0gb25DaGFuZ2U9eyBBZGRDaGFyYWN0ZXJBY3Rpb25zLnVwZGF0ZUdlbmRlciB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J21hbGUnPk1hbGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSdzdWJtaXQnIGNsYXNzTmFtZT0nYnRuIGJ0bi1wcmltYXJ5Jz5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBZGRDaGFyYWN0ZXI7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBOYXZiYXIgZnJvbSAnLi9OYXZiYXInO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuL0Zvb3Rlcic7XG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHQ8TmF2YmFyIGhpc3Rvcnk9eyB0aGlzLnByb3BzLmhpc3RvcnkgfSAvPlxuXHRcdFx0XHR7IHRoaXMucHJvcHMuY2hpbGRyZW4gfVxuXHRcdFx0XHQ8Rm9vdGVyIC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENoYXJhY3RlclN0b3JlIGZyb20gJy4uL3N0b3Jlcy9DaGFyYWN0ZXJTdG9yZSc7XG5pbXBvcnQgQ2hhcmFjdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0NoYXJhY3RlckFjdGlvbnMnO1xuXG5jbGFzcyBDaGFyYWN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuc3RhdGUgPSBDaGFyYWN0ZXJTdG9yZS5nZXRTdGF0ZSgpO1xuXHRcdHRoaXMub25DaGFuZ2UgPSB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcyk7XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblx0XHRDaGFyYWN0ZXJTdG9yZS5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdFx0Q2hhcmFjdGVyQWN0aW9ucy5nZXRDaGFyYWN0ZXIodGhpcy5wcm9wcy5wYXJhbXMuaWQpO1xuXG5cdFx0JCgnLm1hZ25pZmljLXBvcHVwJykubWFnbmlmaWNQb3B1cCh7XG5cdFx0ICB0eXBlOiAnaW1hZ2UnLFxuXHRcdCAgbWFpbkNsYXNzOiAnbWZwLXpvb20taW4nLFxuXHRcdCAgY2xvc2VPbkNvbnRlbnRDbGljazogdHJ1ZSxcblx0XHQgIG1pZENsaWNrOiB0cnVlLFxuXHRcdCAgem9vbToge1xuXHRcdCAgICBlbmFibGVkOiB0cnVlLFxuXHRcdCAgICBkdXJhdGlvbjogMzAwXG5cdFx0ICB9XG5cdFx0fSk7XG5cdH1cblxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRDaGFyYWN0ZXJTdG9yZS51bmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHQkKGRvY3VtZW50LmJvZHkpLnJlbW92ZUNsYXNzKCk7XG5cdH1cblxuXHRjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcblx0XHRpZiAocHJldlByb3BzLnBhcmFtcy5pZCAhPT0gdGhpcy5wcm9wcy5wYXJhbXMuaWQpIHtcblx0XHRcdENoYXJhY3RlckFjdGlvbnMuZ2V0Q2hhcmFjdGVyKHRoaXMucHJvcHMucGFyYW1zLmlkKTtcblx0XHR9XG5cdH1cblxuXHRvbkNoYW5nZShzdGF0ZSkge1xuXHRcdHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG4gICAgXHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cbiAgICBcdFx0PGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUtaW1nJz5cbiAgICBcdFx0XHQ8YSBjbGFzc05hbWU9J21hZ25pZmljLXBvcHVwJyBocmVmPXsgYGh0dHBzOi8vaW1hZ2UuZXZlb25saW5lLmNvbS9DaGFyYWN0ZXIvJHt0aGlzLnN0YXRlLmNoYXJhY3RlcklkfV8xMDI0LmpwZ2AgfT5cbiAgICBcdFx0XHRcdDxpbWcgc3JjPXtgaHR0cHM6Ly9pbWFnZS5ldmVvbmxpbmUuY29tL0NoYXJhY3Rlci8ke3RoaXMuc3RhdGUuY2hhcmFjdGVySWR9XzI1Ni5qcGdgfSAvPlxuICAgIFx0XHRcdDwvYT5cbiAgICBcdFx0PC9kaXY+XG4gICAgXHRcdDxkaXYgY2xhc3NOYW1lPSdwcm9maWxlLWluZm8gY2xlYXJmaXgnPlxuICAgIFx0XHRcdDxoMj48c3Ryb25nPnsgdGhpcy5zdGF0ZS5uYW1lIH08L3N0cm9uZz48L2gyPlxuICAgIFx0XHRcdDxoNCBjbGFzc05hbWU9J2xlYWQnPlJhY2U6IDxzdHJvbmc+eyB0aGlzLnN0YXRlLnJhY2UgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGg0IGNsYXNzTmFtZT0nbGVhZCc+Qmxvb2RsaW5lOiA8c3Ryb25nPnsgdGhpcy5zdGF0ZS5ibG9vZGxpbmUgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGg0IGNsYXNzTmFtZT0nbGVhZCc+R2VuZGVyOiA8c3Ryb25nPnsgdGhpcy5zdGF0ZS5nZW5kZXIgfTwvc3Ryb25nPjwvaDQ+XG4gICAgXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBidG4tdHJhbnNwYXJlbnQnXG4gICAgXHRcdFx0XHRvbkNsaWNrPXsgQ2hhcmFjdGVyQWN0aW9ucy5yZXBvcnQuYmluZCh0aGlzLCB0aGlzLnN0YXRlLmNoYXJhY3RlcklkKSB9XG4gICAgXHRcdFx0XHRkaXNhYmxlZD17IHRoaXMuc3RhdGUuaXNSZXBvcnRlZCB9PlxuICAgIFx0XHRcdFx0eyB0aGlzLnN0YXRlLmlzUmVwb3J0ZWQgPyAnUmVwb3J0ZWQnOiAnUmVwb3J0IENoYXJhY3RlciAnfVxuICBcdFx0XHRcdDwvYnV0dG9uPlxuICAgIFx0XHQ8L2Rpdj5cbiAgICBcdFx0PGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUtc3RhdHMgY2xlYXJmaXgnPlxuICAgIFx0XHRcdDx1bD5cbiAgICBcdFx0XHRcdDxsaT48c3BhbiBjbGFzc05hbWU9J3N0YXRzLW51bWJlcic+eyB0aGlzLnN0YXRlLndpbkxvc3NSYXRpbyB9PC9zcGFuPldpbm5pbmcgUGVyY2VudGFnZTwvbGk+XG4gICAgXHRcdFx0XHQ8bGk+PHNwYW4gY2xhc3NOYW1lPSdzdGF0cy1udW1iZXInPnsgdGhpcy5zdGF0ZS53aW5zIH08L3NwYW4+IFdpbnM8L2xpPlxuICAgIFx0XHRcdFx0PGxpPjxzcGFuIGNsYXNzTmFtZT0nc3RhdHMtbnVtYmVyJz57IHRoaXMuc3RhdGUubG9zc2VzIH08L3NwYW4+IExvc3NlczwvbGk+XG4gICAgXHRcdFx0PC91bD5cbiAgICBcdFx0PC9kaXY+XG4gICAgXHQ8L2Rpdj5cbiAgICApO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYXJhY3RlcjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgRm9vdGVyU3RvcmUgZnJvbSAnLi4vc3RvcmVzL0Zvb3RlclN0b3JlJztcbmltcG9ydCBGb290ZXJBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvRm9vdGVyQWN0aW9ucyc7XG5cbmNsYXNzIEZvb3RlciBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IEZvb3RlclN0b3JlLmdldFN0YXRlKCk7XG5cdFx0dGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcblx0fVxuXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xuXHRcdEZvb3RlclN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHRGb290ZXJBY3Rpb25zLmdldFRvcENoYXJhY3RlcnMoKTtcblx0fVxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuXHRcdEZvb3RlclN0b3JlLnVubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuXHR9XG5cblx0b25DaGFuZ2Uoc3RhdGUpIHtcblx0XHR0aGlzLnNldFN0YXRlKHN0YXRlKTtcblx0fVxuXG5cdHJlbmRlcigpIHtcbiAgIFx0bGV0IGxlYWRlcmJvYXJkQ2hhcmFjdGVycyA9IHRoaXMuc3RhdGUuY2hhcmFjdGVycy5tYXAoKGNoYXJhY3RlcikgPT4ge1xuICAgXHQgIHJldHVybiAoXG4gICBcdCAgICA8bGkga2V5PXtjaGFyYWN0ZXIuY2hhcmFjdGVySWR9PlxuICAgXHQgICAgICA8TGluayB0bz17Jy9jaGFyYWN0ZXJzLycgKyBjaGFyYWN0ZXIuY2hhcmFjdGVySWR9PlxuICAgXHQgICAgICAgIDxpbWcgY2xhc3NOYW1lPSd0aHVtYi1tZCcgc3JjPXsnaHR0cDovL2ltYWdlLmV2ZW9ubGluZS5jb20vQ2hhcmFjdGVyLycgKyBjaGFyYWN0ZXIuY2hhcmFjdGVySWQgKyAnXzEyOC5qcGcnfSAvPlxuICAgXHQgICAgICA8L0xpbms+XG4gICBcdCAgICA8L2xpPlxuICAgXHQgIClcbiAgIFx0fSk7XG5cbiAgIFx0cmV0dXJuIChcblx0XHRcdDxmb290ZXI+XG5cdFx0XHQgPGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XG5cdFx0XHQgICA8ZGl2IGNsYXNzTmFtZT0ncm93Jz5cblx0XHRcdCAgICAgPGRpdiBjbGFzc05hbWU9J2NvbC1zbS01Jz5cblx0XHRcdCAgICAgICA8aDMgY2xhc3NOYW1lPSdsZWFkJz48c3Ryb25nPkluZm9ybWF0aW9uPC9zdHJvbmc+IGFuZCA8c3Ryb25nPkNvcHlyaWdodDwvc3Ryb25nPjwvaDM+XG5cdFx0XHQgICAgICAgPHA+UG93ZXJlZCBieSA8c3Ryb25nPk5vZGUuanM8L3N0cm9uZz4sIDxzdHJvbmc+TW9uZ29EQjwvc3Ryb25nPiBhbmQgPHN0cm9uZz5SZWFjdDwvc3Ryb25nPiB3aXRoIEZsdXggYXJjaGl0ZWN0dXJlIGFuZCBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuPC9wPlxuXHRcdFx0ICAgICAgIDxwPllvdSBtYXkgdmlldyB0aGUgPGEgaHJlZj0naHR0cHM6Ly9naXRodWIuY29tL2VkdWFybXJleWVzL3JlYWN0LWNoYXJhY3Rlci12b3RpbmcnPlNvdXJjZSBDb2RlPC9hPiBiZWhpbmQgdGhpcyBwcm9qZWN0IG9uIEdpdEh1Yi48L3A+XG5cdFx0XHQgICAgICAgPHA+wqkgMjAxNyBlZHVhcm1yZXllcy48L3A+XG5cdFx0XHQgICAgIDwvZGl2PlxuXHRcdFx0ICAgICA8ZGl2IGNsYXNzTmFtZT0nY29sLXNtLTcgaGlkZGVuLXhzJz5cblx0XHRcdCAgICAgICA8aDMgY2xhc3NOYW1lPSdsZWFkJz48c3Ryb25nPkxlYWRlcmJvYXJkPC9zdHJvbmc+IFRvcCA1IENoYXJhY3RlcnM8L2gzPlxuXHRcdFx0ICAgICAgIDx1bCBjbGFzc05hbWU9J2xpc3QtaW5saW5lJz5cblx0XHRcdCAgICAgICAgIHtsZWFkZXJib2FyZENoYXJhY3RlcnN9XG5cdFx0XHQgICAgICAgPC91bD5cblx0XHRcdCAgICAgPC9kaXY+XG5cdFx0XHQgICA8L2Rpdj5cblx0XHRcdCA8L2Rpdj5cblx0XHRcdDwvZm9vdGVyPlxuICAgICk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBIb21lU3RvcmUgZnJvbSAnLi4vc3RvcmVzL0hvbWVTdG9yZSc7XG5pbXBvcnQgSG9tZUFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9Ib21lQWN0aW9ucyc7XG5pbXBvcnQgeyBmaXJzdCwgd2l0aG91dCwgZmluZFdoZXJlIH0gZnJvbSAndW5kZXJzY29yZSc7XG5cbmNsYXNzIEhvbWUgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblxuXHRcdHRoaXMuc3RhdGUgPSBIb21lU3RvcmUuZ2V0U3RhdGUoKTtcblx0XHR0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuXHR9XG5cblx0Y29tcG9uZW50RGlkTW91bnQoKSB7XG5cdFx0SG9tZVN0b3JlLmxpc3Rlbih0aGlzLm9uQ2hhbmdlKTtcblx0XHRIb21lQWN0aW9ucy5nZXRUd29DaGFyYWN0ZXJzKCk7XG5cdH1cblxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRIb21lU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdH1cblxuXHRvbkNoYW5nZShzdGF0ZSkge1xuXHRcdHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuXHR9XG5cblx0aGFuZGxlQ2xpY2soY2hhcmFjdGVyKSB7XG5cdFx0bGV0IHdpbm5lciA9IGNoYXJhY3Rlci5jaGFyYWN0ZXJJZDtcblx0XHRsZXQgbG9vc2VyID0gZmlyc3Qod2l0aG91dCh0aGlzLnN0YXRlLmNoYXJhY3RlcnMsIGZpbmRXaGVyZSh0aGlzLnN0YXRlLmNoYXJhY3RlcnMsIHsgY2hhcmFjdGVySWQ6IHdpbm5lciB9KSkpLmNoYXJhY3RlcklkO1xuXHRcdEhvbWVBY3Rpb25zLnZvdGUod2lubmVyLCBsb29zZXIpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXHRcdGxldCBjaGFyYWN0ZXJOb2RlcyA9IHRoaXMuc3RhdGUuY2hhcmFjdGVycy5tYXAoKGNoYXJhY3RlciwgaW5kZXgpID0+IHtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdDxkaXYga2V5PXsgY2hhcmFjdGVyLmNoYXJhY3RlcklkIH0gY2xhc3NOYW1lPXsgaW5kZXggPT09IDAgPyAnY29sLXhzLTYgY29sLXNtLTYgY29sLW1kLTUgY29sLW1kLW9mZnNldC0xJyA6ICdjb2wteHMtNiBjb2wtc20tNiBjb2wtbWQtNScgfT5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndGh1bWJuYWlsIGZhZGVJblVwIGFuaW1hdGVkJz5cblx0XHRcdFx0XHRcdDxpbWcgb25DbGljaz17IHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzLCBjaGFyYWN0ZXIpIH0gc3JjPXsgYGh0dHA6Ly9pbWFnZS5ldmVvbmxpbmUuY29tL0NoYXJhY3Rlci8ke2NoYXJhY3Rlci5jaGFyYWN0ZXJJZH1fNTEyLmpwZ2AgfSAvPlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2NhcHRpb24gdGV4dC1jZW50ZXInPlxuXHRcdFx0XHRcdFx0XHQ8dWwgY2xhc3NOYW1lPSdsaXN0LWlubGluZSc+XG5cdFx0XHRcdFx0XHRcdFx0PGxpPjxzdHJvbmc+UmFjZTo8L3N0cm9uZz4geyBjaGFyYWN0ZXIucmFjZSB9IDwvbGk+XG5cdFx0XHRcdFx0XHRcdFx0PGxpPjxzdHJvbmc+Qmxvb2RsaW5lOjwvc3Ryb25nPiB7IGNoYXJhY3Rlci5ibG9vZGxpbmUgfSA8L2xpPlxuXHRcdFx0XHRcdFx0XHQ8L3VsPlxuXHRcdFx0XHRcdFx0XHQ8aDQ+XG5cdFx0XHRcdFx0XHRcdFx0PExpbmsgdG89eyBgL2NoYXJhY3RlcnMvJHtjaGFyYWN0ZXIuY2hhcmFjdGVySWR9YH0+PHN0cm9uZz57IGNoYXJhY3Rlci5uYW1lIH08L3N0cm9uZz48L0xpbms+XG5cdFx0XHRcdFx0XHRcdDwvaDQ+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQpO1xuXHRcdH0pO1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cblx0XHRcdFx0PGgzIGNsYXNzTmFtZT0ndGV4dC1jZW50ZXInPkNsaWNrIG9uIHRoZSBwb3J0cmFpdC4gU2VsZWN0IHlvdXIgZmF2b3JpdGUuPC9oMz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3Jvdyc+XG5cdFx0XHRcdFx0eyBjaGFyYWN0ZXJOb2RlcyB9XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBIb21lOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBOYXZiYXJTdG9yZSBmcm9tICcuLi9zdG9yZXMvTmF2YmFyU3RvcmUnO1xuaW1wb3J0IE5hdmJhckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9OYXZiYXJBY3Rpb25zJztcblxuY2xhc3MgTmF2YmFyIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cblx0XHR0aGlzLnN0YXRlID0gTmF2YmFyU3RvcmUuZ2V0U3RhdGUoKTtcblx0XHR0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuXHR9XG5cblx0Y29tcG9uZW50RGlkTW91bnQoKSB7XG5cdFx0TmF2YmFyU3RvcmUubGlzdGVuKHRoaXMub25DaGFuZ2UpO1xuXHRcdE5hdmJhckFjdGlvbnMuZ2V0Q2hhcmFjdGVyQ291bnQoKTtcblxuXHRcdGxldCBzb2NrZXQgPSBpby5jb25uZWN0KCk7XG5cblx0XHRzb2NrZXQub24oJ29ubGluZVVzZXJzJywgKGRhdGEpID0+IHtcblx0XHRcdE5hdmJhckFjdGlvbnMudXBkYXRlT25saW5lVXNlcnMoZGF0YSk7XG5cdFx0fSk7XG5cblx0XHQkKGRvY3VtZW50KS5hamF4U3RhcnQoKCkgPT4ge1xuXHRcdFx0TmF2YmFyQWN0aW9ucy51cGRhdGVBamF4QW5pbWF0aW9uKCdmYWRlSW4nKTtcblx0XHR9KTtcblxuXHRcdCQoZG9jdW1lbnQpLmFqYXhDb21wbGV0ZSgoKSA9PiB7XG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdFx0TmF2YmFyQWN0aW9ucy51cGRhdGVBamF4QW5pbWF0aW9uKCdmYWRlT3V0Jyk7XG5cdFx0XHR9LCA3NTApO1xuXHRcdH0pO1xuXHR9XG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQoKSB7XG5cdFx0TmF2YmFyU3RvcmUudW5saXN0ZW4odGhpcy5vbkNoYW5nZSk7XG5cdH1cblxuXHRvbkNoYW5nZShzdGF0ZSkge1xuXHRcdHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuXHR9XG5cblx0aGFuZGxlU3VibWl0KGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuXHRcdGxldCBzZWFyY2hRdWVyeSA9IHRoaXMuc3RhdGUuc2VhcmNoUXVlcnkudHJpbSgpO1xuXG5cdFx0aWYgKHNlYXJjaFF1ZXJ5KSB7XG5cdFx0XHROYXZiYXJBY3Rpb25zLmZpbmRDaGFyYWN0ZXIoe1xuXHRcdFx0XHRzZWFyY2hRdWVyeTogc2VhcmNoUXVlcnksXG5cdFx0XHRcdHNlYXJjaEZvcm06IHRoaXMucmVmcy5zZWFyY2hGb3JtLFxuXHRcdFx0XHRoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3Rvcnlcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdHJlbmRlcigpIHtcblx0XHRyZXR1cm4gKFxuICAgIFx0PG5hdiBjbGFzc05hbWU9J25hdmJhciBuYXZiYXItZGVmYXVsdCBuYXZiYXItc3RhdGljLXRvcCc+XG4gICAgXHRcdDxkaXYgY2xhc3NOYW1lPSduYXZiYXItaGVhZGVyJz5cbiAgICBcdFx0XHQ8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lPSduYXZiYXItdG9nZ2xlIGNvbGxhcHNlZCcgZGF0YS10b2dnbGU9J2NvbGxhcHNlJyBkYXRhLXRhcmdldD0nI25hdmJhcic+XG5cdCAgICBcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J3NyLW9ubHknPlRvZ2dsZSBuYXZpZ2F0aW9uPC9zcGFuPlxuXHQgICAgXHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdpY29uLWJhcic+PC9zcGFuPlxuXHQgICAgXHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdpY29uLWJhcic+PC9zcGFuPlxuXHQgICAgXHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdpY29uLWJhcic+PC9zcGFuPlxuICAgIFx0XHRcdDwvYnV0dG9uPlxuICAgIFx0XHRcdDxMaW5rIHRvPScvJyBhbHQ9J1JlYWN0IENoYXJhY3RlciBWb3RpbmcnIGNsYXNzTmFtZT0nbmF2YmFyLWJyYW5kJz5cbiAgICBcdFx0XHRcdDxzcGFuIHJlZj0ndHJpYW5nbGVzJyBjbGFzc05hbWU9eyAndHJpYW5nbGVzIGFuaW1hdGVkICcgKyB0aGlzLnN0YXRlLmFqYXhBbmltYXRpb25DbGFzcyB9PlxuICAgIFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndHJpIGludmVydCc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSc+PC9kaXY+XG4gICAgXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0cmkgaW52ZXJ0Jz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgIFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndHJpJz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgIFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndHJpJz48L2Rpdj5cbiAgICBcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RyaSBpbnZlcnQnPjwvZGl2PlxuICAgIFx0XHRcdFx0PC9zcGFuPlxuICAgIFx0XHRcdFx0UkNWXG4gICAgXHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2JhZGdlIGJhZGdlLXVwIGJhZGdlLWRhbmdlcic+eyB0aGlzLnN0YXRlLm9ubGluZVVzZXJzIH08L3NwYW4+XG4gICAgXHRcdFx0PC9MaW5rPlxuICAgIFx0XHQ8L2Rpdj5cbiAgICBcdFx0PGRpdiBpZD0nbmF2YmFyJyBjbGFzc05hbWU9J25hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSc+XG4gICAgXHRcdFx0PGZvcm0gcmVmPSdzZWFyY2hGb3JtJyBjbGFzc05hbWU9J25hdmJhci1mb3JtIG5hdmJhci1sZWZ0IGFuaW1hdGVkJyBvblN1Ym1pdD17IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcykgfT5cbiAgICBcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdpbnB1dC1ncm91cCc+XG4gICAgXHRcdFx0XHRcdDxpbnB1dCB0eXBlPSd0ZXh0JyBjbGFzc05hbWU9J2Zvcm0tY29udHJvbCcgcGxhY2Vob2xkZXI9eyB0aGlzLnN0YXRlLnRvdGFsQ2hhcmFjdGVycyArICcgY2hhcmFjdGVycycgfSB2YWx1ZT17IHRoaXMuc3RhdGUuc2VhcmNoUXVlcnkgfSBvbkNoYW5nZT17IE5hdmJhckFjdGlvbnMudXBkYXRlU2VhcmNoUXVlcnkgfSAvPlxuICAgIFx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2lucHV0LWdyb3VwLWJ0bic+XG4gICAgXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBidG4tZGVmYXVsdCcgb25DbGljaz17IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcykgfT48c3BhbiBjbGFzc05hbWU9J2dseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoJz48L3NwYW4+PC9idXR0b24+XG4gIFx0XHRcdFx0XHRcdDwvc3Bhbj5cblx0XHRcdFx0XHRcdDwvZGl2PlxuICAgIFx0XHRcdDwvZm9ybT5cbiAgICBcdFx0XHQ8dWwgY2xhc3NOYW1lPSduYXYgbmF2YmFyLW5hdic+XG4gICAgXHRcdFx0XHQ8bGk+PExpbmsgdG89Jy8nPkhvbWU8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdDxsaT48TGluayB0bz0nL3N0YXRzJz5TdGF0czwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0PGxpIGNsYXNzTmFtZT0nZHJvcGRvd24nPlxuICAgIFx0XHRcdFx0XHQ8YSBocmVmPScjJyBjbGFzc05hbWU9J2Ryb3Bkb3duLXRvZ2dsZScgZGF0YS10b2dnbGU9J2Ryb3Bkb3duJz5Ub3AgMTAwIDxzcGFuIGNsYXNzTmFtZT0nY2FyZXQnPjwvc3Bhbj48L2E+XG4gICAgXHRcdFx0XHRcdDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0XHRcdDxsaT48TGluayB0bz0nL3RvcCc+VG9wIE92ZXJhbGw8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdFx0XHRcdDxMaW5rIHRvPScvdG9wL2NhbGRhcmknPkNhbGRhcmk8L0xpbms+XG4gICAgXHRcdFx0XHRcdFx0XHQ8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvYWNodXJhJz5BY2h1cmE8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvY2l2aXJlJz5DaXZpcmU8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvdG9wL2NhbGRhcmkvZGV0ZWlzJz5EZXRlaXM8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHRcdDwvdWw+XG4gICAgXHRcdFx0XHRcdFx0PC9saT5cbiAgICBcdFx0XHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdFx0XHRcdDxMaW5rIHRvPScvdG9wL2dhbGxlbnRlJz5HYWxsZW50ZTwvTGluaz5cbiAgICBcdFx0XHRcdFx0XHRcdDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0XHRcdFx0XHQ8bGk+PExpbmsgdG89Jy90b3AvY2FsZGFyaS9icnV0b3InPkJydXRvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdFx0XHQ8bGk+PExpbmsgdG89Jy90b3AvY2FsZGFyaS9zZWJpZXN0b3InPlNlYmllc3RvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdFx0XHQ8bGk+PExpbmsgdG89Jy90b3AvY2FsZGFyaS92aGVyb2tpb3InPlZoZXJva2lvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdFx0PC91bD5cbiAgICBcdFx0XHRcdFx0XHQ8L2xpPlxuICAgIFx0XHRcdFx0XHRcdDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0XHRcdCAgPExpbmsgdG89Jy90b3AvbWlubWF0YXInPk1pbm1hdGFyPC9MaW5rPlxuICAgIFx0XHRcdFx0XHRcdCAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHRcdFx0ICAgIDxsaT48TGluayB0bz0nL3RvcC9taW5tYXRhci9icnV0b3InPkJydXRvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy90b3AvbWlubWF0YXIvc2ViaWVzdG9yJz5TZWJpZXN0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvdG9wL21pbm1hdGFyL3ZoZXJva2lvcic+Vmhlcm9raW9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0ICA8L3VsPlxuICAgIFx0XHRcdFx0XHRcdDwvbGk+XG4gICAgXHRcdFx0XHRcdFx0PGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHRcdFx0ICA8TGluayB0bz0nL3RvcC9hbWFycic+QW1hcnI8L0xpbms+XG4gICAgXHRcdFx0XHRcdFx0ICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdFx0XHQgICAgPGxpPjxMaW5rIHRvPScvdG9wL2FtYXJyL2FtYXJyJz5BbWFycjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy90b3AvYW1hcnIvbmkta3VubmknPk5pLUt1bm5pPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0ICAgIDxsaT48TGluayB0bz0nL3RvcC9hbWFyci9raGFuaWQnPktoYW5pZDwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0XHRcdCAgPC91bD5cbiAgICBcdFx0XHRcdFx0XHQ8L2xpPlxuICAgIFx0XHRcdFx0XHRcdDxsaSBjbGFzc05hbWU9J2RpdmlkZXInPjwvbGk+XG4gICAgXHRcdFx0XHRcdFx0PGxpPjxMaW5rIHRvPScvc2hhbWUnPkhhbGwgb2YgU2hhbWU8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdFx0PC91bD5cbiAgICBcdFx0XHRcdDwvbGk+XG4gICAgXHRcdFx0XHQ8bGkgY2xhc3NOYW1lPSdkcm9wZG93bic+XG4gICAgXHRcdFx0XHQgIDxhIGhyZWY9JyMnIGNsYXNzTmFtZT0nZHJvcGRvd24tdG9nZ2xlJyBkYXRhLXRvZ2dsZT0nZHJvcGRvd24nPkZlbWFsZSA8c3BhbiBjbGFzc05hbWU9J2NhcmV0Jz48L3NwYW4+PC9hPlxuICAgIFx0XHRcdFx0ICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUnPkFsbDwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9mZW1hbGUvY2FsZGFyaSc+Q2FsZGFyaTwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvY2FsZGFyaS9hY2h1cmEnPkFjaHVyYTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvY2FsZGFyaS9jaXZpcmUvJz5DaXZpcmU8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2NhbGRhcmkvZGV0ZWlzJz5EZXRlaXM8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgIDwvdWw+XG4gICAgXHRcdFx0XHQgICAgPC9saT5cbiAgICBcdFx0XHRcdCAgICA8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgIDxMaW5rIHRvPScvZmVtYWxlL2dhbGxlbnRlJz5HYWxsZW50ZTwvTGluaz5cbiAgICBcdFx0XHRcdCAgICAgIDx1bCBjbGFzc05hbWU9J2Ryb3Bkb3duLW1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvZ2FsbGVudGUvZ2FsbGVudGUnPkdhbGxlbnRlPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9nYWxsZW50ZS9pbnRha2knPkludGFraTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvZ2FsbGVudGUvamluLW1laSc+SmluLU1laTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICAgIDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duLXN1Ym1lbnUnPlxuICAgIFx0XHRcdFx0ICAgICAgPExpbmsgdG89Jy9mZW1hbGUvbWlubWF0YXInPk1pbm1hdGFyPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9taW5tYXRhci9icnV0b3InPkJydXRvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvbWlubWF0YXIvc2ViaWVzdG9yJz5TZWJpZXN0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL21pbm1hdGFyL3ZoZXJva2lvcic+Vmhlcm9raW9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL2ZlbWFsZS9hbWFycic+QW1hcnI8L0xpbms+XG4gICAgXHRcdFx0XHQgICAgICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvZmVtYWxlL2FtYXJyL2FtYXJyJz5BbWFycjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9mZW1hbGUvYW1hcnIvbmkta3VubmknPk5pLUt1bm5pPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL2ZlbWFsZS9hbWFyci9raGFuaWQnPktoYW5pZDwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgPC91bD5cbiAgICBcdFx0XHRcdCAgICA8L2xpPlxuICAgIFx0XHRcdFx0ICA8L3VsPlxuICAgIFx0XHRcdFx0PC9saT5cbiAgICBcdFx0XHRcdDxsaSBjbGFzc05hbWU9J2Ryb3Bkb3duJz5cbiAgICBcdFx0XHRcdCAgPGEgaHJlZj0nIycgY2xhc3NOYW1lPSdkcm9wZG93bi10b2dnbGUnIGRhdGEtdG9nZ2xlPSdkcm9wZG93bic+TWFsZSA8c3BhbiBjbGFzc05hbWU9J2NhcmV0Jz48L3NwYW4+PC9hPlxuICAgIFx0XHRcdFx0ICA8dWwgY2xhc3NOYW1lPSdkcm9wZG93bi1tZW51Jz5cbiAgICBcdFx0XHRcdCAgICA8bGk+PExpbmsgdG89Jy9tYWxlJz5BbGw8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICA8bGkgY2xhc3NOYW1lPSdkcm9wZG93bi1zdWJtZW51Jz5cbiAgICBcdFx0XHRcdCAgICAgIDxMaW5rIHRvPScvbWFsZS9jYWxkYXJpJz5DYWxkYXJpPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvY2FsZGFyaS9hY2h1cmEnPkFjaHVyYTwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL2NhbGRhcmkvY2l2aXJlJz5DaXZpcmU8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvbWFsZS9jYWxkYXJpL2RldGVpcyc+RGV0ZWlzPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL21hbGUvZ2FsbGVudGUnPkdhbGxlbnRlPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvZ2FsbGVudGUvZ2FsbGVudGUnPkdhbGxlbnRlPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvZ2FsbGVudGUvaW50YWtpJz5JbnRha2k8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvbWFsZS9nYWxsZW50ZS9qaW4tbWVpJz5KaW4tTWVpPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL21hbGUvbWlubWF0YXInPk1pbm1hdGFyPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvbWlubWF0YXIvYnJ1dG9yJz5CcnV0b3I8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgICAgPGxpPjxMaW5rIHRvPScvbWFsZS9taW5tYXRhci9zZWJpZXN0b3InPlNlYmllc3RvcjwvTGluaz48L2xpPlxuICAgIFx0XHRcdFx0ICAgICAgICA8bGk+PExpbmsgdG89Jy9tYWxlL21pbm1hdGFyL3ZoZXJva2lvcic+Vmhlcm9raW9yPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICA8L3VsPlxuICAgIFx0XHRcdFx0ICAgIDwvbGk+XG4gICAgXHRcdFx0XHQgICAgPGxpIGNsYXNzTmFtZT0nZHJvcGRvd24tc3VibWVudSc+XG4gICAgXHRcdFx0XHQgICAgICA8TGluayB0bz0nL21hbGUvYW1hcnInPkFtYXJyPC9MaW5rPlxuICAgIFx0XHRcdFx0ICAgICAgPHVsIGNsYXNzTmFtZT0nZHJvcGRvd24tbWVudSc+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvYW1hcnIvYW1hcnInPkFtYXJyPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvYW1hcnIvbmkta3VubmknPk5pLUt1bm5pPC9MaW5rPjwvbGk+XG4gICAgXHRcdFx0XHQgICAgICAgIDxsaT48TGluayB0bz0nL21hbGUvYW1hcnIva2hhbmlkJz5LaGFuaWQ8L0xpbms+PC9saT5cbiAgICBcdFx0XHRcdCAgICAgIDwvdWw+XG4gICAgXHRcdFx0XHQgICAgPC9saT5cbiAgICBcdFx0XHRcdCAgPC91bD5cbiAgICBcdFx0XHRcdDwvbGk+XG4gICAgXHRcdFx0XHQ8bGk+PExpbmsgdG89Jy9hZGQnPkFkZDwvTGluaz48L2xpPlxuICAgIFx0XHRcdDwvdWw+XG4gICAgXHRcdDwvZGl2PlxuICAgIFx0PC9uYXY+XG4gICAgKTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBOYXZiYXI7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSb3V0ZXIgZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBSZWFjdERvbSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGZyb20gJ2hpc3RvcnkvbGliL2NyZWF0ZUJyb3dzZXJIaXN0b3J5JztcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnO1xuXG5sZXQgaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCk7XG5cblJlYWN0RG9tLnJlbmRlcihcblx0PFJvdXRlciBoaXN0b3J5PXsgaGlzdG9yeSB9Pnsgcm91dGVzIH08L1JvdXRlcj4sXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKVxuKTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuL2NvbXBvbmVudHMvQXBwJztcbmltcG9ydCBIb21lIGZyb20gJy4vY29tcG9uZW50cy9Ib21lJztcbmltcG9ydCBBZGRDaGFyYWN0ZXIgZnJvbSAnLi9jb21wb25lbnRzL0FkZENoYXJhY3Rlcic7XG5pbXBvcnQgQ2hhcmFjdGVyIGZyb20gJy4vY29tcG9uZW50cy9DaGFyYWN0ZXInO1xuXG5leHBvcnQgZGVmYXVsdCAoXG4gIDxSb3V0ZSBjb21wb25lbnQ9eyBBcHAgfT5cbiAgXHQ8Um91dGUgcGF0aD0nLycgY29tcG9uZW50PXsgSG9tZSB9IC8+XG4gIFx0PFJvdXRlIHBhdGg9Jy9hZGQnIGNvbXBvbmVudD0geyBBZGRDaGFyYWN0ZXIgfSAvPlxuICBcdDxSb3V0ZSBwYXRoPScvY2hhcmFjdGVycy86aWQnIGNvbXBvbmVudD17IENoYXJhY3RlciB9IC8+XG4gIDwvUm91dGU+XG4pOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBBZGRDaGFyYWN0ZXJBY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMvQWRkQ2hhcmFjdGVyQWN0aW9ucyc7XG5cbmNsYXNzIEFkZENoYXJhY3RlclN0b3JlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5iaW5kQWN0aW9ucyhBZGRDaGFyYWN0ZXJBY3Rpb25zKTtcbiAgICB0aGlzLm5hbWUgPSAnJztcbiAgICB0aGlzLmdlbmRlciA9ICcnO1xuICAgIHRoaXMuaGVscEJsb2NrID0gJyc7XG4gICAgdGhpcy5uYW1lVmFsaWRhdGlvblN0YXRlID0gJyc7XG4gICAgdGhpcy5nZW5kZXJWYWxpZGF0aW9uU3RhdGUgPSAnJztcbiAgfVxuXG4gIG9uQWRkQ2hhcmFjdGVyU3VjY2VzcyhzdWNjZXNzTWVzc2FnZSkge1xuICAgIHRoaXMubmFtZVZhbGlkYXRpb25TdGF0ZSA9ICdoYXMtc3VjY2Vzcyc7XG4gICAgdGhpcy5oZWxwQmxvY2sgPSBzdWNjZXNzTWVzc2FnZTtcbiAgfVxuXG4gIG9uQWRkQ2hhcmFjdGVyRmFpbChlcnJvck1lc3NhZ2UpIHtcbiAgXHRsZXQgZXJyb3JNc2cgPSBlcnJvck1lc3NhZ2UucmVzcG9uc2VKU09OICYmIGVycm9yTWVzc2FnZS5yZXNwb25zZUpTT04ubWVzc2FnZSB8fCBlcnJvck1lc3NhZ2UucmVzcG9uc2VUZXh0IHx8IGVycm9yTWVzc2FnZS5zdGF0dXNUZXh0O1xuICAgIHRoaXMubmFtZVZhbGlkYXRpb25TdGF0ZSA9ICdoYXMtZXJyb3InO1xuICAgIHRoaXMuaGVscEJsb2NrID0gZXJyb3JNc2c7XG5cdFx0dG9hc3RyLmVycm9yKGVycm9yTXNnKTtcbiAgfVxuXG4gIG9uVXBkYXRlTmFtZShldmVudCkge1xuICAgIHRoaXMubmFtZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICB0aGlzLm5hbWVWYWxpZGF0aW9uU3RhdGUgPSAnJztcbiAgICB0aGlzLmhlbHBCbG9jayA9ICcnO1xuICB9XG5cbiAgb25VcGRhdGVHZW5kZXIoZXZlbnQpIHtcbiAgICB0aGlzLmdlbmRlciA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICB0aGlzLmdlbmRlclZhbGlkYXRpb25TdGF0ZSA9ICcnO1xuICB9XG5cbiAgb25JbnZhbGlkTmFtZSgpIHtcbiAgICB0aGlzLm5hbWVWYWxpZGF0aW9uU3RhdGUgPSAnaGFzLWVycm9yJztcbiAgICB0aGlzLmhlbHBCbG9jayA9ICdQbGVhc2UgZW50ZXIgYSBjaGFyYWN0ZXIgbmFtZS4nO1xuICB9XG5cbiAgb25JbnZhbGlkR2VuZGVyKCkge1xuICAgIHRoaXMuZ2VuZGVyVmFsaWRhdGlvblN0YXRlID0gJ2hhcy1lcnJvcic7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZVN0b3JlKEFkZENoYXJhY3RlclN0b3JlKTsiLCJpbXBvcnQgeyBhc3NpZ24sIGNvbnRhaW5zIH0gZnJvbSAndW5kZXJzY29yZSc7XG5pbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgQ2hhcmFjdGVyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0NoYXJhY3RlckFjdGlvbnMnO1xuXG5jbGFzcyBDaGFyYWN0ZXJTdG9yZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYmluZEFjdGlvbnMoQ2hhcmFjdGVyQWN0aW9ucyk7XG4gICAgdGhpcy5jaGFyYWN0ZXJJZCA9IDA7XG4gICAgdGhpcy5uYW1lID0gJ1RCRCc7XG4gICAgdGhpcy5yYWNlID0gJ1RCRCc7XG4gICAgdGhpcy5ibG9vZGxpbmUgPSAnVEJEJztcbiAgICB0aGlzLmdlbmRlciA9ICdUQkQnO1xuICAgIHRoaXMud2lucyA9IDA7XG4gICAgdGhpcy5sb3NzZXMgPSAwO1xuICAgIHRoaXMud2luTG9zc1JhdGlvID0gMDtcbiAgICB0aGlzLmlzUmVwb3J0ZWQgPSBmYWxzZTtcbiAgfVxuXG4gIG9uR2V0Q2hhcmFjdGVyU3VjY2VzcyhkYXRhKSB7XG4gICAgYXNzaWduKHRoaXMsIGRhdGEpO1xuICAgICQoZG9jdW1lbnQuYm9keSkuYXR0cignY2xhc3MnLCAncHJvZmlsZSAnICsgdGhpcy5yYWNlLnRvTG93ZXJDYXNlKCkpO1xuICAgIGxldCBsb2NhbERhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnUkNWJykgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdSQ1YnKSkgOiB7fTtcbiAgICBsZXQgcmVwb3J0cyA9IGxvY2FsRGF0YS5yZXBvcnRzIHx8IFtdO1xuICAgIHRoaXMuaXNSZXBvcnRlZCA9IGNvbnRhaW5zKHJlcG9ydHMsIHRoaXMuY2hhcmFjdGVySWQpO1xuICAgIC8vIElmIGlzIE5hTiAoZnJvbSBkaXZpc2lvbiBieSB6ZXJvKSB0aGVuIHNldCBpdCB0byBcIjBcIlxuICAgIHRoaXMud2luTG9zc1JhdGlvID0gKCh0aGlzLndpbnMgLyAodGhpcy53aW5zICsgdGhpcy5sb3NzZXMpICogMTAwKSB8fCAwKS50b0ZpeGVkKDEpO1xuICB9XG5cbiAgb25HZXRDaGFyYWN0ZXJGYWlsKGpxWGhyKSB7XG4gICAgdG9hc3RyLmVycm9yKGpxWGhyLnJlc3BvbnNlSlNPTi5tZXNzYWdlKTtcbiAgfVxuXG4gIG9uUmVwb3J0U3VjY2VzcygpIHtcbiAgICB0aGlzLmlzUmVwb3J0ZWQgPSB0cnVlO1xuICAgIGxldCBsb2NhbERhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnUkNWJykgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdSQ1YnKSkgOiB7fTtcbiAgICBsb2NhbERhdGEucmVwb3J0cyA9IGxvY2FsRGF0YS5yZXBvcnRzIHx8IFtdO1xuICAgIGxvY2FsRGF0YS5yZXBvcnRzLnB1c2godGhpcy5jaGFyYWN0ZXJJZCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1JDVicsIEpTT04uc3RyaW5naWZ5KGxvY2FsRGF0YSkpO1xuICAgIHRvYXN0ci53YXJuaW5nKCdDaGFyYWN0ZXIgaGFzIGJlZW4gcmVwb3J0ZWQuJyk7XG4gIH1cblxuICBvblJlcG9ydEZhaWwoanFYaHIpIHtcbiAgICB0b2FzdHIuZXJyb3IoanFYaHIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsdC5jcmVhdGVTdG9yZShDaGFyYWN0ZXJTdG9yZSk7IiwiaW1wb3J0IGFsdCBmcm9tICcuLi9hbHQnO1xuaW1wb3J0IEZvb3RlckFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9Gb290ZXJBY3Rpb25zJztcblxuY2xhc3MgRm9vdGVyU3RvcmUge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmJpbmRBY3Rpb25zKEZvb3RlckFjdGlvbnMpO1xuXHRcdHRoaXMuY2hhcmFjdGVycyA9IFtdO1xuXHR9XG5cblx0b25HZXRUb3BDaGFyYWN0ZXJzU3VjY2VzcyhkYXRhKSB7XG5cdFx0dGhpcy5jaGFyYWN0ZXJzID0gZGF0YS5zbGljZSgwLCA1KTtcblx0fVxuXG5cdG9uR2V0VG9wQ2hhcmFjdGVyc0ZhaWwoanFYaHIpIHtcblx0XHR0b2FzdHIuZXJyb3IoanFYaHIucmVzcG9uc2VKU09OICYmIGpxWGhyLnJlc3BvbnNlSlNPTi5tZXNzYWdlIHx8IGpxWGhyLnJlc3BvbnNlVGV4dCB8fCBqcVhoci5zdGF0dXNUZXh0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoRm9vdGVyU3RvcmUpOyIsImltcG9ydCBhbHQgZnJvbSAnLi4vYWx0JztcbmltcG9ydCBIb21lQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL0hvbWVBY3Rpb25zJztcblxuY2xhc3MgSG9tZVN0b3JlIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5iaW5kQWN0aW9ucyhIb21lQWN0aW9ucyk7XG5cdFx0dGhpcy5jaGFyYWN0ZXJzID0gW107XG5cdH1cblxuXHRvbkdldFR3b0NoYXJhY3RlcnNTdWNjZXNzKGRhdGEpIHtcblx0XHR0aGlzLmNoYXJhY3RlcnMgPSBkYXRhO1xuXHR9XG5cblx0b25HZXRUd29DaGFyYWN0ZXJzRmFpbChlcnJvck1lc3NhZ2UpIHtcbiAgXHRsZXQgZXJyb3JNc2cgPSBlcnJvck1lc3NhZ2UucmVzcG9uc2VKU09OICYmIGVycm9yTWVzc2FnZS5yZXNwb25zZUpTT04ubWVzc2FnZSB8fCBlcnJvck1lc3NhZ2UucmVzcG9uc2VUZXh0IHx8IGVycm9yTWVzc2FnZS5zdGF0dXNUZXh0O1xuXHRcdHRvYXN0ci5lcnJvcihlcnJvck1zZyk7XG5cdH1cblxuXHRvblZvdGVGYWlsKGVycm9yTWVzc2FnZSkge1xuICBcdGxldCBlcnJvck1zZyA9IGVycm9yTWVzc2FnZS5yZXNwb25zZUpTT04gJiYgZXJyb3JNZXNzYWdlLnJlc3BvbnNlSlNPTi5tZXNzYWdlIHx8IGVycm9yTWVzc2FnZS5yZXNwb25zZVRleHQgfHwgZXJyb3JNZXNzYWdlLnN0YXR1c1RleHQ7XG5cdFx0dG9hc3RyLmVycm9yKGVycm9yTXNnKTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBhbHQuY3JlYXRlU3RvcmUoSG9tZVN0b3JlKTsiLCJpbXBvcnQgYWx0IGZyb20gJy4uL2FsdCc7XG5pbXBvcnQgTmF2YmFyQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL05hdmJhckFjdGlvbnMnO1xuXG5jbGFzcyBOYXZiYXJTdG9yZSB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMuYmluZEFjdGlvbnMoTmF2YmFyQWN0aW9ucyk7XG5cdFx0dGhpcy50b3RhbENoYXJhY3RlcnMgPSAwO1xuXHRcdHRoaXMub25saW5lVXNlcnMgPSAwO1xuXHRcdHRoaXMuc2VhcmNoUXVlcnkgPSAnJztcblx0XHR0aGlzLmFqYXhBbmltYXRpb25DbGFzcyA9ICcnO1xuXHR9XG5cblx0b25GaW5kQ2hhcmFjdGVyU3VjY2VzcyhwYXlsb2FkKSB7XG5cdFx0cGF5bG9hZC5oaXN0b3J5LnB1c2hTdGF0ZShudWxsLCAnL2NoYXJhY3RlcnMvJyArIHBheWxvYWQuY2hhcmFjdGVySWQpO1xuXHR9XG5cblx0b25GaW5kQ2hhcmFjdGVyRmFpbChwYXlsb2FkKSB7XG5cdFx0cGF5bG9hZC5zZWFyY2hGb3JtLmNsYXNzTGlzdC5hZGQoJ3NoYWtlJyk7XG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRwYXlsb2FkLnNlYXJjaEZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnc2hha2UnKTtcblx0XHR9LCAxMDAwKTtcblx0fVxuXG5cdG9uVXBkYXRlT25saW5lVXNlcnMoZGF0YSkge1xuXHRcdHRoaXMub25saW5lVXNlcnMgPSBkYXRhLm9ubGluZVVzZXJzO1xuXHR9XG5cblx0b25VcGRhdGVBamF4QW5pbWF0aW9uKGNsYXNzTmFtZSkge1xuXHRcdHRoaXMuYWpheEFuaW1hdGlvbkNsYXNzID0gY2xhc3NOYW1lOyAvL2ZhZGVJbiBvciBmYWRlT3V0XG5cdH1cblxuXHRvblVwZGF0ZVNlYXJjaFF1ZXJ5KGV2ZW50KSB7XG5cdFx0dGhpcy5zZWFyY2hRdWVyeSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcblx0fVxuXG5cdG9uR2V0Q2hhcmFjdGVyQ291bnRTdWNjZXNzKGRhdGEpIHtcblx0XHR0aGlzLnRvdGFsQ2hhcmFjdGVycyA9IGRhdGEuY291bnQ7XG5cdH1cblxuXHRvbkdldENoYXJhY3RlckNvdW50RmFpbChqcVhocikge1xuXHRcdHRvYXN0ci5lcnJvcihqcVhoci5yZXNwb25zZUpTT04ubWVzc2FnZSk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYWx0LmNyZWF0ZVN0b3JlKE5hdmJhclN0b3JlKTsiLCJ2YXIgcFNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuL2xpYi9rZXlzLmpzJyk7XG52YXIgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2xpYi9pc19hcmd1bWVudHMuanMnKTtcblxudmFyIGRlZXBFcXVhbCA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFjdHVhbCwgZXhwZWN0ZWQsIG9wdHMpIHtcbiAgaWYgKCFvcHRzKSBvcHRzID0ge307XG4gIC8vIDcuMS4gQWxsIGlkZW50aWNhbCB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGFzIGRldGVybWluZWQgYnkgPT09LlxuICBpZiAoYWN0dWFsID09PSBleHBlY3RlZCkge1xuICAgIHJldHVybiB0cnVlO1xuXG4gIH0gZWxzZSBpZiAoYWN0dWFsIGluc3RhbmNlb2YgRGF0ZSAmJiBleHBlY3RlZCBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gYWN0dWFsLmdldFRpbWUoKSA9PT0gZXhwZWN0ZWQuZ2V0VGltZSgpO1xuXG4gIC8vIDcuMy4gT3RoZXIgcGFpcnMgdGhhdCBkbyBub3QgYm90aCBwYXNzIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyxcbiAgLy8gZXF1aXZhbGVuY2UgaXMgZGV0ZXJtaW5lZCBieSA9PS5cbiAgfSBlbHNlIGlmICghYWN0dWFsIHx8ICFleHBlY3RlZCB8fCB0eXBlb2YgYWN0dWFsICE9ICdvYmplY3QnICYmIHR5cGVvZiBleHBlY3RlZCAhPSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBvcHRzLnN0cmljdCA/IGFjdHVhbCA9PT0gZXhwZWN0ZWQgOiBhY3R1YWwgPT0gZXhwZWN0ZWQ7XG5cbiAgLy8gNy40LiBGb3IgYWxsIG90aGVyIE9iamVjdCBwYWlycywgaW5jbHVkaW5nIEFycmF5IG9iamVjdHMsIGVxdWl2YWxlbmNlIGlzXG4gIC8vIGRldGVybWluZWQgYnkgaGF2aW5nIHRoZSBzYW1lIG51bWJlciBvZiBvd25lZCBwcm9wZXJ0aWVzIChhcyB2ZXJpZmllZFxuICAvLyB3aXRoIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCksIHRoZSBzYW1lIHNldCBvZiBrZXlzXG4gIC8vIChhbHRob3VnaCBub3QgbmVjZXNzYXJpbHkgdGhlIHNhbWUgb3JkZXIpLCBlcXVpdmFsZW50IHZhbHVlcyBmb3IgZXZlcnlcbiAgLy8gY29ycmVzcG9uZGluZyBrZXksIGFuZCBhbiBpZGVudGljYWwgJ3Byb3RvdHlwZScgcHJvcGVydHkuIE5vdGU6IHRoaXNcbiAgLy8gYWNjb3VudHMgZm9yIGJvdGggbmFtZWQgYW5kIGluZGV4ZWQgcHJvcGVydGllcyBvbiBBcnJheXMuXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG9iakVxdWl2KGFjdHVhbCwgZXhwZWN0ZWQsIG9wdHMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkT3JOdWxsKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBpc0J1ZmZlciAoeCkge1xuICBpZiAoIXggfHwgdHlwZW9mIHggIT09ICdvYmplY3QnIHx8IHR5cGVvZiB4Lmxlbmd0aCAhPT0gJ251bWJlcicpIHJldHVybiBmYWxzZTtcbiAgaWYgKHR5cGVvZiB4LmNvcHkgIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIHguc2xpY2UgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHgubGVuZ3RoID4gMCAmJiB0eXBlb2YgeFswXSAhPT0gJ251bWJlcicpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG9iakVxdWl2KGEsIGIsIG9wdHMpIHtcbiAgdmFyIGksIGtleTtcbiAgaWYgKGlzVW5kZWZpbmVkT3JOdWxsKGEpIHx8IGlzVW5kZWZpbmVkT3JOdWxsKGIpKVxuICAgIHJldHVybiBmYWxzZTtcbiAgLy8gYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LlxuICBpZiAoYS5wcm90b3R5cGUgIT09IGIucHJvdG90eXBlKSByZXR1cm4gZmFsc2U7XG4gIC8vfn5+SSd2ZSBtYW5hZ2VkIHRvIGJyZWFrIE9iamVjdC5rZXlzIHRocm91Z2ggc2NyZXd5IGFyZ3VtZW50cyBwYXNzaW5nLlxuICAvLyAgIENvbnZlcnRpbmcgdG8gYXJyYXkgc29sdmVzIHRoZSBwcm9ibGVtLlxuICBpZiAoaXNBcmd1bWVudHMoYSkpIHtcbiAgICBpZiAoIWlzQXJndW1lbnRzKGIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGEgPSBwU2xpY2UuY2FsbChhKTtcbiAgICBiID0gcFNsaWNlLmNhbGwoYik7XG4gICAgcmV0dXJuIGRlZXBFcXVhbChhLCBiLCBvcHRzKTtcbiAgfVxuICBpZiAoaXNCdWZmZXIoYSkpIHtcbiAgICBpZiAoIWlzQnVmZmVyKGIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgdHJ5IHtcbiAgICB2YXIga2EgPSBvYmplY3RLZXlzKGEpLFxuICAgICAgICBrYiA9IG9iamVjdEtleXMoYik7XG4gIH0gY2F0Y2ggKGUpIHsvL2hhcHBlbnMgd2hlbiBvbmUgaXMgYSBzdHJpbmcgbGl0ZXJhbCBhbmQgdGhlIG90aGVyIGlzbid0XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoa2V5cyBpbmNvcnBvcmF0ZXNcbiAgLy8gaGFzT3duUHJvcGVydHkpXG4gIGlmIChrYS5sZW5ndGggIT0ga2IubGVuZ3RoKVxuICAgIHJldHVybiBmYWxzZTtcbiAgLy90aGUgc2FtZSBzZXQgb2Yga2V5cyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSxcbiAga2Euc29ydCgpO1xuICBrYi5zb3J0KCk7XG4gIC8vfn5+Y2hlYXAga2V5IHRlc3RcbiAgZm9yIChpID0ga2EubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoa2FbaV0gIT0ga2JbaV0pXG4gICAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy9lcXVpdmFsZW50IHZhbHVlcyBmb3IgZXZlcnkgY29ycmVzcG9uZGluZyBrZXksIGFuZFxuICAvL35+fnBvc3NpYmx5IGV4cGVuc2l2ZSBkZWVwIHRlc3RcbiAgZm9yIChpID0ga2EubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBrZXkgPSBrYVtpXTtcbiAgICBpZiAoIWRlZXBFcXVhbChhW2tleV0sIGJba2V5XSwgb3B0cykpIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHlwZW9mIGEgPT09IHR5cGVvZiBiO1xufVxuIiwidmFyIHN1cHBvcnRzQXJndW1lbnRzQ2xhc3MgPSAoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHMpXG59KSgpID09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBzdXBwb3J0c0FyZ3VtZW50c0NsYXNzID8gc3VwcG9ydGVkIDogdW5zdXBwb3J0ZWQ7XG5cbmV4cG9ydHMuc3VwcG9ydGVkID0gc3VwcG9ydGVkO1xuZnVuY3Rpb24gc3VwcG9ydGVkKG9iamVjdCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iamVjdCkgPT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG59O1xuXG5leHBvcnRzLnVuc3VwcG9ydGVkID0gdW5zdXBwb3J0ZWQ7XG5mdW5jdGlvbiB1bnN1cHBvcnRlZChvYmplY3Qpe1xuICByZXR1cm4gb2JqZWN0ICYmXG4gICAgdHlwZW9mIG9iamVjdCA9PSAnb2JqZWN0JyAmJlxuICAgIHR5cGVvZiBvYmplY3QubGVuZ3RoID09ICdudW1iZXInICYmXG4gICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgJ2NhbGxlZScpICYmXG4gICAgIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmplY3QsICdjYWxsZWUnKSB8fFxuICAgIGZhbHNlO1xufTtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBPYmplY3Qua2V5cyA9PT0gJ2Z1bmN0aW9uJ1xuICA/IE9iamVjdC5rZXlzIDogc2hpbTtcblxuZXhwb3J0cy5zaGltID0gc2hpbTtcbmZ1bmN0aW9uIHNoaW0gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSBrZXlzLnB1c2goa2V5KTtcbiAgcmV0dXJuIGtleXM7XG59XG4iLCIvKipcbiAqIEluZGljYXRlcyB0aGF0IG5hdmlnYXRpb24gd2FzIGNhdXNlZCBieSBhIGNhbGwgdG8gaGlzdG9yeS5wdXNoLlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgUFVTSCA9ICdQVVNIJztcblxuZXhwb3J0cy5QVVNIID0gUFVTSDtcbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgbmF2aWdhdGlvbiB3YXMgY2F1c2VkIGJ5IGEgY2FsbCB0byBoaXN0b3J5LnJlcGxhY2UuXG4gKi9cbnZhciBSRVBMQUNFID0gJ1JFUExBQ0UnO1xuXG5leHBvcnRzLlJFUExBQ0UgPSBSRVBMQUNFO1xuLyoqXG4gKiBJbmRpY2F0ZXMgdGhhdCBuYXZpZ2F0aW9uIHdhcyBjYXVzZWQgYnkgc29tZSBvdGhlciBhY3Rpb24gc3VjaFxuICogYXMgdXNpbmcgYSBicm93c2VyJ3MgYmFjay9mb3J3YXJkIGJ1dHRvbnMgYW5kL29yIG1hbnVhbGx5IG1hbmlwdWxhdGluZ1xuICogdGhlIFVSTCBpbiBhIGJyb3dzZXIncyBsb2NhdGlvbiBiYXIuIFRoaXMgaXMgdGhlIGRlZmF1bHQuXG4gKlxuICogU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3dFdmVudEhhbmRsZXJzL29ucG9wc3RhdGVcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICovXG52YXIgUE9QID0gJ1BPUCc7XG5cbmV4cG9ydHMuUE9QID0gUE9QO1xuZXhwb3J0c1snZGVmYXVsdCddID0ge1xuICBQVVNIOiBQVVNILFxuICBSRVBMQUNFOiBSRVBMQUNFLFxuICBQT1A6IFBPUFxufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMubG9vcEFzeW5jID0gbG9vcEFzeW5jO1xuXG5mdW5jdGlvbiBsb29wQXN5bmModHVybnMsIHdvcmssIGNhbGxiYWNrKSB7XG4gIHZhciBjdXJyZW50VHVybiA9IDA7XG4gIHZhciBpc0RvbmUgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBkb25lKCkge1xuICAgIGlzRG9uZSA9IHRydWU7XG4gICAgY2FsbGJhY2suYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgaWYgKGlzRG9uZSkgcmV0dXJuO1xuXG4gICAgaWYgKGN1cnJlbnRUdXJuIDwgdHVybnMpIHtcbiAgICAgIHdvcmsuY2FsbCh0aGlzLCBjdXJyZW50VHVybisrLCBuZXh0LCBkb25lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZG9uZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIG5leHQoKTtcbn0iLCIvKmVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLnNhdmVTdGF0ZSA9IHNhdmVTdGF0ZTtcbmV4cG9ydHMucmVhZFN0YXRlID0gcmVhZFN0YXRlO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG52YXIgS2V5UHJlZml4ID0gJ0BASGlzdG9yeS8nO1xudmFyIFF1b3RhRXhjZWVkZWRFcnJvciA9ICdRdW90YUV4Y2VlZGVkRXJyb3InO1xudmFyIFNlY3VyaXR5RXJyb3IgPSAnU2VjdXJpdHlFcnJvcic7XG5cbmZ1bmN0aW9uIGNyZWF0ZUtleShrZXkpIHtcbiAgcmV0dXJuIEtleVByZWZpeCArIGtleTtcbn1cblxuZnVuY3Rpb24gc2F2ZVN0YXRlKGtleSwgc3RhdGUpIHtcbiAgdHJ5IHtcbiAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShjcmVhdGVLZXkoa2V5KSwgSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gU2VjdXJpdHlFcnJvcikge1xuICAgICAgLy8gQmxvY2tpbmcgY29va2llcyBpbiBDaHJvbWUvRmlyZWZveC9TYWZhcmkgdGhyb3dzIFNlY3VyaXR5RXJyb3Igb24gYW55XG4gICAgICAvLyBhdHRlbXB0IHRvIGFjY2VzcyB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10oZmFsc2UsICdbaGlzdG9yeV0gVW5hYmxlIHRvIHNhdmUgc3RhdGU7IHNlc3Npb25TdG9yYWdlIGlzIG5vdCBhdmFpbGFibGUgZHVlIHRvIHNlY3VyaXR5IHNldHRpbmdzJykgOiB1bmRlZmluZWQ7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gUXVvdGFFeGNlZWRlZEVycm9yICYmIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIFNhZmFyaSBcInByaXZhdGUgbW9kZVwiIHRocm93cyBRdW90YUV4Y2VlZGVkRXJyb3IuXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3dhcm5pbmcyWydkZWZhdWx0J10oZmFsc2UsICdbaGlzdG9yeV0gVW5hYmxlIHRvIHNhdmUgc3RhdGU7IHNlc3Npb25TdG9yYWdlIGlzIG5vdCBhdmFpbGFibGUgaW4gU2FmYXJpIHByaXZhdGUgbW9kZScpIDogdW5kZWZpbmVkO1xuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVhZFN0YXRlKGtleSkge1xuICB2YXIganNvbiA9IHVuZGVmaW5lZDtcbiAgdHJ5IHtcbiAgICBqc29uID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oY3JlYXRlS2V5KGtleSkpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvci5uYW1lID09PSBTZWN1cml0eUVycm9yKSB7XG4gICAgICAvLyBCbG9ja2luZyBjb29raWVzIGluIENocm9tZS9GaXJlZm94L1NhZmFyaSB0aHJvd3MgU2VjdXJpdHlFcnJvciBvbiBhbnlcbiAgICAgIC8vIGF0dGVtcHQgdG8gYWNjZXNzIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5cbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfd2FybmluZzJbJ2RlZmF1bHQnXShmYWxzZSwgJ1toaXN0b3J5XSBVbmFibGUgdG8gcmVhZCBzdGF0ZTsgc2Vzc2lvblN0b3JhZ2UgaXMgbm90IGF2YWlsYWJsZSBkdWUgdG8gc2VjdXJpdHkgc2V0dGluZ3MnKSA6IHVuZGVmaW5lZDtcblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgaWYgKGpzb24pIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoanNvbik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIC8vIElnbm9yZSBpbnZhbGlkIEpTT04uXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjtcbmV4cG9ydHMucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IHJlbW92ZUV2ZW50TGlzdGVuZXI7XG5leHBvcnRzLmdldEhhc2hQYXRoID0gZ2V0SGFzaFBhdGg7XG5leHBvcnRzLnJlcGxhY2VIYXNoUGF0aCA9IHJlcGxhY2VIYXNoUGF0aDtcbmV4cG9ydHMuZ2V0V2luZG93UGF0aCA9IGdldFdpbmRvd1BhdGg7XG5leHBvcnRzLmdvID0gZ287XG5leHBvcnRzLmdldFVzZXJDb25maXJtYXRpb24gPSBnZXRVc2VyQ29uZmlybWF0aW9uO1xuZXhwb3J0cy5zdXBwb3J0c0hpc3RvcnkgPSBzdXBwb3J0c0hpc3Rvcnk7XG5leHBvcnRzLnN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2g7XG5cbmZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIGlmIChub2RlLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgbm9kZS5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICBpZiAobm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKSB7XG4gICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIG5vZGUuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCcjJylbMV0gfHwgJyc7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gZ2V0V2luZG93UGF0aCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggKyB3aW5kb3cubG9jYXRpb24uaGFzaDtcbn1cblxuZnVuY3Rpb24gZ28obikge1xuICBpZiAobikgd2luZG93Lmhpc3RvcnkuZ28obik7XG59XG5cbmZ1bmN0aW9uIGdldFVzZXJDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmFja3QvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBGSVhNRTogV29yayBhcm91bmQgb3VyIGJyb3dzZXIgaGlzdG9yeSBub3Qgd29ya2luZyBjb3JyZWN0bHkgb24gQ2hyb21lXG4gIC8vIGlPUzogaHR0cHM6Ly9naXRodWIuY29tL3JhY2t0L3JlYWN0LXJvdXRlci9pc3N1ZXMvMjU2NVxuICBpZiAodWEuaW5kZXhPZignQ3JpT1MnKSAhPT0gLTEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuXG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgdmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgcmV0dXJuIHVhLmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5leHBvcnRzLmNhblVzZURPTSA9IGNhblVzZURPTTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9BY3Rpb25zID0gcmVxdWlyZSgnLi9BY3Rpb25zJyk7XG5cbnZhciBfRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCcuL0V4ZWN1dGlvbkVudmlyb25tZW50Jyk7XG5cbnZhciBfRE9NVXRpbHMgPSByZXF1aXJlKCcuL0RPTVV0aWxzJyk7XG5cbnZhciBfRE9NU3RhdGVTdG9yYWdlID0gcmVxdWlyZSgnLi9ET01TdGF0ZVN0b3JhZ2UnKTtcblxudmFyIF9jcmVhdGVET01IaXN0b3J5ID0gcmVxdWlyZSgnLi9jcmVhdGVET01IaXN0b3J5Jyk7XG5cbnZhciBfY3JlYXRlRE9NSGlzdG9yeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVET01IaXN0b3J5KTtcblxudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKCcuL3BhcnNlUGF0aCcpO1xuXG52YXIgX3BhcnNlUGF0aDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJzZVBhdGgpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgSFRNTDUncyBoaXN0b3J5IEFQSVxuICogKHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50KSB0byBtYW5hZ2UgaGlzdG9yeS5cbiAqIFRoaXMgaXMgdGhlIHJlY29tbWVuZGVkIG1ldGhvZCBvZiBtYW5hZ2luZyBoaXN0b3J5IGluIGJyb3dzZXJzIGJlY2F1c2VcbiAqIGl0IHByb3ZpZGVzIHRoZSBjbGVhbmVzdCBVUkxzLlxuICpcbiAqIE5vdGU6IEluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGZ1bGxcbiAqIHBhZ2UgcmVsb2FkcyB3aWxsIGJlIHVzZWQgdG8gcHJlc2VydmUgVVJMcy5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkoKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwIHx8IGFyZ3VtZW50c1swXSA9PT0gdW5kZWZpbmVkID8ge30gOiBhcmd1bWVudHNbMF07XG5cbiAgIV9FeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX2ludmFyaWFudDJbJ2RlZmF1bHQnXShmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogX2ludmFyaWFudDJbJ2RlZmF1bHQnXShmYWxzZSkgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIGZvcmNlUmVmcmVzaCA9IG9wdGlvbnMuZm9yY2VSZWZyZXNoO1xuXG4gIHZhciBpc1N1cHBvcnRlZCA9IF9ET01VdGlscy5zdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIHVzZVJlZnJlc2ggPSAhaXNTdXBwb3J0ZWQgfHwgZm9yY2VSZWZyZXNoO1xuXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnRMb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICBoaXN0b3J5U3RhdGUgPSBoaXN0b3J5U3RhdGUgfHwgd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG5cbiAgICB2YXIgcGF0aCA9IF9ET01VdGlscy5nZXRXaW5kb3dQYXRoKCk7XG4gICAgdmFyIF9oaXN0b3J5U3RhdGUgPSBoaXN0b3J5U3RhdGU7XG4gICAgdmFyIGtleSA9IF9oaXN0b3J5U3RhdGUua2V5O1xuXG4gICAgdmFyIHN0YXRlID0gdW5kZWZpbmVkO1xuICAgIGlmIChrZXkpIHtcbiAgICAgIHN0YXRlID0gX0RPTVN0YXRlU3RvcmFnZS5yZWFkU3RhdGUoa2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUgPSBudWxsO1xuICAgICAga2V5ID0gaGlzdG9yeS5jcmVhdGVLZXkoKTtcblxuICAgICAgaWYgKGlzU3VwcG9ydGVkKSB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoX2V4dGVuZHMoe30sIGhpc3RvcnlTdGF0ZSwgeyBrZXk6IGtleSB9KSwgbnVsbCwgcGF0aCk7XG4gICAgfVxuXG4gICAgdmFyIGxvY2F0aW9uID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcblxuICAgIHJldHVybiBoaXN0b3J5LmNyZWF0ZUxvY2F0aW9uKF9leHRlbmRzKHt9LCBsb2NhdGlvbiwgeyBzdGF0ZTogc3RhdGUgfSksIHVuZGVmaW5lZCwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0UG9wU3RhdGVMaXN0ZW5lcihfcmVmKSB7XG4gICAgdmFyIHRyYW5zaXRpb25UbyA9IF9yZWYudHJhbnNpdGlvblRvO1xuXG4gICAgZnVuY3Rpb24gcG9wU3RhdGVMaXN0ZW5lcihldmVudCkge1xuICAgICAgaWYgKGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQpIHJldHVybjsgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cblxuICAgICAgdHJhbnNpdGlvblRvKGdldEN1cnJlbnRMb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICAgIH1cblxuICAgIF9ET01VdGlscy5hZGRFdmVudExpc3RlbmVyKHdpbmRvdywgJ3BvcHN0YXRlJywgcG9wU3RhdGVMaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgX0RPTVV0aWxzLnJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCAncG9wc3RhdGUnLCBwb3BTdGF0ZUxpc3RlbmVyKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gZmluaXNoVHJhbnNpdGlvbihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlbmFtZSA9IGxvY2F0aW9uLmJhc2VuYW1lO1xuICAgIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lO1xuICAgIHZhciBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2g7XG4gICAgdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuICAgIHZhciBhY3Rpb24gPSBsb2NhdGlvbi5hY3Rpb247XG4gICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleTtcblxuICAgIGlmIChhY3Rpb24gPT09IF9BY3Rpb25zLlBPUCkgcmV0dXJuOyAvLyBOb3RoaW5nIHRvIGRvLlxuXG4gICAgX0RPTVN0YXRlU3RvcmFnZS5zYXZlU3RhdGUoa2V5LCBzdGF0ZSk7XG5cbiAgICB2YXIgcGF0aCA9IChiYXNlbmFtZSB8fCAnJykgKyBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgdmFyIGhpc3RvcnlTdGF0ZSA9IHtcbiAgICAgIGtleToga2V5XG4gICAgfTtcblxuICAgIGlmIChhY3Rpb24gPT09IF9BY3Rpb25zLlBVU0gpIHtcbiAgICAgIGlmICh1c2VSZWZyZXNoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gcGF0aDtcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBQcmV2ZW50IGxvY2F0aW9uIHVwZGF0ZS5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKGhpc3RvcnlTdGF0ZSwgbnVsbCwgcGF0aCk7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUkVQTEFDRVxuICAgICAgaWYgKHVzZVJlZnJlc2gpIHtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UocGF0aCk7XG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gUHJldmVudCBsb2NhdGlvbiB1cGRhdGUuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShoaXN0b3J5U3RhdGUsIG51bGwsIHBhdGgpO1xuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSBfY3JlYXRlRE9NSGlzdG9yeTJbJ2RlZmF1bHQnXShfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgIGdldEN1cnJlbnRMb2NhdGlvbjogZ2V0Q3VycmVudExvY2F0aW9uLFxuICAgIGZpbmlzaFRyYW5zaXRpb246IGZpbmlzaFRyYW5zaXRpb24sXG4gICAgc2F2ZVN0YXRlOiBfRE9NU3RhdGVTdG9yYWdlLnNhdmVTdGF0ZVxuICB9KSk7XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwLFxuICAgICAgc3RvcFBvcFN0YXRlTGlzdGVuZXIgPSB1bmRlZmluZWQ7XG5cbiAgZnVuY3Rpb24gbGlzdGVuQmVmb3JlKGxpc3RlbmVyKSB7XG4gICAgaWYgKCsrbGlzdGVuZXJDb3VudCA9PT0gMSkgc3RvcFBvcFN0YXRlTGlzdGVuZXIgPSBzdGFydFBvcFN0YXRlTGlzdGVuZXIoaGlzdG9yeSk7XG5cbiAgICB2YXIgdW5saXN0ZW4gPSBoaXN0b3J5Lmxpc3RlbkJlZm9yZShsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdW5saXN0ZW4oKTtcblxuICAgICAgaWYgKC0tbGlzdGVuZXJDb3VudCA9PT0gMCkgc3RvcFBvcFN0YXRlTGlzdGVuZXIoKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgaWYgKCsrbGlzdGVuZXJDb3VudCA9PT0gMSkgc3RvcFBvcFN0YXRlTGlzdGVuZXIgPSBzdGFydFBvcFN0YXRlTGlzdGVuZXIoaGlzdG9yeSk7XG5cbiAgICB2YXIgdW5saXN0ZW4gPSBoaXN0b3J5Lmxpc3RlbihsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdW5saXN0ZW4oKTtcblxuICAgICAgaWYgKC0tbGlzdGVuZXJDb3VudCA9PT0gMCkgc3RvcFBvcFN0YXRlTGlzdGVuZXIoKTtcbiAgICB9O1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiByZWdpc3RlclRyYW5zaXRpb25Ib29rKGhvb2spIHtcbiAgICBpZiAoKytsaXN0ZW5lckNvdW50ID09PSAxKSBzdG9wUG9wU3RhdGVMaXN0ZW5lciA9IHN0YXJ0UG9wU3RhdGVMaXN0ZW5lcihoaXN0b3J5KTtcblxuICAgIGhpc3RvcnkucmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gdW5yZWdpc3RlclRyYW5zaXRpb25Ib29rKGhvb2spIHtcbiAgICBoaXN0b3J5LnVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKTtcblxuICAgIGlmICgtLWxpc3RlbmVyQ291bnQgPT09IDApIHN0b3BQb3BTdGF0ZUxpc3RlbmVyKCk7XG4gIH1cblxuICByZXR1cm4gX2V4dGVuZHMoe30sIGhpc3RvcnksIHtcbiAgICBsaXN0ZW5CZWZvcmU6IGxpc3RlbkJlZm9yZSxcbiAgICBsaXN0ZW46IGxpc3RlbixcbiAgICByZWdpc3RlclRyYW5zaXRpb25Ib29rOiByZWdpc3RlclRyYW5zaXRpb25Ib29rLFxuICAgIHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogdW5yZWdpc3RlclRyYW5zaXRpb25Ib29rXG4gIH0pO1xufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBjcmVhdGVCcm93c2VySGlzdG9yeTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX2ludmFyaWFudCA9IHJlcXVpcmUoJ2ludmFyaWFudCcpO1xuXG52YXIgX2ludmFyaWFudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbnZhcmlhbnQpO1xuXG52YXIgX0V4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnLi9FeGVjdXRpb25FbnZpcm9ubWVudCcpO1xuXG52YXIgX0RPTVV0aWxzID0gcmVxdWlyZSgnLi9ET01VdGlscycpO1xuXG52YXIgX2NyZWF0ZUhpc3RvcnkgPSByZXF1aXJlKCcuL2NyZWF0ZUhpc3RvcnknKTtcblxudmFyIF9jcmVhdGVIaXN0b3J5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUhpc3RvcnkpO1xuXG5mdW5jdGlvbiBjcmVhdGVET01IaXN0b3J5KG9wdGlvbnMpIHtcbiAgdmFyIGhpc3RvcnkgPSBfY3JlYXRlSGlzdG9yeTJbJ2RlZmF1bHQnXShfZXh0ZW5kcyh7XG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogX0RPTVV0aWxzLmdldFVzZXJDb25maXJtYXRpb25cbiAgfSwgb3B0aW9ucywge1xuICAgIGdvOiBfRE9NVXRpbHMuZ29cbiAgfSkpO1xuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICFfRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF9pbnZhcmlhbnQyWydkZWZhdWx0J10oZmFsc2UsICdET00gaGlzdG9yeSBuZWVkcyBhIERPTScpIDogX2ludmFyaWFudDJbJ2RlZmF1bHQnXShmYWxzZSkgOiB1bmRlZmluZWQ7XG5cbiAgICByZXR1cm4gaGlzdG9yeS5saXN0ZW4obGlzdGVuZXIpO1xuICB9XG5cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBoaXN0b3J5LCB7XG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfSk7XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGNyZWF0ZURPTUhpc3Rvcnk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvL2ltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9kZWVwRXF1YWwgPSByZXF1aXJlKCdkZWVwLWVxdWFsJyk7XG5cbnZhciBfZGVlcEVxdWFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZXBFcXVhbCk7XG5cbnZhciBfQXN5bmNVdGlscyA9IHJlcXVpcmUoJy4vQXN5bmNVdGlscycpO1xuXG52YXIgX0FjdGlvbnMgPSByZXF1aXJlKCcuL0FjdGlvbnMnKTtcblxudmFyIF9jcmVhdGVMb2NhdGlvbjIgPSByZXF1aXJlKCcuL2NyZWF0ZUxvY2F0aW9uJyk7XG5cbnZhciBfY3JlYXRlTG9jYXRpb24zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlTG9jYXRpb24yKTtcblxudmFyIF9ydW5UcmFuc2l0aW9uSG9vayA9IHJlcXVpcmUoJy4vcnVuVHJhbnNpdGlvbkhvb2snKTtcblxudmFyIF9ydW5UcmFuc2l0aW9uSG9vazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ydW5UcmFuc2l0aW9uSG9vayk7XG5cbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZSgnLi9wYXJzZVBhdGgnKTtcblxudmFyIF9wYXJzZVBhdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VQYXRoKTtcblxudmFyIF9kZXByZWNhdGUgPSByZXF1aXJlKCcuL2RlcHJlY2F0ZScpO1xuXG52YXIgX2RlcHJlY2F0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZXByZWNhdGUpO1xuXG5mdW5jdGlvbiBjcmVhdGVSYW5kb21LZXkobGVuZ3RoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgbGVuZ3RoKTtcbn1cblxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiZcbiAgLy9hLmFjdGlvbiA9PT0gYi5hY3Rpb24gJiYgLy8gRGlmZmVyZW50IGFjdGlvbiAhPT0gbG9jYXRpb24gY2hhbmdlLlxuICBhLmtleSA9PT0gYi5rZXkgJiYgX2RlZXBFcXVhbDJbJ2RlZmF1bHQnXShhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxudmFyIERlZmF1bHRLZXlMZW5ndGggPSA2O1xuXG5mdW5jdGlvbiBjcmVhdGVIaXN0b3J5KCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHt9IDogYXJndW1lbnRzWzBdO1xuICB2YXIgZ2V0Q3VycmVudExvY2F0aW9uID0gb3B0aW9ucy5nZXRDdXJyZW50TG9jYXRpb247XG4gIHZhciBmaW5pc2hUcmFuc2l0aW9uID0gb3B0aW9ucy5maW5pc2hUcmFuc2l0aW9uO1xuICB2YXIgc2F2ZVN0YXRlID0gb3B0aW9ucy5zYXZlU3RhdGU7XG4gIHZhciBnbyA9IG9wdGlvbnMuZ287XG4gIHZhciBrZXlMZW5ndGggPSBvcHRpb25zLmtleUxlbmd0aDtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBvcHRpb25zLmdldFVzZXJDb25maXJtYXRpb247XG5cbiAgaWYgKHR5cGVvZiBrZXlMZW5ndGggIT09ICdudW1iZXInKSBrZXlMZW5ndGggPSBEZWZhdWx0S2V5TGVuZ3RoO1xuXG4gIHZhciB0cmFuc2l0aW9uSG9va3MgPSBbXTtcblxuICBmdW5jdGlvbiBsaXN0ZW5CZWZvcmUoaG9vaykge1xuICAgIHRyYW5zaXRpb25Ib29rcy5wdXNoKGhvb2spO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHRyYW5zaXRpb25Ib29rcyA9IHRyYW5zaXRpb25Ib29rcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGhvb2s7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGFsbEtleXMgPSBbXTtcbiAgdmFyIGNoYW5nZUxpc3RlbmVycyA9IFtdO1xuICB2YXIgbG9jYXRpb24gPSB1bmRlZmluZWQ7XG5cbiAgZnVuY3Rpb24gZ2V0Q3VycmVudCgpIHtcbiAgICBpZiAocGVuZGluZ0xvY2F0aW9uICYmIHBlbmRpbmdMb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlBPUCkge1xuICAgICAgcmV0dXJuIGFsbEtleXMuaW5kZXhPZihwZW5kaW5nTG9jYXRpb24ua2V5KTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gYWxsS2V5cy5pbmRleE9mKGxvY2F0aW9uLmtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVMb2NhdGlvbihuZXdMb2NhdGlvbikge1xuICAgIHZhciBjdXJyZW50ID0gZ2V0Q3VycmVudCgpO1xuXG4gICAgbG9jYXRpb24gPSBuZXdMb2NhdGlvbjtcblxuICAgIGlmIChsb2NhdGlvbi5hY3Rpb24gPT09IF9BY3Rpb25zLlBVU0gpIHtcbiAgICAgIGFsbEtleXMgPSBbXS5jb25jYXQoYWxsS2V5cy5zbGljZSgwLCBjdXJyZW50ICsgMSksIFtsb2NhdGlvbi5rZXldKTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmFjdGlvbiA9PT0gX0FjdGlvbnMuUkVQTEFDRSkge1xuICAgICAgYWxsS2V5c1tjdXJyZW50XSA9IGxvY2F0aW9uLmtleTtcbiAgICB9XG5cbiAgICBjaGFuZ2VMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyKGxvY2F0aW9uKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIGNoYW5nZUxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIGlmIChsb2NhdGlvbikge1xuICAgICAgbGlzdGVuZXIobG9jYXRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX2xvY2F0aW9uID0gZ2V0Q3VycmVudExvY2F0aW9uKCk7XG4gICAgICBhbGxLZXlzID0gW19sb2NhdGlvbi5rZXldO1xuICAgICAgdXBkYXRlTG9jYXRpb24oX2xvY2F0aW9uKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hhbmdlTGlzdGVuZXJzID0gY2hhbmdlTGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgY2FsbGJhY2spIHtcbiAgICBfQXN5bmNVdGlscy5sb29wQXN5bmModHJhbnNpdGlvbkhvb2tzLmxlbmd0aCwgZnVuY3Rpb24gKGluZGV4LCBuZXh0LCBkb25lKSB7XG4gICAgICBfcnVuVHJhbnNpdGlvbkhvb2syWydkZWZhdWx0J10odHJhbnNpdGlvbkhvb2tzW2luZGV4XSwgbG9jYXRpb24sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgICAgZG9uZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSwgZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICAgIGlmIChnZXRVc2VyQ29uZmlybWF0aW9uICYmIHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKG1lc3NhZ2UsIGZ1bmN0aW9uIChvaykge1xuICAgICAgICAgIGNhbGxiYWNrKG9rICE9PSBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FsbGJhY2sobWVzc2FnZSAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdmFyIHBlbmRpbmdMb2NhdGlvbiA9IHVuZGVmaW5lZDtcblxuICBmdW5jdGlvbiB0cmFuc2l0aW9uVG8obmV4dExvY2F0aW9uKSB7XG4gICAgaWYgKGxvY2F0aW9uICYmIGxvY2F0aW9uc0FyZUVxdWFsKGxvY2F0aW9uLCBuZXh0TG9jYXRpb24pKSByZXR1cm47IC8vIE5vdGhpbmcgdG8gZG8uXG5cbiAgICBwZW5kaW5nTG9jYXRpb24gPSBuZXh0TG9jYXRpb247XG5cbiAgICBjb25maXJtVHJhbnNpdGlvblRvKG5leHRMb2NhdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAocGVuZGluZ0xvY2F0aW9uICE9PSBuZXh0TG9jYXRpb24pIHJldHVybjsgLy8gVHJhbnNpdGlvbiB3YXMgaW50ZXJydXB0ZWQuXG5cbiAgICAgIGlmIChvaykge1xuICAgICAgICAvLyB0cmVhdCBQVVNIIHRvIGN1cnJlbnQgcGF0aCBsaWtlIFJFUExBQ0UgdG8gYmUgY29uc2lzdGVudCB3aXRoIGJyb3dzZXJzXG4gICAgICAgIGlmIChuZXh0TG9jYXRpb24uYWN0aW9uID09PSBfQWN0aW9ucy5QVVNIKSB7XG4gICAgICAgICAgdmFyIHByZXZQYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICAgICAgdmFyIG5leHRQYXRoID0gY3JlYXRlUGF0aChuZXh0TG9jYXRpb24pO1xuXG4gICAgICAgICAgaWYgKG5leHRQYXRoID09PSBwcmV2UGF0aCkgbmV4dExvY2F0aW9uLmFjdGlvbiA9IF9BY3Rpb25zLlJFUExBQ0U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZmluaXNoVHJhbnNpdGlvbihuZXh0TG9jYXRpb24pICE9PSBmYWxzZSkgdXBkYXRlTG9jYXRpb24obmV4dExvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSBpZiAobG9jYXRpb24gJiYgbmV4dExvY2F0aW9uLmFjdGlvbiA9PT0gX0FjdGlvbnMuUE9QKSB7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YobG9jYXRpb24ua2V5KTtcbiAgICAgICAgdmFyIG5leHRJbmRleCA9IGFsbEtleXMuaW5kZXhPZihuZXh0TG9jYXRpb24ua2V5KTtcblxuICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSAmJiBuZXh0SW5kZXggIT09IC0xKSBnbyhwcmV2SW5kZXggLSBuZXh0SW5kZXgpOyAvLyBSZXN0b3JlIHRoZSBVUkwuXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKGxvY2F0aW9uKSB7XG4gICAgdHJhbnNpdGlvblRvKGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uLCBfQWN0aW9ucy5QVVNILCBjcmVhdGVLZXkoKSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShsb2NhdGlvbikge1xuICAgIHRyYW5zaXRpb25UbyhjcmVhdGVMb2NhdGlvbihsb2NhdGlvbiwgX0FjdGlvbnMuUkVQTEFDRSwgY3JlYXRlS2V5KCkpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVJhbmRvbUtleShrZXlMZW5ndGgpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICAgIGlmIChsb2NhdGlvbiA9PSBudWxsIHx8IHR5cGVvZiBsb2NhdGlvbiA9PT0gJ3N0cmluZycpIHJldHVybiBsb2NhdGlvbjtcblxuICAgIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lO1xuICAgIHZhciBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2g7XG4gICAgdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuXG4gICAgdmFyIHJlc3VsdCA9IHBhdGhuYW1lO1xuXG4gICAgaWYgKHNlYXJjaCkgcmVzdWx0ICs9IHNlYXJjaDtcblxuICAgIGlmIChoYXNoKSByZXN1bHQgKz0gaGFzaDtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBrZXkgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDIgfHwgYXJndW1lbnRzWzJdID09PSB1bmRlZmluZWQgPyBjcmVhdGVLZXkoKSA6IGFyZ3VtZW50c1syXTtcblxuICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnb2JqZWN0Jykge1xuICAgICAgLy93YXJuaW5nKFxuICAgICAgLy8gIGZhbHNlLFxuICAgICAgLy8gICdUaGUgc3RhdGUgKDJuZCkgYXJndW1lbnQgdG8gaGlzdG9yeS5jcmVhdGVMb2NhdGlvbiBpcyBkZXByZWNhdGVkOyB1c2UgYSAnICtcbiAgICAgIC8vICAnbG9jYXRpb24gZGVzY3JpcHRvciBpbnN0ZWFkJ1xuICAgICAgLy8pXG5cbiAgICAgIGlmICh0eXBlb2YgbG9jYXRpb24gPT09ICdzdHJpbmcnKSBsb2NhdGlvbiA9IF9wYXJzZVBhdGgyWydkZWZhdWx0J10obG9jYXRpb24pO1xuXG4gICAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBsb2NhdGlvbiwgeyBzdGF0ZTogYWN0aW9uIH0pO1xuXG4gICAgICBhY3Rpb24gPSBrZXk7XG4gICAgICBrZXkgPSBhcmd1bWVudHNbM10gfHwgY3JlYXRlS2V5KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF9jcmVhdGVMb2NhdGlvbjNbJ2RlZmF1bHQnXShsb2NhdGlvbiwgYWN0aW9uLCBrZXkpO1xuICB9XG5cbiAgLy8gZGVwcmVjYXRlZFxuICBmdW5jdGlvbiBzZXRTdGF0ZShzdGF0ZSkge1xuICAgIGlmIChsb2NhdGlvbikge1xuICAgICAgdXBkYXRlTG9jYXRpb25TdGF0ZShsb2NhdGlvbiwgc3RhdGUpO1xuICAgICAgdXBkYXRlTG9jYXRpb24obG9jYXRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cGRhdGVMb2NhdGlvblN0YXRlKGdldEN1cnJlbnRMb2NhdGlvbigpLCBzdGF0ZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlTG9jYXRpb25TdGF0ZShsb2NhdGlvbiwgc3RhdGUpIHtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IF9leHRlbmRzKHt9LCBsb2NhdGlvbi5zdGF0ZSwgc3RhdGUpO1xuICAgIHNhdmVTdGF0ZShsb2NhdGlvbi5rZXksIGxvY2F0aW9uLnN0YXRlKTtcbiAgfVxuXG4gIC8vIGRlcHJlY2F0ZWRcbiAgZnVuY3Rpb24gcmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgaWYgKHRyYW5zaXRpb25Ib29rcy5pbmRleE9mKGhvb2spID09PSAtMSkgdHJhbnNpdGlvbkhvb2tzLnB1c2goaG9vayk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vayhob29rKSB7XG4gICAgdHJhbnNpdGlvbkhvb2tzID0gdHJhbnNpdGlvbkhvb2tzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgcmV0dXJuIGl0ZW0gIT09IGhvb2s7XG4gICAgfSk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHB1c2hTdGF0ZShzdGF0ZSwgcGF0aCkge1xuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHBhdGggPSBfcGFyc2VQYXRoMlsnZGVmYXVsdCddKHBhdGgpO1xuXG4gICAgcHVzaChfZXh0ZW5kcyh7IHN0YXRlOiBzdGF0ZSB9LCBwYXRoKSk7XG4gIH1cblxuICAvLyBkZXByZWNhdGVkXG4gIGZ1bmN0aW9uIHJlcGxhY2VTdGF0ZShzdGF0ZSwgcGF0aCkge1xuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHBhdGggPSBfcGFyc2VQYXRoMlsnZGVmYXVsdCddKHBhdGgpO1xuXG4gICAgcmVwbGFjZShfZXh0ZW5kcyh7IHN0YXRlOiBzdGF0ZSB9LCBwYXRoKSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGxpc3RlbkJlZm9yZTogbGlzdGVuQmVmb3JlLFxuICAgIGxpc3RlbjogbGlzdGVuLFxuICAgIHRyYW5zaXRpb25UbzogdHJhbnNpdGlvblRvLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY3JlYXRlS2V5OiBjcmVhdGVLZXksXG4gICAgY3JlYXRlUGF0aDogY3JlYXRlUGF0aCxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIGNyZWF0ZUxvY2F0aW9uOiBjcmVhdGVMb2NhdGlvbixcblxuICAgIHNldFN0YXRlOiBfZGVwcmVjYXRlMlsnZGVmYXVsdCddKHNldFN0YXRlLCAnc2V0U3RhdGUgaXMgZGVwcmVjYXRlZDsgdXNlIGxvY2F0aW9uLmtleSB0byBzYXZlIHN0YXRlIGluc3RlYWQnKSxcbiAgICByZWdpc3RlclRyYW5zaXRpb25Ib29rOiBfZGVwcmVjYXRlMlsnZGVmYXVsdCddKHJlZ2lzdGVyVHJhbnNpdGlvbkhvb2ssICdyZWdpc3RlclRyYW5zaXRpb25Ib29rIGlzIGRlcHJlY2F0ZWQ7IHVzZSBsaXN0ZW5CZWZvcmUgaW5zdGVhZCcpLFxuICAgIHVucmVnaXN0ZXJUcmFuc2l0aW9uSG9vazogX2RlcHJlY2F0ZTJbJ2RlZmF1bHQnXSh1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2ssICd1bnJlZ2lzdGVyVHJhbnNpdGlvbkhvb2sgaXMgZGVwcmVjYXRlZDsgdXNlIHRoZSBjYWxsYmFjayByZXR1cm5lZCBmcm9tIGxpc3RlbkJlZm9yZSBpbnN0ZWFkJyksXG4gICAgcHVzaFN0YXRlOiBfZGVwcmVjYXRlMlsnZGVmYXVsdCddKHB1c2hTdGF0ZSwgJ3B1c2hTdGF0ZSBpcyBkZXByZWNhdGVkOyB1c2UgcHVzaCBpbnN0ZWFkJyksXG4gICAgcmVwbGFjZVN0YXRlOiBfZGVwcmVjYXRlMlsnZGVmYXVsdCddKHJlcGxhY2VTdGF0ZSwgJ3JlcGxhY2VTdGF0ZSBpcyBkZXByZWNhdGVkOyB1c2UgcmVwbGFjZSBpbnN0ZWFkJylcbiAgfTtcbn1cblxuZXhwb3J0c1snZGVmYXVsdCddID0gY3JlYXRlSGlzdG9yeTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIi8vaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZydcbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX0FjdGlvbnMgPSByZXF1aXJlKCcuL0FjdGlvbnMnKTtcblxudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKCcuL3BhcnNlUGF0aCcpO1xuXG52YXIgX3BhcnNlUGF0aDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJzZVBhdGgpO1xuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbigpIHtcbiAgdmFyIGxvY2F0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwIHx8IGFyZ3VtZW50c1swXSA9PT0gdW5kZWZpbmVkID8gJy8nIDogYXJndW1lbnRzWzBdO1xuICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA8PSAxIHx8IGFyZ3VtZW50c1sxXSA9PT0gdW5kZWZpbmVkID8gX0FjdGlvbnMuUE9QIDogYXJndW1lbnRzWzFdO1xuICB2YXIga2V5ID0gYXJndW1lbnRzLmxlbmd0aCA8PSAyIHx8IGFyZ3VtZW50c1syXSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGFyZ3VtZW50c1syXTtcblxuICB2YXIgX2ZvdXJ0aEFyZyA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMyB8fCBhcmd1bWVudHNbM10gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBhcmd1bWVudHNbM107XG5cbiAgaWYgKHR5cGVvZiBsb2NhdGlvbiA9PT0gJ3N0cmluZycpIGxvY2F0aW9uID0gX3BhcnNlUGF0aDJbJ2RlZmF1bHQnXShsb2NhdGlvbik7XG5cbiAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdvYmplY3QnKSB7XG4gICAgLy93YXJuaW5nKFxuICAgIC8vICBmYWxzZSxcbiAgICAvLyAgJ1RoZSBzdGF0ZSAoMm5kKSBhcmd1bWVudCB0byBjcmVhdGVMb2NhdGlvbiBpcyBkZXByZWNhdGVkOyB1c2UgYSAnICtcbiAgICAvLyAgJ2xvY2F0aW9uIGRlc2NyaXB0b3IgaW5zdGVhZCdcbiAgICAvLylcblxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7IHN0YXRlOiBhY3Rpb24gfSk7XG5cbiAgICBhY3Rpb24gPSBrZXkgfHwgX0FjdGlvbnMuUE9QO1xuICAgIGtleSA9IF9mb3VydGhBcmc7XG4gIH1cblxuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2ggfHwgJyc7XG4gIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaCB8fCAnJztcbiAgdmFyIHN0YXRlID0gbG9jYXRpb24uc3RhdGUgfHwgbnVsbDtcblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoLFxuICAgIHN0YXRlOiBzdGF0ZSxcbiAgICBhY3Rpb246IGFjdGlvbixcbiAgICBrZXk6IGtleVxuICB9O1xufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBjcmVhdGVMb2NhdGlvbjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIi8vaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZydcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBkZXByZWNhdGUoZm4pIHtcbiAgcmV0dXJuIGZuO1xuICAvL3JldHVybiBmdW5jdGlvbiAoKSB7XG4gIC8vICB3YXJuaW5nKGZhbHNlLCAnW2hpc3RvcnldICcgKyBtZXNzYWdlKVxuICAvLyAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgLy99XG59XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZGVwcmVjYXRlO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmZ1bmN0aW9uIGV4dHJhY3RQYXRoKHN0cmluZykge1xuICB2YXIgbWF0Y2ggPSBzdHJpbmcubWF0Y2goL15odHRwcz86XFwvXFwvW15cXC9dKi8pO1xuXG4gIGlmIChtYXRjaCA9PSBudWxsKSByZXR1cm4gc3RyaW5nO1xuXG4gIHJldHVybiBzdHJpbmcuc3Vic3RyaW5nKG1hdGNoWzBdLmxlbmd0aCk7XG59XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZXh0cmFjdFBhdGg7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIF9leHRyYWN0UGF0aCA9IHJlcXVpcmUoJy4vZXh0cmFjdFBhdGgnKTtcblxudmFyIF9leHRyYWN0UGF0aDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leHRyYWN0UGF0aCk7XG5cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IF9leHRyYWN0UGF0aDJbJ2RlZmF1bHQnXShwYXRoKTtcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBfd2FybmluZzJbJ2RlZmF1bHQnXShwYXRoID09PSBwYXRobmFtZSwgJ0EgcGF0aCBtdXN0IGJlIHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaCBvbmx5LCBub3QgYSBmdWxseSBxdWFsaWZpZWQgVVJMIGxpa2UgXCIlc1wiJywgcGF0aCkgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyaW5nKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHJpbmcoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cmluZyhzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHJpbmcoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgaWYgKHBhdGhuYW1lID09PSAnJykgcGF0aG5hbWUgPSAnLyc7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaFxuICB9O1xufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBwYXJzZVBhdGg7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbmZ1bmN0aW9uIHJ1blRyYW5zaXRpb25Ib29rKGhvb2ssIGxvY2F0aW9uLCBjYWxsYmFjaykge1xuICB2YXIgcmVzdWx0ID0gaG9vayhsb2NhdGlvbiwgY2FsbGJhY2spO1xuXG4gIGlmIChob29rLmxlbmd0aCA8IDIpIHtcbiAgICAvLyBBc3N1bWUgdGhlIGhvb2sgcnVucyBzeW5jaHJvbm91c2x5IGFuZCBhdXRvbWF0aWNhbGx5XG4gICAgLy8gY2FsbCB0aGUgY2FsbGJhY2sgd2l0aCB0aGUgcmV0dXJuIHZhbHVlLlxuICAgIGNhbGxiYWNrKHJlc3VsdCk7XG4gIH0gZWxzZSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF93YXJuaW5nMlsnZGVmYXVsdCddKHJlc3VsdCA9PT0gdW5kZWZpbmVkLCAnWW91IHNob3VsZCBub3QgXCJyZXR1cm5cIiBpbiBhIHRyYW5zaXRpb24gaG9vayB3aXRoIGEgY2FsbGJhY2sgYXJndW1lbnQ7IGNhbGwgdGhlIGNhbGxiYWNrIGluc3RlYWQnKSA6IHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBydW5UcmFuc2l0aW9uSG9vaztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0Lmxlbmd0aCA8IDEwIHx8ICgvXltzXFxXXSokLykudGVzdChmb3JtYXQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdUaGUgd2FybmluZyBmb3JtYXQgc2hvdWxkIGJlIGFibGUgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyAnICtcbiAgICAgICAgJ3dhcm5pbmcuIFBsZWFzZSwgdXNlIGEgbW9yZSBkZXNjcmlwdGl2ZSBmb3JtYXQgdGhhbjogJyArIGZvcm1hdFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICAgIH0pO1xuICAgICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICB9IGNhdGNoKHgpIHt9XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iXX0="}